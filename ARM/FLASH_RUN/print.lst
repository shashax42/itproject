   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 4
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"print.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.file 1 "source\\lcd\\print.c"
  20              		.section	.text._sputc,"ax",%progbits
  21              		.align	1
  22              		.global	_sputc
  23              		.syntax unified
  24              		.thumb
  25              		.thumb_func
  27              	_sputc:
  28              	.LVL0:
  29              	.LFB1:
   1:source\lcd/print.c **** /********************************************************************************/
   2:source\lcd/print.c **** /* print.c                                                                      */
   3:source\lcd/print.c **** /* STM32F407ZGT6                                                                */
   4:source\lcd/print.c **** /* (Lee ChangWoo HL2IRW  hl2irw@daum.net 010-8573-6860)                 	*/
   5:source\lcd/print.c **** /* stm32f4x_test								*/
   6:source\lcd/print.c **** /********************************************************************************/
   7:source\lcd/print.c **** #include <stdarg.h>
   8:source\lcd/print.c **** 
   9:source\lcd/print.c **** 
  10:source\lcd/print.c **** //void _stfp(double d, void *x);
  11:source\lcd/print.c **** unsigned int strlen (const char *str);
  12:source\lcd/print.c **** int errno;
  13:source\lcd/print.c **** 
  14:source\lcd/print.c **** typedef struct {
  15:source\lcd/print.c ****       char *ptr;
  16:source\lcd/print.c **** } __attribute__((packed)) StringOutputFile;
  17:source\lcd/print.c **** 
  18:source\lcd/print.c **** int _serror(char *f);
  19:source\lcd/print.c **** 
  20:source\lcd/print.c **** 
  21:source\lcd/print.c **** int _sputc1(int ch, char *fp)
  22:source\lcd/print.c **** {
  23:source\lcd/print.c ****       char *sf = (char *)fp;
  24:source\lcd/print.c ****       char *op = sf;
  25:source\lcd/print.c ****       int r = *op++ = ch;
  26:source\lcd/print.c ****       sf = op;
  27:source\lcd/print.c ****       return r;
  28:source\lcd/print.c **** }
  29:source\lcd/print.c **** 
  30:source\lcd/print.c **** 
  31:source\lcd/print.c **** int _sputc(int ch, char *fp)
  32:source\lcd/print.c **** {
  30              		.loc 1 32 1 view -0
  31              		.cfi_startproc
  32              		@ args = 0, pretend = 0, frame = 0
  33              		@ frame_needed = 0, uses_anonymous_args = 0
  34              		@ link register save eliminated.
  33:source\lcd/print.c ****       StringOutputFile *sf = (StringOutputFile *)fp;
  35              		.loc 1 33 7 view .LVU1
  34:source\lcd/print.c ****       char *op = sf->ptr;
  36              		.loc 1 34 7 view .LVU2
  35:source\lcd/print.c ****       int r = *op++ = ch;
  37              		.loc 1 35 7 view .LVU3
  38              		.loc 1 35 21 is_stmt 0 view .LVU4
  39 0000 0B68     		ldr	r3, [r1]	@ unaligned
  40 0002 03F8010B 		strb	r0, [r3], #1
  41              	.LVL1:
  36:source\lcd/print.c ****       sf->ptr = op;
  42              		.loc 1 36 7 is_stmt 1 view .LVU5
  37:source\lcd/print.c ****       return r;
  38:source\lcd/print.c **** }
  43              		.loc 1 38 1 is_stmt 0 view .LVU6
  44 0006 C0B2     		uxtb	r0, r0
  45              	.LVL2:
  36:source\lcd/print.c ****       sf->ptr = op;
  46              		.loc 1 36 15 view .LVU7
  47 0008 0B60     		str	r3, [r1]	@ unaligned
  37:source\lcd/print.c ****       return r;
  48              		.loc 1 37 7 is_stmt 1 view .LVU8
  49              		.loc 1 38 1 is_stmt 0 view .LVU9
  50 000a 7047     		bx	lr
  51              		.cfi_endproc
  52              	.LFE1:
  54              		.section	.text._serror,"ax",%progbits
  55              		.align	1
  56              		.global	_serror
  57              		.syntax unified
  58              		.thumb
  59              		.thumb_func
  61              	_serror:
  62              	.LVL3:
  63              	.LFB2:
  39:source\lcd/print.c **** 
  40:source\lcd/print.c **** 
  41:source\lcd/print.c **** #define IGNORE(x) ((x)=(x))
  42:source\lcd/print.c **** #define DecimalPoint '.'
  43:source\lcd/print.c **** 
  44:source\lcd/print.c **** 
  45:source\lcd/print.c **** int _serror(char *f)
  46:source\lcd/print.c **** {
  64              		.loc 1 46 1 is_stmt 1 view -0
  65              		.cfi_startproc
  66              		@ args = 0, pretend = 0, frame = 0
  67              		@ frame_needed = 0, uses_anonymous_args = 0
  68              		@ link register save eliminated.
  47:source\lcd/print.c ****       IGNORE(f);
  69              		.loc 1 47 7 view .LVU11
  48:source\lcd/print.c ****       return 0;
  70              		.loc 1 48 7 view .LVU12
  49:source\lcd/print.c **** }
  71              		.loc 1 49 1 is_stmt 0 view .LVU13
  72 0000 0020     		movs	r0, #0
  73              	.LVL4:
  74              		.loc 1 49 1 view .LVU14
  75 0002 7047     		bx	lr
  76              		.cfi_endproc
  77              	.LFE2:
  79              		.section	.text._sputc1,"ax",%progbits
  80              		.align	1
  81              		.global	_sputc1
  82              		.syntax unified
  83              		.thumb
  84              		.thumb_func
  86              	_sputc1:
  87              	.LVL5:
  88              	.LFB0:
  22:source\lcd/print.c ****       char *sf = (char *)fp;
  89              		.loc 1 22 1 is_stmt 1 view -0
  90              		.cfi_startproc
  91              		@ args = 0, pretend = 0, frame = 0
  92              		@ frame_needed = 0, uses_anonymous_args = 0
  93              		@ link register save eliminated.
  23:source\lcd/print.c ****       char *op = sf;
  94              		.loc 1 23 7 view .LVU16
  24:source\lcd/print.c ****       int r = *op++ = ch;
  95              		.loc 1 24 7 view .LVU17
  25:source\lcd/print.c ****       sf = op;
  96              		.loc 1 25 7 view .LVU18
  25:source\lcd/print.c ****       sf = op;
  97              		.loc 1 25 21 is_stmt 0 view .LVU19
  98 0000 0870     		strb	r0, [r1]
  99              	.LVL6:
  26:source\lcd/print.c ****       return r;
 100              		.loc 1 26 7 is_stmt 1 view .LVU20
  27:source\lcd/print.c **** }
 101              		.loc 1 27 7 view .LVU21
  28:source\lcd/print.c **** 
 102              		.loc 1 28 1 is_stmt 0 view .LVU22
 103 0002 C0B2     		uxtb	r0, r0
 104              	.LVL7:
  28:source\lcd/print.c **** 
 105              		.loc 1 28 1 view .LVU23
 106 0004 7047     		bx	lr
 107              		.cfi_endproc
 108              	.LFE0:
 110              		.section	.text.is_digit,"ax",%progbits
 111              		.align	1
 112              		.global	is_digit
 113              		.syntax unified
 114              		.thumb
 115              		.thumb_func
 117              	is_digit:
 118              	.LVL8:
 119              	.LFB3:
  50:source\lcd/print.c **** 
  51:source\lcd/print.c **** 
  52:source\lcd/print.c **** typedef struct {
  53:source\lcd/print.c ****       int flags;
  54:source\lcd/print.c ****       char *prefix;
  55:source\lcd/print.c ****       int precision;
  56:source\lcd/print.c ****       int before_dot;
  57:source\lcd/print.c ****       int after_dot;
  58:source\lcd/print.c ****       double d;
  59:source\lcd/print.c **** } fp_print_rec;
  60:source\lcd/print.c **** 
  61:source\lcd/print.c **** 
  62:source\lcd/print.c **** typedef int fp_print(int ch, char buff[], fp_print_rec *p);
  63:source\lcd/print.c **** 
  64:source\lcd/print.c **** 
  65:source\lcd/print.c **** typedef struct {
  66:source\lcd/print.c ****       fp_print_rec fpr;
  67:source\lcd/print.c ****       fp_print *fn;
  68:source\lcd/print.c ****       int (*putc)(int, char *);
  69:source\lcd/print.c ****       int (*ferror)(char *);
  70:source\lcd/print.c ****       char *hextab;
  71:source\lcd/print.c ****       int width;
  72:source\lcd/print.c ****       unsigned long long llval;
  73:source\lcd/print.c **** } printf_display_rec;
  74:source\lcd/print.c **** 
  75:source\lcd/print.c **** #define _LJUSTIFY         0x1
  76:source\lcd/print.c **** #define _SIGNED           0x2
  77:source\lcd/print.c **** #define _BLANKER          0x4
  78:source\lcd/print.c **** #define _VARIANT          0x8
  79:source\lcd/print.c **** #define _PRECGIVEN       0x10
  80:source\lcd/print.c **** #define _LONGSPEC        0x20
  81:source\lcd/print.c **** #define _LLSPEC          0x40
  82:source\lcd/print.c **** #define _SHORTSPEC       0x80
  83:source\lcd/print.c **** #define _PADZERO        0x100    /* *** DEPRECATED FEATURE *** */
  84:source\lcd/print.c **** #define _FPCONV         0x200
  85:source\lcd/print.c **** #define intofdigit(x) ((x)-'0')
  86:source\lcd/print.c **** 
  87:source\lcd/print.c **** #define xputc(dr, ch, f) (dr->putc(ch, f))
  88:source\lcd/print.c **** 
  89:source\lcd/print.c **** #define pr_padding(dr, ch, n, f)  while (--n>=0) charcount++, xputc(dr, ch, f);
  90:source\lcd/print.c **** 
  91:source\lcd/print.c **** #define pre_padding(dr, f)                                                \
  92:source\lcd/print.c ****         if (!(flags&_LJUSTIFY))                                           \
  93:source\lcd/print.c ****         {   char padchar = flags & _PADZERO ? '0' : ' ';                  \
  94:source\lcd/print.c ****             pr_padding(dr, padchar, width, f); }
  95:source\lcd/print.c **** 
  96:source\lcd/print.c **** #define post_padding(dr, f)                                               \
  97:source\lcd/print.c ****         if (flags&_LJUSTIFY)                                              \
  98:source\lcd/print.c ****         {   pr_padding(dr, ' ', width, f); }
  99:source\lcd/print.c **** #define FLOATING_WIDTH 18
 100:source\lcd/print.c **** typedef enum { fp_ord, fp_nan, fp_inf } fp_type;
 101:source\lcd/print.c **** 
 102:source\lcd/print.c **** int is_digit (int c)
 103:source\lcd/print.c **** {
 120              		.loc 1 103 1 is_stmt 1 view -0
 121              		.cfi_startproc
 122              		@ args = 0, pretend = 0, frame = 0
 123              		@ frame_needed = 0, uses_anonymous_args = 0
 124              		@ link register save eliminated.
 104:source\lcd/print.c ****       return (unsigned int)(c - '0') <= 9;
 125              		.loc 1 104 7 view .LVU25
 126              		.loc 1 104 31 is_stmt 0 view .LVU26
 127 0000 3038     		subs	r0, r0, #48
 128              	.LVL9:
 105:source\lcd/print.c **** }
 129              		.loc 1 105 1 view .LVU27
 130 0002 0928     		cmp	r0, #9
 131 0004 8CBF     		ite	hi
 132 0006 0020     		movhi	r0, #0
 133              	.LVL10:
 134              		.loc 1 105 1 view .LVU28
 135 0008 0120     		movls	r0, #1
 136 000a 7047     		bx	lr
 137              		.cfi_endproc
 138              	.LFE3:
 140              		.section	.rodata.__vfprintf.str1.1,"aMS",%progbits,1
 141              	.LC0:
 142 0000 305800   		.ascii	"0X\000"
 143              	.LC1:
 144 0003 00       		.ascii	"\000"
 145              	.LC2:
 146 0004 307800   		.ascii	"0x\000"
 147              	.LC3:
 148 0007 4000     		.ascii	"@\000"
 149              	.LC4:
 150 0009 3000     		.ascii	"0\000"
 151              	.LC5:
 152 000b 2B00     		.ascii	"+\000"
 153              	.LC6:
 154 000d 2D00     		.ascii	"-\000"
 155              	.LC7:
 156 000f 2000     		.ascii	" \000"
 157              	.LC8:
 158 0011 30313233 		.ascii	"0123456789ABCDEF\000"
 158      34353637 
 158      38394142 
 158      43444546 
 158      00
 159              	.LC9:
 160 0022 30313233 		.ascii	"0123456789abcdef\000"
 160      34353637 
 160      38396162 
 160      63646566 
 160      00
 161              		.global	__aeabi_uldivmod
 162              		.section	.text.__vfprintf,"ax",%progbits
 163              		.align	1
 164              		.global	__vfprintf
 165              		.syntax unified
 166              		.thumb
 167              		.thumb_func
 169              	__vfprintf:
 170              	.LVL11:
 171              	.LFB5:
 106:source\lcd/print.c **** 
 107:source\lcd/print.c **** 
 108:source\lcd/print.c **** static int printf_display (char *p, int ch, printf_display_rec *dr, unsigned int v)
 109:source\lcd/print.c **** {
 110:source\lcd/print.c ****       int len = 0, charcount = 0;
 111:source\lcd/print.c ****       char buff[32];       /* used to accumulate value to print    */
 112:source\lcd/print.c ****       int flags = dr->fpr.flags;
 113:source\lcd/print.c ****       dr->fpr.before_dot = -1, dr->fpr.after_dot = -1;
 114:source\lcd/print.c ****       if (!(dr->fpr.flags & (_FPCONV + _PRECGIVEN))) dr->fpr.precision = 1;
 115:source\lcd/print.c ****       switch (ch) {
 116:source\lcd/print.c **** 	 case 'p':
 117:source\lcd/print.c **** 	 case 'X':
 118:source\lcd/print.c **** 	 case 'x':
 119:source\lcd/print.c **** 	   if (flags & _LLSPEC) {
 120:source\lcd/print.c **** 	      unsigned long long w = dr->llval;
 121:source\lcd/print.c **** 	      while (w != 0) {
 122:source\lcd/print.c **** 		    buff[len++] = dr->hextab[(int)w & 0xf];
 123:source\lcd/print.c **** 		    w = w >> 4;
 124:source\lcd/print.c **** 	      }
 125:source\lcd/print.c **** 	   } else {
 126:source\lcd/print.c **** 	      while (v != 0) {
 127:source\lcd/print.c **** 		    buff[len++] = dr->hextab[v & 0xf];
 128:source\lcd/print.c **** 		    v = v >> 4;
 129:source\lcd/print.c **** 	      }
 130:source\lcd/print.c **** 	   }
 131:source\lcd/print.c **** 	   break;
 132:source\lcd/print.c **** 	 case 'o':
 133:source\lcd/print.c **** 	   if (flags & _LLSPEC) {
 134:source\lcd/print.c **** 	      unsigned long long w = dr->llval;
 135:source\lcd/print.c **** 	      while (w != 0) {
 136:source\lcd/print.c **** 		    buff[len++] = dr->hextab[(int)w & 7];
 137:source\lcd/print.c **** 		    w = w >> 3;
 138:source\lcd/print.c **** 	      }
 139:source\lcd/print.c **** 	   } else {
 140:source\lcd/print.c **** 	      while (v != 0) {
 141:source\lcd/print.c **** 		    buff[len++] = '0' + (v & 7);
 142:source\lcd/print.c **** 		    v = v >> 3;
 143:source\lcd/print.c **** 	      }
 144:source\lcd/print.c **** 	   }
 145:source\lcd/print.c **** 	   if (flags & _VARIANT) dr->fpr.precision--;
 146:source\lcd/print.c **** 	   break;
 147:source\lcd/print.c **** 	 case 'u':
 148:source\lcd/print.c **** 	 case 'i':
 149:source\lcd/print.c **** 	 case 'd':
 150:source\lcd/print.c **** 	   if (flags & _LLSPEC) {
 151:source\lcd/print.c **** 	      unsigned long long w = dr->llval;
 152:source\lcd/print.c **** 	      while (w != 0) {
 153:source\lcd/print.c **** 		    buff[len++] = '0' + (char)(w % 10);
 154:source\lcd/print.c ****                     w = w / 10;
 155:source\lcd/print.c ****               }
 156:source\lcd/print.c ****            } else {
 157:source\lcd/print.c ****               while (v != 0) {
 158:source\lcd/print.c **** 		    buff[len++] = '0' + (char)(v % 10);
 159:source\lcd/print.c **** 		    v = v / 10;
 160:source\lcd/print.c **** 	      }
 161:source\lcd/print.c **** 	   }
 162:source\lcd/print.c **** 	   break;
 163:source\lcd/print.c ****          default:
 164:source\lcd/print.c **** 	   buff[0] = '0';
 165:source\lcd/print.c ****            buff[1] = DecimalPoint;
 166:source\lcd/print.c ****            buff[2] = '0';
 167:source\lcd/print.c ****            len = 3;
 168:source\lcd/print.c ****            break;
 169:source\lcd/print.c ****       }
 170:source\lcd/print.c ****       {
 171:source\lcd/print.c ****       int precision;
 172:source\lcd/print.c ****       int width = dr->width;
 173:source\lcd/print.c ****       if (flags & _FPCONV) {
 174:source\lcd/print.c **** 	 precision = 0;
 175:source\lcd/print.c **** 	 if (dr->fpr.before_dot>0) precision = dr->fpr.before_dot-1;
 176:source\lcd/print.c **** 	 if (dr->fpr.after_dot>0) precision += dr->fpr.after_dot-1;
 177:source\lcd/print.c ****       } else {
 178:source\lcd/print.c ****          precision = dr->fpr.precision;
 179:source\lcd/print.c ****          if ((precision -= len)<0) precision = 0;
 180:source\lcd/print.c ****       }
 181:source\lcd/print.c ****       width -= (precision + len + strlen(dr->fpr.prefix));
 182:source\lcd/print.c ****       if (!(flags & _PADZERO)) pre_padding(dr, p);
 183:source\lcd/print.c ****       {
 184:source\lcd/print.c ****       int c;                                      /* prefix    */
 185:source\lcd/print.c ****       char *prefix = dr->fpr.prefix;
 186:source\lcd/print.c ****       for (; (c=*prefix++)!=0; charcount++) xputc(dr, c, p);
 187:source\lcd/print.c ****       }
 188:source\lcd/print.c ****       pre_padding(dr, p);
 189:source\lcd/print.c ****       if (flags & _FPCONV) {
 190:source\lcd/print.c **** 	 int i, c;
 191:source\lcd/print.c ****          for (i = 0; i<len; i++) {
 192:source\lcd/print.c **** 	     switch (c = buff[i]) {
 193:source\lcd/print.c ****                 case '<':
 194:source\lcd/print.c **** 		  pr_padding(dr, '0', dr->fpr.before_dot, p);
 195:source\lcd/print.c **** 		  break;
 196:source\lcd/print.c **** 		case '>':
 197:source\lcd/print.c **** 	       	  pr_padding(dr, '0', dr->fpr.after_dot, p);
 198:source\lcd/print.c **** 	          break;
 199:source\lcd/print.c **** 	        default:
 200:source\lcd/print.c **** 	      	  xputc(dr, c, p);
 201:source\lcd/print.c **** 	          charcount++;
 202:source\lcd/print.c **** 	          break;
 203:source\lcd/print.c **** 	     }
 204:source\lcd/print.c **** 	 }
 205:source\lcd/print.c ****       } else {
 206:source\lcd/print.c **** 	 pr_padding(dr, '0', precision, p);
 207:source\lcd/print.c **** 	 charcount += len;
 208:source\lcd/print.c ****          while (len-- > 0) xputc(dr, buff[len], p);
 209:source\lcd/print.c ****       }
 210:source\lcd/print.c ****       post_padding(dr, p);
 211:source\lcd/print.c ****       return charcount;
 212:source\lcd/print.c ****       }
 213:source\lcd/print.c **** }
 214:source\lcd/print.c **** 
 215:source\lcd/print.c **** 
 216:source\lcd/print.c **** int __vfprintf (char *p, const char *fmt, va_list args, printf_display_rec *dr)
 217:source\lcd/print.c **** {
 172              		.loc 1 217 1 is_stmt 1 view -0
 173              		.cfi_startproc
 174              		@ args = 0, pretend = 0, frame = 64
 175              		@ frame_needed = 0, uses_anonymous_args = 0
 176              		.loc 1 217 1 is_stmt 0 view .LVU30
 177 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 178              		.cfi_def_cfa_offset 36
 179              		.cfi_offset 4, -36
 180              		.cfi_offset 5, -32
 181              		.cfi_offset 6, -28
 182              		.cfi_offset 7, -24
 183              		.cfi_offset 8, -20
 184              		.cfi_offset 9, -16
 185              		.cfi_offset 10, -12
 186              		.cfi_offset 11, -8
 187              		.cfi_offset 14, -4
 188 0004 91B0     		sub	sp, sp, #68
 189              		.cfi_def_cfa_offset 104
 190              		.loc 1 217 1 view .LVU31
 191 0006 0E46     		mov	r6, r1
 192 0008 0190     		str	r0, [sp, #4]
 193 000a 1C46     		mov	r4, r3
 194 000c 1546     		mov	r5, r2
 195              	.LVL12:
 218:source\lcd/print.c ****       int ch, charcount = 0;
 196              		.loc 1 218 7 is_stmt 1 view .LVU32
 219:source\lcd/print.c ****       while ((ch = *fmt++) != 0) {
 197              		.loc 1 219 7 view .LVU33
 218:source\lcd/print.c ****       int ch, charcount = 0;
 198              		.loc 1 218 15 is_stmt 0 view .LVU34
 199 000e 4FF00009 		mov	r9, #0
 200              	.LVL13:
 201              	.L6:
 202              		.loc 1 219 28 is_stmt 1 view .LVU35
 203              		.loc 1 219 18 is_stmt 0 view .LVU36
 204 0012 16F8010B 		ldrb	r0, [r6], #1	@ zero_extendqisi2
 205              	.LVL14:
 206              		.loc 1 219 28 view .LVU37
 207 0016 48B9     		cbnz	r0, .L141
 220:source\lcd/print.c ****       	    if (ch != '%') {
 221:source\lcd/print.c ****       	       xputc(dr, ch, p);
 222:source\lcd/print.c ****       	       charcount++;
 223:source\lcd/print.c ****       	    } else {
 224:source\lcd/print.c ****       	       int flags = 0, width = 0;
 225:source\lcd/print.c ****                unsigned int v = 0;
 226:source\lcd/print.c ****                for (;;) {
 227:source\lcd/print.c ****                    switch (ch = *fmt++) {
 228:source\lcd/print.c ****                       case '-':   flags = _LJUSTIFY | (flags & ~_PADZERO);
 229:source\lcd/print.c ****                         continue;
 230:source\lcd/print.c ****                       case '+':   flags |= _SIGNED;
 231:source\lcd/print.c ****                         continue;
 232:source\lcd/print.c ****                       case ' ':   flags |= _BLANKER;
 233:source\lcd/print.c ****                         continue;
 234:source\lcd/print.c ****                       case '#':   flags |= _VARIANT;
 235:source\lcd/print.c ****                         continue;
 236:source\lcd/print.c ****                       case '0':   flags |= _PADZERO;
 237:source\lcd/print.c ****                         continue;
 238:source\lcd/print.c ****                       default:
 239:source\lcd/print.c ****                         break;
 240:source\lcd/print.c ****                    }
 241:source\lcd/print.c ****                    break;
 242:source\lcd/print.c ****                }
 243:source\lcd/print.c ****                {
 244:source\lcd/print.c ****                int t = 0;
 245:source\lcd/print.c ****                if (ch == '*') {
 246:source\lcd/print.c ****                   t = va_arg(args, int);
 247:source\lcd/print.c ****                   if (t < 0) {
 248:source\lcd/print.c ****                      t = - t;
 249:source\lcd/print.c ****                      flags ^= _LJUSTIFY;
 250:source\lcd/print.c ****                   }
 251:source\lcd/print.c ****                   ch = *fmt++;
 252:source\lcd/print.c ****                } else {
 253:source\lcd/print.c ****                	  while (is_digit(ch)) {
 254:source\lcd/print.c ****                         t = t*10 + intofdigit(ch);
 255:source\lcd/print.c ****                         ch = *fmt++;
 256:source\lcd/print.c ****                   }
 257:source\lcd/print.c ****                }
 258:source\lcd/print.c ****                width = t>=0 ? t : 0;                 /* disallow -ve arg */
 259:source\lcd/print.c ****                }
 260:source\lcd/print.c ****                if (ch == '.') {                           /* precision spec */
 261:source\lcd/print.c ****                   int t = 0;
 262:source\lcd/print.c ****                   ch = *fmt++;
 263:source\lcd/print.c ****                   if (ch == '*') {
 264:source\lcd/print.c ****                      t = va_arg(args, int);
 265:source\lcd/print.c ****                      ch = *fmt++;
 266:source\lcd/print.c ****                   } else {
 267:source\lcd/print.c ****                      while (is_digit(ch)) {
 268:source\lcd/print.c ****                            t = t*10 + intofdigit(ch);
 269:source\lcd/print.c ****                            ch = *fmt++;
 270:source\lcd/print.c ****                      }
 271:source\lcd/print.c ****                   }
 272:source\lcd/print.c ****                   if (t >= 0) flags |= _PRECGIVEN, dr->fpr.precision = t;
 273:source\lcd/print.c ****                }
 274:source\lcd/print.c ****                if (ch == 'l' || ch == 'L') {
 275:source\lcd/print.c ****                   ch = *fmt++;
 276:source\lcd/print.c ****                   if (ch == 'l' || ch == 'L') {
 277:source\lcd/print.c ****                      flags |= _LLSPEC;
 278:source\lcd/print.c ****                      ch = *fmt++;
 279:source\lcd/print.c ****                   } else {
 280:source\lcd/print.c ****                     flags |= _LONGSPEC;
 281:source\lcd/print.c ****                   }
 282:source\lcd/print.c ****                } else if (ch == 'h') {
 283:source\lcd/print.c ****                   flags |= _SHORTSPEC;
 284:source\lcd/print.c ****                   ch = *fmt++;
 285:source\lcd/print.c ****                }
 286:source\lcd/print.c ****                switch (ch) {
 287:source\lcd/print.c ****                   case 'c':
 288:source\lcd/print.c ****                   default:
 289:source\lcd/print.c ****                     ch = va_arg(args, int);
 290:source\lcd/print.c ****                     width--;                        /* char width is 1       */
 291:source\lcd/print.c ****                     pre_padding(dr, p);
 292:source\lcd/print.c ****                     xputc(dr, ch, p);
 293:source\lcd/print.c ****                     charcount++;
 294:source\lcd/print.c ****                     post_padding(dr, p);
 295:source\lcd/print.c ****                     continue;
 296:source\lcd/print.c ****                   case 0:     fmt--;
 297:source\lcd/print.c ****                     continue;
 298:source\lcd/print.c ****                   case 'n':
 299:source\lcd/print.c ****                     if (flags & _SHORTSPEC) *va_arg(args, short *) = (short)charcount;
 300:source\lcd/print.c ****                     else if (flags & _LLSPEC) *va_arg(args, long long *) = charcount;
 301:source\lcd/print.c ****                     else if (flags & _LONGSPEC) *va_arg(args, long *) = charcount;
 302:source\lcd/print.c ****                     else *va_arg(args, int *) = charcount;
 303:source\lcd/print.c ****                     continue;
 304:source\lcd/print.c ****                   case 's':
 305:source\lcd/print.c ****                   {
 306:source\lcd/print.c ****                     char *str = va_arg(args, char *);
 307:source\lcd/print.c ****                     int i, n;
 308:source\lcd/print.c ****                     if (flags & _PRECGIVEN) {
 309:source\lcd/print.c ****                        int precision = dr->fpr.precision;
 310:source\lcd/print.c ****                        for (n = 0; n < precision && str[n] != 0; n++) continue;
 311:source\lcd/print.c ****                     } else n = strlen(str);
 312:source\lcd/print.c ****                     width -= n;
 313:source\lcd/print.c ****                     pre_padding(dr, p);
 314:source\lcd/print.c ****                     for (i=0; i<n; i++) xputc(dr, str[i], p);
 315:source\lcd/print.c ****                     charcount += n;
 316:source\lcd/print.c ****                     post_padding(dr, p);
 317:source\lcd/print.c ****                   }
 318:source\lcd/print.c ****                     continue;
 319:source\lcd/print.c ****                   case 'X':
 320:source\lcd/print.c ****                     if (flags & _LLSPEC) dr->llval = va_arg(args, long long);else v = va_arg(args, 
 321:source\lcd/print.c ****                     if (flags & _SHORTSPEC) v = (unsigned short)v;
 322:source\lcd/print.c ****                     dr->hextab = "0123456789ABCDEF";
 323:source\lcd/print.c ****                     dr->fpr.prefix = (flags&_VARIANT) ? "0X" : "";
 324:source\lcd/print.c ****                     if (flags & _PRECGIVEN) flags &= ~_PADZERO;
 325:source\lcd/print.c ****                     break;
 326:source\lcd/print.c ****                   case 'x':
 327:source\lcd/print.c ****                     if (flags & _LLSPEC) dr->llval = va_arg(args, long long);else v = va_arg(args, 
 328:source\lcd/print.c ****                     if (flags & _SHORTSPEC) v = (unsigned short)v;
 329:source\lcd/print.c ****                     dr->hextab = "0123456789abcdef";
 330:source\lcd/print.c ****                     dr->fpr.prefix = (flags&_VARIANT) ? "0x" : "";
 331:source\lcd/print.c ****                     if (flags & _PRECGIVEN) flags &= ~_PADZERO;
 332:source\lcd/print.c ****                     break;
 333:source\lcd/print.c ****                   case 'p':
 334:source\lcd/print.c ****                     v = (unsigned int)va_arg(args, void *);
 335:source\lcd/print.c ****                     dr->hextab = "0123456789abcdef";
 336:source\lcd/print.c ****                     dr->fpr.prefix = (flags&_VARIANT) ? "@" : "";
 337:source\lcd/print.c ****                     dr->fpr.precision = 8;
 338:source\lcd/print.c ****                     flags |= _PRECGIVEN;
 339:source\lcd/print.c ****                     break;
 340:source\lcd/print.c ****                   case 'o':
 341:source\lcd/print.c ****                     if (flags & _LLSPEC) dr->llval = va_arg(args, long long);else v = va_arg(args, 
 342:source\lcd/print.c ****                     if (flags & _SHORTSPEC) v = (unsigned short)v;
 343:source\lcd/print.c ****                     dr->fpr.prefix = (flags&_VARIANT) ? "0" : "";
 344:source\lcd/print.c ****                     if (flags & _PRECGIVEN) flags &= ~_PADZERO;
 345:source\lcd/print.c ****                     break;
 346:source\lcd/print.c ****                   case 'u':
 347:source\lcd/print.c ****                     if (flags & _LLSPEC) dr->llval = va_arg(args, long long);else v = va_arg(args, 
 348:source\lcd/print.c ****                     if (flags & _SHORTSPEC) v = (unsigned short)v;
 349:source\lcd/print.c ****                     dr->fpr.prefix = "";
 350:source\lcd/print.c ****                     if (flags & _PRECGIVEN) flags &= ~_PADZERO;
 351:source\lcd/print.c ****                     break;
 352:source\lcd/print.c ****                   case 'i':
 353:source\lcd/print.c ****                   case 'd':
 354:source\lcd/print.c ****                   {
 355:source\lcd/print.c ****                     int w;
 356:source\lcd/print.c ****                     if (flags & _LLSPEC) {
 357:source\lcd/print.c ****                        dr->llval = va_arg(args, long long);
 358:source\lcd/print.c ****                        if ((long long)dr->llval < 0) {
 359:source\lcd/print.c ****                           dr->llval = -dr->llval;
 360:source\lcd/print.c ****                           w = -1;
 361:source\lcd/print.c ****                        } else w = 0;
 362:source\lcd/print.c ****                     } else {
 363:source\lcd/print.c ****                        w = va_arg(args, int);
 364:source\lcd/print.c ****                        if (flags & _SHORTSPEC) w = (signed short)w;
 365:source\lcd/print.c ****                        v = (w < 0) ? -w : w;
 366:source\lcd/print.c ****                     }
 367:source\lcd/print.c ****                     dr->fpr.prefix = (w < 0) ? "-" : (flags & _SIGNED) ? "+" : (flags & _BLANKER) ?
 368:source\lcd/print.c ****                   }
 369:source\lcd/print.c ****                     if (flags & _PRECGIVEN) flags &= ~_PADZERO;
 370:source\lcd/print.c ****                     break;
 371:source\lcd/print.c ****                   case 'f':
 372:source\lcd/print.c ****                   case 'e':
 373:source\lcd/print.c ****                   case 'E':
 374:source\lcd/print.c ****                   case 'g':
 375:source\lcd/print.c ****                   case 'G':
 376:source\lcd/print.c ****                     // Not SUPPORT
 377:source\lcd/print.c ****                     flags |= _FPCONV;
 378:source\lcd/print.c ****                     if (!(flags & _PRECGIVEN)) dr->fpr.precision = 6;
 379:source\lcd/print.c ****                     {
 380:source\lcd/print.c ****                     //int w = va_arg(args, int);
 381:source\lcd/print.c ****                     va_arg(args, int);
 382:source\lcd/print.c ****                     dr->fpr.prefix = (flags&_SIGNED) ? "+" : (flags&_BLANKER) ? " " : "";
 383:source\lcd/print.c ****                     }
 384:source\lcd/print.c ****                     break;
 385:source\lcd/print.c ****                }
 386:source\lcd/print.c ****                dr->width = width;
 387:source\lcd/print.c ****                dr->fpr.flags = flags;
 388:source\lcd/print.c ****                charcount += printf_display(p, ch, dr, v);
 389:source\lcd/print.c ****                continue;
 390:source\lcd/print.c ****             }
 391:source\lcd/print.c ****       }
 392:source\lcd/print.c ****       return dr->ferror(p) ? 0 : charcount;
 208              		.loc 1 392 7 is_stmt 1 view .LVU38
 209              		.loc 1 392 14 is_stmt 0 view .LVU39
 210 0018 A36A     		ldr	r3, [r4, #40]
 211 001a 0198     		ldr	r0, [sp, #4]
 212              	.LVL15:
 213              		.loc 1 392 14 view .LVU40
 214 001c 9847     		blx	r3
 215              	.LVL16:
 216              		.loc 1 392 32 view .LVU41
 217 001e 0028     		cmp	r0, #0
 393:source\lcd/print.c **** }
 218              		.loc 1 393 1 view .LVU42
 219 0020 0CBF     		ite	eq
 220 0022 4846     		moveq	r0, r9
 221 0024 0020     		movne	r0, #0
 222 0026 11B0     		add	sp, sp, #68
 223              		.cfi_remember_state
 224              		.cfi_def_cfa_offset 36
 225              		@ sp needed
 226 0028 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 227              	.LVL17:
 228              	.L141:
 229              		.cfi_restore_state
 220:source\lcd/print.c ****       	    if (ch != '%') {
 230              		.loc 1 220 12 is_stmt 1 view .LVU43
 220:source\lcd/print.c ****       	    if (ch != '%') {
 231              		.loc 1 220 15 is_stmt 0 view .LVU44
 232 002c 2528     		cmp	r0, #37
 233 002e 05D0     		beq	.L143
 221:source\lcd/print.c ****       	       charcount++;
 234              		.loc 1 221 15 is_stmt 1 view .LVU45
 235 0030 636A     		ldr	r3, [r4, #36]
 236 0032 0199     		ldr	r1, [sp, #4]
 237 0034 9847     		blx	r3
 238              	.LVL18:
 222:source\lcd/print.c ****       	    } else {
 239              		.loc 1 222 15 view .LVU46
 222:source\lcd/print.c ****       	    } else {
 240              		.loc 1 222 24 is_stmt 0 view .LVU47
 241 0036 09F10109 		add	r9, r9, #1
 242              	.LVL19:
 222:source\lcd/print.c ****       	    } else {
 243              		.loc 1 222 24 view .LVU48
 244 003a EAE7     		b	.L6
 245              	.LVL20:
 246              	.L143:
 247              	.LBB40:
 224:source\lcd/print.c ****                unsigned int v = 0;
 248              		.loc 1 224 19 view .LVU49
 249 003c 4FF0000A 		mov	r10, #0
 250 0040 16E0     		b	.L7
 251              	.LVL21:
 252              	.L10:
 227:source\lcd/print.c ****                       case '-':   flags = _LJUSTIFY | (flags & ~_PADZERO);
 253              		.loc 1 227 20 view .LVU50
 254 0042 2D2B     		cmp	r3, #45
 255 0044 0DD0     		beq	.L14
 256 0046 302B     		cmp	r3, #48
 257 0048 40D0     		beq	.L15
 258              	.L18:
 224:source\lcd/print.c ****                unsigned int v = 0;
 259              		.loc 1 224 19 view .LVU51
 260 004a 1646     		mov	r6, r2
 261              	.LBB41:
 244:source\lcd/print.c ****                if (ch == '*') {
 262              		.loc 1 244 20 view .LVU52
 263 004c 0027     		movs	r7, #0
 254:source\lcd/print.c ****                         ch = *fmt++;
 264              		.loc 1 254 30 view .LVU53
 265 004e 0A21     		movs	r1, #10
 266              	.LVL22:
 267              	.L20:
 253:source\lcd/print.c ****                         t = t*10 + intofdigit(ch);
 268              		.loc 1 253 26 is_stmt 1 view .LVU54
 269              	.LBB42:
 270              	.LBI42:
 102:source\lcd/print.c **** {
 271              		.loc 1 102 5 view .LVU55
 272              	.LBB43:
 104:source\lcd/print.c **** }
 273              		.loc 1 104 7 view .LVU56
 104:source\lcd/print.c **** }
 274              		.loc 1 104 31 is_stmt 0 view .LVU57
 275 0050 A3F13002 		sub	r2, r3, #48
 276              	.LVL23:
 104:source\lcd/print.c **** }
 277              		.loc 1 104 31 view .LVU58
 278              	.LBE43:
 279              	.LBE42:
 253:source\lcd/print.c ****                         t = t*10 + intofdigit(ch);
 280              		.loc 1 253 26 view .LVU59
 281 0054 092A     		cmp	r2, #9
 282 0056 20D8     		bhi	.L22
 254:source\lcd/print.c ****                         ch = *fmt++;
 283              		.loc 1 254 25 is_stmt 1 view .LVU60
 255:source\lcd/print.c ****                   }
 284              		.loc 1 255 28 is_stmt 0 view .LVU61
 285 0058 16F8013B 		ldrb	r3, [r6], #1	@ zero_extendqisi2
 286              	.LVL24:
 254:source\lcd/print.c ****                         ch = *fmt++;
 287              		.loc 1 254 27 view .LVU62
 288 005c 01FB0727 		mla	r7, r1, r7, r2
 289              	.LVL25:
 255:source\lcd/print.c ****                   }
 290              		.loc 1 255 25 is_stmt 1 view .LVU63
 255:source\lcd/print.c ****                   }
 291              		.loc 1 255 25 is_stmt 0 view .LVU64
 292 0060 F6E7     		b	.L20
 293              	.LVL26:
 294              	.L14:
 255:source\lcd/print.c ****                   }
 295              		.loc 1 255 25 view .LVU65
 296              	.LBE41:
 228:source\lcd/print.c ****                         continue;
 297              		.loc 1 228 35 is_stmt 1 discriminator 4 view .LVU66
 228:source\lcd/print.c ****                         continue;
 298              		.loc 1 228 53 is_stmt 0 discriminator 4 view .LVU67
 299 0062 2AF4807A 		bic	r10, r10, #256
 300              	.LVL27:
 228:source\lcd/print.c ****                         continue;
 301              		.loc 1 228 53 discriminator 4 view .LVU68
 302 0066 2AF0010A 		bic	r10, r10, #1
 228:source\lcd/print.c ****                         continue;
 303              		.loc 1 228 41 discriminator 4 view .LVU69
 304 006a 4AF0010A 		orr	r10, r10, #1
 305              	.LVL28:
 229:source\lcd/print.c ****                       case '+':   flags |= _SIGNED;
 306              		.loc 1 229 25 is_stmt 1 discriminator 4 view .LVU70
 307              	.L17:
 227:source\lcd/print.c ****                       case '-':   flags = _LJUSTIFY | (flags & ~_PADZERO);
 308              		.loc 1 227 37 is_stmt 0 view .LVU71
 309 006e 1646     		mov	r6, r2
 310              	.LVL29:
 311              	.L7:
 226:source\lcd/print.c ****                    switch (ch = *fmt++) {
 312              		.loc 1 226 16 is_stmt 1 view .LVU72
 227:source\lcd/print.c ****                       case '-':   flags = _LJUSTIFY | (flags & ~_PADZERO);
 313              		.loc 1 227 20 view .LVU73
 227:source\lcd/print.c ****                       case '-':   flags = _LJUSTIFY | (flags & ~_PADZERO);
 314              		.loc 1 227 37 is_stmt 0 view .LVU74
 315 0070 3246     		mov	r2, r6
 316              	.LVL30:
 227:source\lcd/print.c ****                       case '-':   flags = _LJUSTIFY | (flags & ~_PADZERO);
 317              		.loc 1 227 33 view .LVU75
 318 0072 12F8013B 		ldrb	r3, [r2], #1	@ zero_extendqisi2
 319              	.LVL31:
 227:source\lcd/print.c ****                       case '-':   flags = _LJUSTIFY | (flags & ~_PADZERO);
 320              		.loc 1 227 20 view .LVU76
 321 0076 2B2B     		cmp	r3, #43
 322 0078 1FD0     		beq	.L9
 323 007a E2D8     		bhi	.L10
 324 007c 202B     		cmp	r3, #32
 325 007e 1FD0     		beq	.L11
 326 0080 232B     		cmp	r3, #35
 327 0082 20D0     		beq	.L12
 239:source\lcd/print.c ****                    }
 328              		.loc 1 239 25 is_stmt 1 view .LVU77
 241:source\lcd/print.c ****                }
 329              		.loc 1 241 20 view .LVU78
 330              	.LBB44:
 244:source\lcd/print.c ****                if (ch == '*') {
 331              		.loc 1 244 16 view .LVU79
 332              	.LVL32:
 245:source\lcd/print.c ****                   t = va_arg(args, int);
 333              		.loc 1 245 16 view .LVU80
 245:source\lcd/print.c ****                   t = va_arg(args, int);
 334              		.loc 1 245 19 is_stmt 0 view .LVU81
 335 0084 2A2B     		cmp	r3, #42
 336 0086 E0D1     		bne	.L18
 246:source\lcd/print.c ****                   if (t < 0) {
 337              		.loc 1 246 19 is_stmt 1 view .LVU82
 338              	.LVL33:
 246:source\lcd/print.c ****                   if (t < 0) {
 339              		.loc 1 246 21 is_stmt 0 view .LVU83
 340 0088 55F8047B 		ldr	r7, [r5], #4
 341              	.LVL34:
 247:source\lcd/print.c ****                      t = - t;
 342              		.loc 1 247 19 is_stmt 1 view .LVU84
 251:source\lcd/print.c ****                } else {
 343              		.loc 1 251 22 is_stmt 0 view .LVU85
 344 008c 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 345              	.LVL35:
 247:source\lcd/print.c ****                      t = - t;
 346              		.loc 1 247 22 view .LVU86
 347 008e 002F     		cmp	r7, #0
 248:source\lcd/print.c ****                      flags ^= _LJUSTIFY;
 348              		.loc 1 248 22 is_stmt 1 view .LVU87
 248:source\lcd/print.c ****                      flags ^= _LJUSTIFY;
 349              		.loc 1 248 24 is_stmt 0 view .LVU88
 350 0090 BCBF     		itt	lt
 351 0092 7F42     		rsblt	r7, r7, #0
 352              	.LVL36:
 249:source\lcd/print.c ****                   }
 353              		.loc 1 249 22 is_stmt 1 view .LVU89
 249:source\lcd/print.c ****                   }
 354              		.loc 1 249 28 is_stmt 0 view .LVU90
 355 0094 8AF0010A 		eorlt	r10, r10, #1
 356              	.LVL37:
 251:source\lcd/print.c ****                } else {
 357              		.loc 1 251 19 is_stmt 1 view .LVU91
 251:source\lcd/print.c ****                } else {
 358              		.loc 1 251 28 is_stmt 0 view .LVU92
 359 0098 0236     		adds	r6, r6, #2
 360              	.LVL38:
 361              	.L22:
 258:source\lcd/print.c ****                }
 362              		.loc 1 258 16 is_stmt 1 view .LVU93
 258:source\lcd/print.c ****                }
 363              		.loc 1 258 16 is_stmt 0 view .LVU94
 364              	.LBE44:
 260:source\lcd/print.c ****                   int t = 0;
 365              		.loc 1 260 16 is_stmt 1 view .LVU95
 260:source\lcd/print.c ****                   int t = 0;
 366              		.loc 1 260 19 is_stmt 0 view .LVU96
 367 009a 2E2B     		cmp	r3, #46
 368 009c 21D1     		bne	.L24
 369              	.LBB45:
 261:source\lcd/print.c ****                   ch = *fmt++;
 370              		.loc 1 261 19 is_stmt 1 view .LVU97
 371              	.LVL39:
 262:source\lcd/print.c ****                   if (ch == '*') {
 372              		.loc 1 262 19 view .LVU98
 262:source\lcd/print.c ****                   if (ch == '*') {
 373              		.loc 1 262 22 is_stmt 0 view .LVU99
 374 009e 3378     		ldrb	r3, [r6]	@ zero_extendqisi2
 375              	.LVL40:
 263:source\lcd/print.c ****                      t = va_arg(args, int);
 376              		.loc 1 263 19 is_stmt 1 view .LVU100
 263:source\lcd/print.c ****                      t = va_arg(args, int);
 377              		.loc 1 263 22 is_stmt 0 view .LVU101
 378 00a0 2A2B     		cmp	r3, #42
 379 00a2 16D0     		beq	.L25
 262:source\lcd/print.c ****                   if (ch == '*') {
 380              		.loc 1 262 28 view .LVU102
 381 00a4 721C     		adds	r2, r6, #1
 382              	.LVL41:
 261:source\lcd/print.c ****                   ch = *fmt++;
 383              		.loc 1 261 23 view .LVU103
 384 00a6 0021     		movs	r1, #0
 268:source\lcd/print.c ****                            ch = *fmt++;
 385              		.loc 1 268 33 view .LVU104
 386 00a8 0A26     		movs	r6, #10
 387              	.LVL42:
 388              	.L26:
 267:source\lcd/print.c ****                            t = t*10 + intofdigit(ch);
 389              		.loc 1 267 29 is_stmt 1 view .LVU105
 390              	.LBB46:
 391              	.LBI46:
 102:source\lcd/print.c **** {
 392              		.loc 1 102 5 view .LVU106
 393              	.LBB47:
 104:source\lcd/print.c **** }
 394              		.loc 1 104 7 view .LVU107
 104:source\lcd/print.c **** }
 395              		.loc 1 104 31 is_stmt 0 view .LVU108
 396 00aa A3F13000 		sub	r0, r3, #48
 397              	.LVL43:
 104:source\lcd/print.c **** }
 398              		.loc 1 104 31 view .LVU109
 399              	.LBE47:
 400              	.LBE46:
 267:source\lcd/print.c ****                            t = t*10 + intofdigit(ch);
 401              		.loc 1 267 29 view .LVU110
 402 00ae 0928     		cmp	r0, #9
 403 00b0 4AD9     		bls	.L28
 404              	.L27:
 272:source\lcd/print.c ****                }
 405              		.loc 1 272 31 is_stmt 1 discriminator 1 view .LVU111
 272:source\lcd/print.c ****                }
 406              		.loc 1 272 37 is_stmt 0 discriminator 1 view .LVU112
 407 00b2 4AF0100A 		orr	r10, r10, #16
 408              	.LVL44:
 272:source\lcd/print.c ****                }
 409              		.loc 1 272 70 discriminator 1 view .LVU113
 410 00b6 A160     		str	r1, [r4, #8]
 411 00b8 12E0     		b	.L212
 412              	.LVL45:
 413              	.L9:
 272:source\lcd/print.c ****                }
 414              		.loc 1 272 70 discriminator 1 view .LVU114
 415              	.LBE45:
 230:source\lcd/print.c ****                         continue;
 416              		.loc 1 230 35 is_stmt 1 discriminator 3 view .LVU115
 230:source\lcd/print.c ****                         continue;
 417              		.loc 1 230 41 is_stmt 0 discriminator 3 view .LVU116
 418 00ba 4AF0020A 		orr	r10, r10, #2
 419              	.LVL46:
 231:source\lcd/print.c ****                       case ' ':   flags |= _BLANKER;
 420              		.loc 1 231 25 is_stmt 1 discriminator 3 view .LVU117
 421 00be D6E7     		b	.L17
 422              	.L11:
 232:source\lcd/print.c ****                         continue;
 423              		.loc 1 232 35 discriminator 1 view .LVU118
 232:source\lcd/print.c ****                         continue;
 424              		.loc 1 232 41 is_stmt 0 discriminator 1 view .LVU119
 425 00c0 4AF0040A 		orr	r10, r10, #4
 426              	.LVL47:
 233:source\lcd/print.c ****                       case '#':   flags |= _VARIANT;
 427              		.loc 1 233 25 is_stmt 1 discriminator 1 view .LVU120
 428 00c4 D3E7     		b	.L17
 429              	.L12:
 234:source\lcd/print.c ****                         continue;
 430              		.loc 1 234 35 discriminator 2 view .LVU121
 234:source\lcd/print.c ****                         continue;
 431              		.loc 1 234 41 is_stmt 0 discriminator 2 view .LVU122
 432 00c6 4AF0080A 		orr	r10, r10, #8
 433              	.LVL48:
 235:source\lcd/print.c ****                       case '0':   flags |= _PADZERO;
 434              		.loc 1 235 25 is_stmt 1 discriminator 2 view .LVU123
 435 00ca D0E7     		b	.L17
 436              	.L15:
 236:source\lcd/print.c ****                         continue;
 437              		.loc 1 236 35 discriminator 5 view .LVU124
 236:source\lcd/print.c ****                         continue;
 438              		.loc 1 236 41 is_stmt 0 discriminator 5 view .LVU125
 439 00cc 4AF4807A 		orr	r10, r10, #256
 440              	.LVL49:
 237:source\lcd/print.c ****                       default:
 441              		.loc 1 237 25 is_stmt 1 discriminator 5 view .LVU126
 442 00d0 CDE7     		b	.L17
 443              	.LVL50:
 444              	.L25:
 445              	.LBB48:
 264:source\lcd/print.c ****                      ch = *fmt++;
 446              		.loc 1 264 22 view .LVU127
 264:source\lcd/print.c ****                      ch = *fmt++;
 447              		.loc 1 264 24 is_stmt 0 view .LVU128
 448 00d2 55F8041B 		ldr	r1, [r5], #4
 449              	.LVL51:
 265:source\lcd/print.c ****                   } else {
 450              		.loc 1 265 22 is_stmt 1 view .LVU129
 265:source\lcd/print.c ****                   } else {
 451              		.loc 1 265 25 is_stmt 0 view .LVU130
 452 00d6 7378     		ldrb	r3, [r6, #1]	@ zero_extendqisi2
 453              	.LVL52:
 272:source\lcd/print.c ****                }
 454              		.loc 1 272 22 view .LVU131
 455 00d8 0029     		cmp	r1, #0
 265:source\lcd/print.c ****                   } else {
 456              		.loc 1 265 31 view .LVU132
 457 00da 06F10202 		add	r2, r6, #2
 458              	.LVL53:
 272:source\lcd/print.c ****                }
 459              		.loc 1 272 19 is_stmt 1 view .LVU133
 272:source\lcd/print.c ****                }
 460              		.loc 1 272 22 is_stmt 0 view .LVU134
 461 00de E8DA     		bge	.L27
 462              	.L212:
 272:source\lcd/print.c ****                }
 463              		.loc 1 272 70 discriminator 1 view .LVU135
 464 00e0 1646     		mov	r6, r2
 465              	.LVL54:
 466              	.L24:
 272:source\lcd/print.c ****                }
 467              		.loc 1 272 70 discriminator 1 view .LVU136
 468              	.LBE48:
 274:source\lcd/print.c ****                   ch = *fmt++;
 469              		.loc 1 274 16 is_stmt 1 view .LVU137
 274:source\lcd/print.c ****                   ch = *fmt++;
 470              		.loc 1 274 19 is_stmt 0 view .LVU138
 471 00e2 23F02002 		bic	r2, r3, #32
 472 00e6 4C2A     		cmp	r2, #76
 473 00e8 33D1     		bne	.L29
 275:source\lcd/print.c ****                   if (ch == 'l' || ch == 'L') {
 474              		.loc 1 275 19 is_stmt 1 view .LVU139
 475              	.LVL55:
 275:source\lcd/print.c ****                   if (ch == 'l' || ch == 'L') {
 476              		.loc 1 275 24 is_stmt 0 view .LVU140
 477 00ea 3378     		ldrb	r3, [r6]	@ zero_extendqisi2
 478              	.LVL56:
 276:source\lcd/print.c ****                      flags |= _LLSPEC;
 479              		.loc 1 276 19 is_stmt 1 view .LVU141
 276:source\lcd/print.c ****                      flags |= _LLSPEC;
 480              		.loc 1 276 22 is_stmt 0 view .LVU142
 481 00ec 03F0DF02 		and	r2, r3, #223
 482 00f0 4C2A     		cmp	r2, #76
 277:source\lcd/print.c ****                      ch = *fmt++;
 483              		.loc 1 277 22 is_stmt 1 view .LVU143
 278:source\lcd/print.c ****                   } else {
 484              		.loc 1 278 25 is_stmt 0 view .LVU144
 485 00f2 03BF     		ittte	eq
 486 00f4 7378     		ldrbeq	r3, [r6, #1]	@ zero_extendqisi2
 487              	.LVL57:
 277:source\lcd/print.c ****                      ch = *fmt++;
 488              		.loc 1 277 28 view .LVU145
 489 00f6 4AF0400A 		orreq	r10, r10, #64
 490              	.LVL58:
 278:source\lcd/print.c ****                   } else {
 491              		.loc 1 278 22 is_stmt 1 view .LVU146
 278:source\lcd/print.c ****                   } else {
 492              		.loc 1 278 31 is_stmt 0 view .LVU147
 493 00fa 0236     		addeq	r6, r6, #2
 494              	.LVL59:
 275:source\lcd/print.c ****                   if (ch == 'l' || ch == 'L') {
 495              		.loc 1 275 28 view .LVU148
 496 00fc 0136     		addne	r6, r6, #1
 280:source\lcd/print.c ****                   }
 497              		.loc 1 280 21 is_stmt 1 view .LVU149
 280:source\lcd/print.c ****                   }
 498              		.loc 1 280 27 is_stmt 0 view .LVU150
 499 00fe 18BF     		it	ne
 500 0100 4AF0200A 		orrne	r10, r10, #32
 501              	.LVL60:
 502              	.L31:
 286:source\lcd/print.c ****                   case 'c':
 503              		.loc 1 286 16 is_stmt 1 view .LVU151
 504 0104 782B     		cmp	r3, #120
 505 0106 75DC     		bgt	.L32
 286:source\lcd/print.c ****                   case 'c':
 506              		.loc 1 286 16 is_stmt 0 view .LVU152
 507 0108 572B     		cmp	r3, #87
 508 010a 29DC     		bgt	.L33
 509 010c 002B     		cmp	r3, #0
 510 010e 00F0AE80 		beq	.L34
 511 0112 23F00202 		bic	r2, r3, #2
 512 0116 452A     		cmp	r2, #69
 513 0118 6CD1     		bne	.L32
 514              	.L35:
 377:source\lcd/print.c ****                     if (!(flags & _PRECGIVEN)) dr->fpr.precision = 6;
 515              		.loc 1 377 21 is_stmt 1 view .LVU153
 378:source\lcd/print.c ****                     {
 516              		.loc 1 378 24 is_stmt 0 view .LVU154
 517 011a 1AF0100F 		tst	r10, #16
 378:source\lcd/print.c ****                     {
 518              		.loc 1 378 66 view .LVU155
 519 011e 04BF     		itt	eq
 520 0120 0622     		moveq	r2, #6
 521 0122 A260     		streq	r2, [r4, #8]
 382:source\lcd/print.c ****                     }
 522              		.loc 1 382 60 view .LVU156
 523 0124 1AF0020F 		tst	r10, #2
 377:source\lcd/print.c ****                     if (!(flags & _PRECGIVEN)) dr->fpr.precision = 6;
 524              		.loc 1 377 27 view .LVU157
 525 0128 4AF40071 		orr	r1, r10, #512
 526              	.LVL61:
 378:source\lcd/print.c ****                     {
 527              		.loc 1 378 21 is_stmt 1 view .LVU158
 378:source\lcd/print.c ****                     {
 528              		.loc 1 378 48 view .LVU159
 381:source\lcd/print.c ****                     dr->fpr.prefix = (flags&_SIGNED) ? "+" : (flags&_BLANKER) ? " " : "";
 529              		.loc 1 381 21 view .LVU160
 530 012c 05F10405 		add	r5, r5, #4
 531              	.LVL62:
 382:source\lcd/print.c ****                     }
 532              		.loc 1 382 21 view .LVU161
 382:source\lcd/print.c ****                     }
 533              		.loc 1 382 60 is_stmt 0 view .LVU162
 534 0130 40F0DF81 		bne	.L155
 382:source\lcd/print.c ****                     }
 535              		.loc 1 382 85 discriminator 1 view .LVU163
 536 0134 B748     		ldr	r0, .L221
 537 0136 B84A     		ldr	r2, .L221+4
 538 0138 1AF0040F 		tst	r10, #4
 539 013c 08BF     		it	eq
 540 013e 0246     		moveq	r2, r0
 541              	.L91:
 382:source\lcd/print.c ****                     }
 542              		.loc 1 382 36 discriminator 8 view .LVU164
 543 0140 6260     		str	r2, [r4, #4]
 384:source\lcd/print.c ****                }
 544              		.loc 1 384 21 is_stmt 1 discriminator 8 view .LVU165
 377:source\lcd/print.c ****                     if (!(flags & _PRECGIVEN)) dr->fpr.precision = 6;
 545              		.loc 1 377 27 is_stmt 0 discriminator 8 view .LVU166
 546 0142 8A46     		mov	r10, r1
 225:source\lcd/print.c ****                for (;;) {
 547              		.loc 1 225 29 discriminator 8 view .LVU167
 548 0144 0022     		movs	r2, #0
 384:source\lcd/print.c ****                }
 549              		.loc 1 384 21 discriminator 8 view .LVU168
 550 0146 33E1     		b	.L72
 551              	.LVL63:
 552              	.L28:
 553              	.LBB49:
 268:source\lcd/print.c ****                            ch = *fmt++;
 554              		.loc 1 268 28 is_stmt 1 view .LVU169
 269:source\lcd/print.c ****                      }
 555              		.loc 1 269 31 is_stmt 0 view .LVU170
 556 0148 12F8013B 		ldrb	r3, [r2], #1	@ zero_extendqisi2
 557              	.LVL64:
 268:source\lcd/print.c ****                            ch = *fmt++;
 558              		.loc 1 268 30 view .LVU171
 559 014c 06FB0101 		mla	r1, r6, r1, r0
 560              	.LVL65:
 269:source\lcd/print.c ****                      }
 561              		.loc 1 269 28 is_stmt 1 view .LVU172
 269:source\lcd/print.c ****                      }
 562              		.loc 1 269 28 is_stmt 0 view .LVU173
 563 0150 ABE7     		b	.L26
 564              	.LVL66:
 565              	.L29:
 269:source\lcd/print.c ****                      }
 566              		.loc 1 269 28 view .LVU174
 567              	.LBE49:
 282:source\lcd/print.c ****                   flags |= _SHORTSPEC;
 568              		.loc 1 282 23 is_stmt 1 view .LVU175
 282:source\lcd/print.c ****                   flags |= _SHORTSPEC;
 569              		.loc 1 282 26 is_stmt 0 view .LVU176
 570 0152 682B     		cmp	r3, #104
 283:source\lcd/print.c ****                   ch = *fmt++;
 571              		.loc 1 283 19 is_stmt 1 view .LVU177
 284:source\lcd/print.c ****                }
 572              		.loc 1 284 22 is_stmt 0 view .LVU178
 573 0154 04BF     		itt	eq
 574 0156 16F8013B 		ldrbeq	r3, [r6], #1	@ zero_extendqisi2
 575              	.LVL67:
 283:source\lcd/print.c ****                   ch = *fmt++;
 576              		.loc 1 283 25 view .LVU179
 577 015a 4AF0800A 		orreq	r10, r10, #128
 578              	.LVL68:
 284:source\lcd/print.c ****                }
 579              		.loc 1 284 19 is_stmt 1 view .LVU180
 284:source\lcd/print.c ****                }
 580              		.loc 1 284 19 is_stmt 0 view .LVU181
 581 015e D1E7     		b	.L31
 582              	.LVL69:
 583              	.L33:
 286:source\lcd/print.c ****                   case 'c':
 584              		.loc 1 286 16 view .LVU182
 585 0160 A3F15802 		sub	r2, r3, #88
 586 0164 202A     		cmp	r2, #32
 587 0166 45D8     		bhi	.L32
 588 0168 01A1     		adr	r1, .L37
 589 016a 51F822F0 		ldr	pc, [r1, r2, lsl #2]
 590 016e 00BF     		.p2align 2
 591              	.L37:
 592 0170 2B030000 		.word	.L44+1
 593 0174 F5010000 		.word	.L32+1
 594 0178 F5010000 		.word	.L32+1
 595 017c F5010000 		.word	.L32+1
 596 0180 F5010000 		.word	.L32+1
 597 0184 F5010000 		.word	.L32+1
 598 0188 F5010000 		.word	.L32+1
 599 018c F5010000 		.word	.L32+1
 600 0190 F5010000 		.word	.L32+1
 601 0194 F5010000 		.word	.L32+1
 602 0198 F5010000 		.word	.L32+1
 603 019c F5010000 		.word	.L32+1
 604 01a0 99040000 		.word	.L43+1
 605 01a4 1B010000 		.word	.L35+1
 606 01a8 1B010000 		.word	.L35+1
 607 01ac 1B010000 		.word	.L35+1
 608 01b0 F5010000 		.word	.L32+1
 609 01b4 99040000 		.word	.L43+1
 610 01b8 F5010000 		.word	.L32+1
 611 01bc F5010000 		.word	.L32+1
 612 01c0 F5010000 		.word	.L32+1
 613 01c4 F5010000 		.word	.L32+1
 614 01c8 73020000 		.word	.L42+1
 615 01cc 39040000 		.word	.L41+1
 616 01d0 93030000 		.word	.L40+1
 617 01d4 F5010000 		.word	.L32+1
 618 01d8 F5010000 		.word	.L32+1
 619 01dc 97020000 		.word	.L39+1
 620 01e0 F5010000 		.word	.L32+1
 621 01e4 65040000 		.word	.L38+1
 622 01e8 F5010000 		.word	.L32+1
 623 01ec F5010000 		.word	.L32+1
 624 01f0 63030000 		.word	.L36+1
 625              		.p2align 1
 626              	.L32:
 289:source\lcd/print.c ****                     width--;                        /* char width is 1       */
 627              		.loc 1 289 21 is_stmt 1 view .LVU183
 628              	.LVL70:
 289:source\lcd/print.c ****                     width--;                        /* char width is 1       */
 629              		.loc 1 289 24 is_stmt 0 view .LVU184
 630 01f4 55F8043B 		ldr	r3, [r5], #4
 631              	.LVL71:
 289:source\lcd/print.c ****                     width--;                        /* char width is 1       */
 632              		.loc 1 289 24 view .LVU185
 633 01f8 0293     		str	r3, [sp, #8]
 634              	.LVL72:
 290:source\lcd/print.c ****                     pre_padding(dr, p);
 635              		.loc 1 290 21 is_stmt 1 view .LVU186
 291:source\lcd/print.c ****                     xputc(dr, ch, p);
 636              		.loc 1 291 21 is_stmt 0 view .LVU187
 637 01fa 1AF00108 		ands	r8, r10, #1
 290:source\lcd/print.c ****                     pre_padding(dr, p);
 638              		.loc 1 290 26 view .LVU188
 639 01fe 07F1FF3B 		add	fp, r7, #-1
 640              	.LVL73:
 291:source\lcd/print.c ****                     xputc(dr, ch, p);
 641              		.loc 1 291 21 is_stmt 1 view .LVU189
 642 0202 19D1     		bne	.L45
 643              	.LBB50:
 291:source\lcd/print.c ****                     xputc(dr, ch, p);
 644              		.loc 1 291 21 discriminator 1 view .LVU190
 645 0204 1AF4807F 		tst	r10, #256
 646 0208 0CBF     		ite	eq
 647 020a 4FF0200A 		moveq	r10, #32
 648              	.LVL74:
 291:source\lcd/print.c ****                     xputc(dr, ch, p);
 649              		.loc 1 291 21 is_stmt 0 discriminator 1 view .LVU191
 650 020e 4FF0300A 		movne	r10, #48
 651              	.LVL75:
 291:source\lcd/print.c ****                     xputc(dr, ch, p);
 652              		.loc 1 291 21 is_stmt 1 discriminator 1 view .LVU192
 653              	.L47:
 291:source\lcd/print.c ****                     xputc(dr, ch, p);
 654              		.loc 1 291 21 discriminator 7 view .LVU193
 291:source\lcd/print.c ****                     xputc(dr, ch, p);
 655              		.loc 1 291 21 is_stmt 0 discriminator 7 view .LVU194
 656 0212 BBF1010B 		subs	fp, fp, #1
 657              	.LVL76:
 291:source\lcd/print.c ****                     xputc(dr, ch, p);
 658              		.loc 1 291 21 discriminator 7 view .LVU195
 659 0216 636A     		ldr	r3, [r4, #36]
 660 0218 1AD5     		bpl	.L48
 661 021a 012F     		cmp	r7, #1
 662 021c 3B46     		mov	r3, r7
 663 021e B8BF     		it	lt
 664 0220 0123     		movlt	r3, #1
 291:source\lcd/print.c ****                     xputc(dr, ch, p);
 665              		.loc 1 291 21 view .LVU196
 666 0222 002F     		cmp	r7, #0
 667 0224 C7F1010B 		rsb	fp, r7, #1
 668              	.LVL77:
 291:source\lcd/print.c ****                     xputc(dr, ch, p);
 669              		.loc 1 291 21 view .LVU197
 670 0228 03F1FF33 		add	r3, r3, #-1
 671 022c D8BF     		it	le
 672 022e 4FF0000B 		movle	fp, #0
 673 0232 023F     		subs	r7, r7, #2
 674              	.LVL78:
 291:source\lcd/print.c ****                     xputc(dr, ch, p);
 675              		.loc 1 291 21 view .LVU198
 676 0234 9944     		add	r9, r9, r3
 677 0236 BB44     		add	fp, fp, r7
 678              	.LVL79:
 679              	.L45:
 291:source\lcd/print.c ****                     xputc(dr, ch, p);
 680              		.loc 1 291 21 is_stmt 1 discriminator 10 view .LVU199
 681              	.LBE50:
 291:source\lcd/print.c ****                     xputc(dr, ch, p);
 682              		.loc 1 291 39 discriminator 10 view .LVU200
 292:source\lcd/print.c ****                     charcount++;
 683              		.loc 1 292 21 discriminator 10 view .LVU201
 684 0238 DDE90110 		ldrd	r1, r0, [sp, #4]
 685 023c 636A     		ldr	r3, [r4, #36]
 686 023e 9847     		blx	r3
 687              	.LVL80:
 293:source\lcd/print.c ****                     post_padding(dr, p);
 688              		.loc 1 293 21 discriminator 10 view .LVU202
 293:source\lcd/print.c ****                     post_padding(dr, p);
 689              		.loc 1 293 30 is_stmt 0 discriminator 10 view .LVU203
 690 0240 09F10109 		add	r9, r9, #1
 691              	.LVL81:
 294:source\lcd/print.c ****                     continue;
 692              		.loc 1 294 21 is_stmt 1 discriminator 10 view .LVU204
 693 0244 B8F1000F 		cmp	r8, #0
 694 0248 3FF4E3AE 		beq	.L6
 695 024c 5F46     		mov	r7, fp
 696 024e 07E0     		b	.L49
 697              	.LVL82:
 698              	.L48:
 699              	.LBB51:
 291:source\lcd/print.c ****                     xputc(dr, ch, p);
 700              		.loc 1 291 21 discriminator 9 view .LVU205
 701 0250 0199     		ldr	r1, [sp, #4]
 702 0252 5046     		mov	r0, r10
 703 0254 9847     		blx	r3
 704              	.LVL83:
 705 0256 DCE7     		b	.L47
 706              	.LVL84:
 707              	.L50:
 291:source\lcd/print.c ****                     xputc(dr, ch, p);
 708              		.loc 1 291 21 is_stmt 0 discriminator 9 view .LVU206
 709              	.LBE51:
 294:source\lcd/print.c ****                     continue;
 710              		.loc 1 294 21 is_stmt 1 discriminator 4 view .LVU207
 711 0258 636A     		ldr	r3, [r4, #36]
 712 025a 0199     		ldr	r1, [sp, #4]
 713 025c 2020     		movs	r0, #32
 714 025e 9847     		blx	r3
 715              	.LVL85:
 716              	.L49:
 294:source\lcd/print.c ****                     continue;
 717              		.loc 1 294 21 discriminator 3 view .LVU208
 294:source\lcd/print.c ****                     continue;
 718              		.loc 1 294 21 is_stmt 0 discriminator 3 view .LVU209
 719 0260 013F     		subs	r7, r7, #1
 720              	.LVL86:
 294:source\lcd/print.c ****                     continue;
 721              		.loc 1 294 21 discriminator 3 view .LVU210
 722 0262 F9D5     		bpl	.L50
 723 0264 BBF1000F 		cmp	fp, #0
 724 0268 A8BF     		it	ge
 725 026a D944     		addge	r9, r9, fp
 726 026c D1E6     		b	.L6
 727              	.LVL87:
 728              	.L34:
 296:source\lcd/print.c ****                     continue;
 729              		.loc 1 296 31 is_stmt 1 discriminator 1 view .LVU211
 296:source\lcd/print.c ****                     continue;
 730              		.loc 1 296 34 is_stmt 0 discriminator 1 view .LVU212
 731 026e 013E     		subs	r6, r6, #1
 732              	.LVL88:
 297:source\lcd/print.c ****                   case 'n':
 733              		.loc 1 297 21 is_stmt 1 discriminator 1 view .LVU213
 734 0270 CFE6     		b	.L6
 735              	.L42:
 299:source\lcd/print.c ****                     else if (flags & _LLSPEC) *va_arg(args, long long *) = charcount;
 736              		.loc 1 299 21 view .LVU214
 299:source\lcd/print.c ****                     else if (flags & _LLSPEC) *va_arg(args, long long *) = charcount;
 737              		.loc 1 299 24 is_stmt 0 view .LVU215
 738 0272 1AF0800F 		tst	r10, #128
 299:source\lcd/print.c ****                     else if (flags & _LLSPEC) *va_arg(args, long long *) = charcount;
 739              		.loc 1 299 68 view .LVU216
 740 0276 2B68     		ldr	r3, [r5]
 741              	.LVL89:
 299:source\lcd/print.c ****                     else if (flags & _LLSPEC) *va_arg(args, long long *) = charcount;
 742              		.loc 1 299 24 view .LVU217
 743 0278 03D0     		beq	.L51
 299:source\lcd/print.c ****                     else if (flags & _LLSPEC) *va_arg(args, long long *) = charcount;
 744              		.loc 1 299 45 is_stmt 1 view .LVU218
 745              	.LVL90:
 299:source\lcd/print.c ****                     else if (flags & _LLSPEC) *va_arg(args, long long *) = charcount;
 746              		.loc 1 299 70 is_stmt 0 view .LVU219
 747 027a A3F80090 		strh	r9, [r3]	@ movhi
 748              	.LVL91:
 749              	.L54:
 289:source\lcd/print.c ****                     width--;                        /* char width is 1       */
 750              		.loc 1 289 24 view .LVU220
 751 027e 0435     		adds	r5, r5, #4
 752 0280 C7E6     		b	.L6
 753              	.LVL92:
 754              	.L51:
 300:source\lcd/print.c ****                     else if (flags & _LONGSPEC) *va_arg(args, long *) = charcount;
 755              		.loc 1 300 26 is_stmt 1 view .LVU221
 300:source\lcd/print.c ****                     else if (flags & _LONGSPEC) *va_arg(args, long *) = charcount;
 756              		.loc 1 300 29 is_stmt 0 view .LVU222
 757 0282 1AF0400F 		tst	r10, #64
 300:source\lcd/print.c ****                     else if (flags & _LONGSPEC) *va_arg(args, long *) = charcount;
 758              		.loc 1 300 47 is_stmt 1 view .LVU223
 759              	.LVL93:
 300:source\lcd/print.c ****                     else if (flags & _LONGSPEC) *va_arg(args, long *) = charcount;
 760              		.loc 1 300 74 is_stmt 0 view .LVU224
 761 0286 1ABF     		itte	ne
 762 0288 4FEAE972 		asrne	r2, r9, #31
 763              	.LVL94:
 300:source\lcd/print.c ****                     else if (flags & _LONGSPEC) *va_arg(args, long *) = charcount;
 764              		.loc 1 300 74 view .LVU225
 765 028c C3E90092 		strdne	r9, r2, [r3]
 301:source\lcd/print.c ****                     else *va_arg(args, int *) = charcount;
 766              		.loc 1 301 26 is_stmt 1 view .LVU226
 301:source\lcd/print.c ****                     else *va_arg(args, int *) = charcount;
 767              		.loc 1 301 71 is_stmt 0 view .LVU227
 768 0290 C3F80090 		streq	r9, [r3]
 769 0294 F3E7     		b	.L54
 770              	.LVL95:
 771              	.L39:
 772              	.LBB52:
 306:source\lcd/print.c ****                     int i, n;
 773              		.loc 1 306 21 is_stmt 1 view .LVU228
 308:source\lcd/print.c ****                        int precision = dr->fpr.precision;
 774              		.loc 1 308 24 is_stmt 0 view .LVU229
 775 0296 1AF0100F 		tst	r10, #16
 306:source\lcd/print.c ****                     int i, n;
 776              		.loc 1 306 27 view .LVU230
 777 029a 55F8048B 		ldr	r8, [r5], #4
 778              	.LVL96:
 307:source\lcd/print.c ****                     if (flags & _PRECGIVEN) {
 779              		.loc 1 307 21 is_stmt 1 view .LVU231
 308:source\lcd/print.c ****                        int precision = dr->fpr.precision;
 780              		.loc 1 308 21 view .LVU232
 308:source\lcd/print.c ****                        int precision = dr->fpr.precision;
 781              		.loc 1 308 24 is_stmt 0 view .LVU233
 782 029e 0AD0     		beq	.L56
 783              	.LBB53:
 309:source\lcd/print.c ****                        for (n = 0; n < precision && str[n] != 0; n++) continue;
 784              		.loc 1 309 24 is_stmt 1 view .LVU234
 309:source\lcd/print.c ****                        for (n = 0; n < precision && str[n] != 0; n++) continue;
 785              		.loc 1 309 28 is_stmt 0 view .LVU235
 786 02a0 A368     		ldr	r3, [r4, #8]
 787              	.LVL97:
 310:source\lcd/print.c ****                     } else n = strlen(str);
 788              		.loc 1 310 24 is_stmt 1 view .LVU236
 310:source\lcd/print.c ****                     } else n = strlen(str);
 789              		.loc 1 310 31 is_stmt 0 view .LVU237
 790 02a2 4FF0000B 		mov	fp, #0
 791              	.LVL98:
 792              	.L57:
 310:source\lcd/print.c ****                     } else n = strlen(str);
 793              		.loc 1 310 50 is_stmt 1 discriminator 1 view .LVU238
 794 02a6 9B45     		cmp	fp, r3
 795 02a8 09DA     		bge	.L58
 310:source\lcd/print.c ****                     } else n = strlen(str);
 796              		.loc 1 310 50 is_stmt 0 discriminator 3 view .LVU239
 797 02aa 18F80B20 		ldrb	r2, [r8, fp]	@ zero_extendqisi2
 798 02ae 32B1     		cbz	r2, .L58
 310:source\lcd/print.c ****                     } else n = strlen(str);
 799              		.loc 1 310 71 is_stmt 1 discriminator 4 view .LVU240
 310:source\lcd/print.c ****                     } else n = strlen(str);
 800              		.loc 1 310 67 discriminator 4 view .LVU241
 801 02b0 0BF1010B 		add	fp, fp, #1
 802              	.LVL99:
 310:source\lcd/print.c ****                     } else n = strlen(str);
 803              		.loc 1 310 67 is_stmt 0 discriminator 4 view .LVU242
 804 02b4 F7E7     		b	.L57
 805              	.LVL100:
 806              	.L56:
 310:source\lcd/print.c ****                     } else n = strlen(str);
 807              		.loc 1 310 67 discriminator 4 view .LVU243
 808              	.LBE53:
 311:source\lcd/print.c ****                     width -= n;
 809              		.loc 1 311 28 is_stmt 1 view .LVU244
 311:source\lcd/print.c ****                     width -= n;
 810              		.loc 1 311 32 is_stmt 0 view .LVU245
 811 02b6 4046     		mov	r0, r8
 812 02b8 FFF7FEFF 		bl	strlen
 813              	.LVL101:
 311:source\lcd/print.c ****                     width -= n;
 814              		.loc 1 311 32 view .LVU246
 815 02bc 8346     		mov	fp, r0
 816              	.LVL102:
 817              	.L58:
 312:source\lcd/print.c ****                     pre_padding(dr, p);
 818              		.loc 1 312 21 is_stmt 1 view .LVU247
 313:source\lcd/print.c ****                     for (i=0; i<n; i++) xputc(dr, str[i], p);
 819              		.loc 1 313 21 is_stmt 0 view .LVU248
 820 02be 1AF00103 		ands	r3, r10, #1
 312:source\lcd/print.c ****                     pre_padding(dr, p);
 821              		.loc 1 312 27 view .LVU249
 822 02c2 A7EB0B07 		sub	r7, r7, fp
 823              	.LVL103:
 313:source\lcd/print.c ****                     for (i=0; i<n; i++) xputc(dr, str[i], p);
 824              		.loc 1 313 21 is_stmt 1 view .LVU250
 825 02c6 0293     		str	r3, [sp, #8]
 826 02c8 0ED1     		bne	.L60
 827              	.LBB54:
 313:source\lcd/print.c ****                     for (i=0; i<n; i++) xputc(dr, str[i], p);
 828              		.loc 1 313 21 discriminator 1 view .LVU251
 829 02ca 1AF4807F 		tst	r10, #256
 830 02ce 0CBF     		ite	eq
 831 02d0 2023     		moveq	r3, #32
 832 02d2 3023     		movne	r3, #48
 833 02d4 0393     		str	r3, [sp, #12]
 834              	.LVL104:
 313:source\lcd/print.c ****                     for (i=0; i<n; i++) xputc(dr, str[i], p);
 835              		.loc 1 313 21 discriminator 1 view .LVU252
 836              	.LBE54:
 312:source\lcd/print.c ****                     pre_padding(dr, p);
 837              		.loc 1 312 27 is_stmt 0 discriminator 1 view .LVU253
 838 02d6 BA46     		mov	r10, r7
 839              	.LVL105:
 840              	.L62:
 841              	.LBB55:
 313:source\lcd/print.c ****                     for (i=0; i<n; i++) xputc(dr, str[i], p);
 842              		.loc 1 313 21 is_stmt 1 discriminator 7 view .LVU254
 313:source\lcd/print.c ****                     for (i=0; i<n; i++) xputc(dr, str[i], p);
 843              		.loc 1 313 21 is_stmt 0 discriminator 7 view .LVU255
 844 02d8 BAF1010A 		subs	r10, r10, #1
 845              	.LVL106:
 313:source\lcd/print.c ****                     for (i=0; i<n; i++) xputc(dr, str[i], p);
 846              		.loc 1 313 21 discriminator 7 view .LVU256
 847 02dc 0FD5     		bpl	.L63
 848 02de 27EAE773 		bic	r3, r7, r7, asr #31
 849 02e2 013F     		subs	r7, r7, #1
 850 02e4 9944     		add	r9, r9, r3
 313:source\lcd/print.c ****                     for (i=0; i<n; i++) xputc(dr, str[i], p);
 851              		.loc 1 313 21 view .LVU257
 852 02e6 FF1A     		subs	r7, r7, r3
 853              	.LVL107:
 854              	.L60:
 313:source\lcd/print.c ****                     for (i=0; i<n; i++) xputc(dr, str[i], p);
 855              		.loc 1 313 21 is_stmt 1 discriminator 10 view .LVU258
 856              	.LBE55:
 313:source\lcd/print.c ****                     for (i=0; i<n; i++) xputc(dr, str[i], p);
 857              		.loc 1 313 39 discriminator 10 view .LVU259
 314:source\lcd/print.c ****                     charcount += n;
 858              		.loc 1 314 21 discriminator 10 view .LVU260
 314:source\lcd/print.c ****                     charcount += n;
 859              		.loc 1 314 21 is_stmt 0 discriminator 10 view .LVU261
 860 02e8 08EB0B0A 		add	r10, r8, fp
 861              	.LVL108:
 862              	.L64:
 314:source\lcd/print.c ****                     charcount += n;
 863              		.loc 1 314 32 is_stmt 1 discriminator 1 view .LVU262
 864 02ec C245     		cmp	r10, r8
 865 02ee 0BD1     		bne	.L65
 315:source\lcd/print.c ****                     post_padding(dr, p);
 866              		.loc 1 315 21 view .LVU263
 316:source\lcd/print.c ****                   }
 867              		.loc 1 316 21 is_stmt 0 view .LVU264
 868 02f0 029B     		ldr	r3, [sp, #8]
 315:source\lcd/print.c ****                     post_padding(dr, p);
 869              		.loc 1 315 31 view .LVU265
 870 02f2 D944     		add	r9, r9, fp
 871              	.LVL109:
 316:source\lcd/print.c ****                   }
 872              		.loc 1 316 21 is_stmt 1 view .LVU266
 873 02f4 002B     		cmp	r3, #0
 874 02f6 3FF48CAE 		beq	.L6
 875 02fa B846     		mov	r8, r7
 316:source\lcd/print.c ****                   }
 876              		.loc 1 316 21 is_stmt 0 view .LVU267
 877 02fc 0EE0     		b	.L66
 878              	.LVL110:
 879              	.L63:
 880              	.LBB56:
 313:source\lcd/print.c ****                     for (i=0; i<n; i++) xputc(dr, str[i], p);
 881              		.loc 1 313 21 is_stmt 1 discriminator 9 view .LVU268
 882 02fe 636A     		ldr	r3, [r4, #36]
 883 0300 0199     		ldr	r1, [sp, #4]
 884 0302 0398     		ldr	r0, [sp, #12]
 885 0304 9847     		blx	r3
 886              	.LVL111:
 887 0306 E7E7     		b	.L62
 888              	.LVL112:
 889              	.L65:
 313:source\lcd/print.c ****                     for (i=0; i<n; i++) xputc(dr, str[i], p);
 890              		.loc 1 313 21 is_stmt 0 discriminator 9 view .LVU269
 891              	.LBE56:
 314:source\lcd/print.c ****                     charcount += n;
 892              		.loc 1 314 41 is_stmt 1 discriminator 3 view .LVU270
 893 0308 636A     		ldr	r3, [r4, #36]
 894 030a 0199     		ldr	r1, [sp, #4]
 895 030c 18F8010B 		ldrb	r0, [r8], #1	@ zero_extendqisi2
 314:source\lcd/print.c ****                     charcount += n;
 896              		.loc 1 314 41 is_stmt 0 discriminator 3 view .LVU271
 897 0310 9847     		blx	r3
 898              	.LVL113:
 314:source\lcd/print.c ****                     charcount += n;
 899              		.loc 1 314 37 is_stmt 1 discriminator 3 view .LVU272
 314:source\lcd/print.c ****                     charcount += n;
 900              		.loc 1 314 37 is_stmt 0 discriminator 3 view .LVU273
 901 0312 EBE7     		b	.L64
 902              	.LVL114:
 903              	.L67:
 316:source\lcd/print.c ****                   }
 904              		.loc 1 316 21 is_stmt 1 discriminator 4 view .LVU274
 905 0314 636A     		ldr	r3, [r4, #36]
 906 0316 0199     		ldr	r1, [sp, #4]
 907 0318 2020     		movs	r0, #32
 908 031a 9847     		blx	r3
 909              	.LVL115:
 910              	.L66:
 316:source\lcd/print.c ****                   }
 911              		.loc 1 316 21 discriminator 3 view .LVU275
 316:source\lcd/print.c ****                   }
 912              		.loc 1 316 21 is_stmt 0 discriminator 3 view .LVU276
 913 031c B8F10108 		subs	r8, r8, #1
 914              	.LVL116:
 316:source\lcd/print.c ****                   }
 915              		.loc 1 316 21 discriminator 3 view .LVU277
 916 0320 F8D5     		bpl	.L67
 917 0322 002F     		cmp	r7, #0
 918 0324 A8BF     		it	ge
 919 0326 B944     		addge	r9, r9, r7
 920 0328 73E6     		b	.L6
 921              	.LVL117:
 922              	.L44:
 316:source\lcd/print.c ****                   }
 923              		.loc 1 316 21 discriminator 3 view .LVU278
 924              	.LBE52:
 320:source\lcd/print.c ****                     if (flags & _SHORTSPEC) v = (unsigned short)v;
 925              		.loc 1 320 21 is_stmt 1 view .LVU279
 320:source\lcd/print.c ****                     if (flags & _SHORTSPEC) v = (unsigned short)v;
 926              		.loc 1 320 24 is_stmt 0 view .LVU280
 927 032a 1AF0400F 		tst	r10, #64
 320:source\lcd/print.c ****                     if (flags & _SHORTSPEC) v = (unsigned short)v;
 928              		.loc 1 320 42 is_stmt 1 view .LVU281
 320:source\lcd/print.c ****                     if (flags & _SHORTSPEC) v = (unsigned short)v;
 929              		.loc 1 320 54 is_stmt 0 view .LVU282
 930 032e 1FBF     		itttt	ne
 931 0330 0735     		addne	r5, r5, #7
 932              	.LVL118:
 320:source\lcd/print.c ****                     if (flags & _SHORTSPEC) v = (unsigned short)v;
 933              		.loc 1 320 54 view .LVU283
 934 0332 25F00705 		bicne	r5, r5, #7
 935              	.LVL119:
 320:source\lcd/print.c ****                     if (flags & _SHORTSPEC) v = (unsigned short)v;
 936              		.loc 1 320 52 view .LVU284
 937 0336 F5E80201 		ldrdne	r0, [r5], #8
 938              	.LVL120:
 320:source\lcd/print.c ****                     if (flags & _SHORTSPEC) v = (unsigned short)v;
 939              		.loc 1 320 52 view .LVU285
 940 033a C4E90E01 		strdne	r0, [r4, #56]
 322:source\lcd/print.c ****                     dr->fpr.prefix = (flags&_VARIANT) ? "0X" : "";
 941              		.loc 1 322 32 view .LVU286
 942 033e 3749     		ldr	r1, .L221+8
 320:source\lcd/print.c ****                     if (flags & _SHORTSPEC) v = (unsigned short)v;
 943              		.loc 1 320 85 view .LVU287
 944 0340 08BF     		it	eq
 945 0342 55F8042B 		ldreq	r2, [r5], #4
 322:source\lcd/print.c ****                     dr->fpr.prefix = (flags&_VARIANT) ? "0X" : "";
 946              		.loc 1 322 32 view .LVU288
 947 0346 E162     		str	r1, [r4, #44]
 225:source\lcd/print.c ****                for (;;) {
 948              		.loc 1 225 29 view .LVU289
 949 0348 18BF     		it	ne
 950 034a 0022     		movne	r2, #0
 320:source\lcd/print.c ****                     if (flags & _SHORTSPEC) v = (unsigned short)v;
 951              		.loc 1 320 83 is_stmt 1 view .LVU290
 952              	.LVL121:
 321:source\lcd/print.c ****                     dr->hextab = "0123456789ABCDEF";
 953              		.loc 1 321 21 view .LVU291
 323:source\lcd/print.c ****                     if (flags & _PRECGIVEN) flags &= ~_PADZERO;
 954              		.loc 1 323 62 is_stmt 0 view .LVU292
 955 034c 3449     		ldr	r1, .L221+12
 321:source\lcd/print.c ****                     dr->hextab = "0123456789ABCDEF";
 956              		.loc 1 321 24 view .LVU293
 957 034e 1AF0800F 		tst	r10, #128
 321:source\lcd/print.c ****                     dr->hextab = "0123456789ABCDEF";
 958              		.loc 1 321 45 is_stmt 1 view .LVU294
 959 0352 18BF     		it	ne
 960 0354 92B2     		uxthne	r2, r2
 961              	.LVL122:
 322:source\lcd/print.c ****                     dr->fpr.prefix = (flags&_VARIANT) ? "0X" : "";
 962              		.loc 1 322 21 view .LVU295
 323:source\lcd/print.c ****                     if (flags & _PRECGIVEN) flags &= ~_PADZERO;
 963              		.loc 1 323 21 view .LVU296
 323:source\lcd/print.c ****                     if (flags & _PRECGIVEN) flags &= ~_PADZERO;
 964              		.loc 1 323 62 is_stmt 0 view .LVU297
 965 0356 1AF0080F 		tst	r10, #8
 966              	.LVL123:
 967              	.L220:
 968              	.LBB57:
 367:source\lcd/print.c ****                   }
 969              		.loc 1 367 105 discriminator 3 view .LVU298
 970 035a 2E48     		ldr	r0, .L221
 971 035c 08BF     		it	eq
 972 035e 0146     		moveq	r1, r0
 973 0360 93E0     		b	.L88
 974              	.L36:
 367:source\lcd/print.c ****                   }
 975              		.loc 1 367 105 discriminator 3 view .LVU299
 976              	.LBE57:
 327:source\lcd/print.c ****                     if (flags & _SHORTSPEC) v = (unsigned short)v;
 977              		.loc 1 327 21 is_stmt 1 view .LVU300
 327:source\lcd/print.c ****                     if (flags & _SHORTSPEC) v = (unsigned short)v;
 978              		.loc 1 327 24 is_stmt 0 view .LVU301
 979 0362 1AF0400F 		tst	r10, #64
 327:source\lcd/print.c ****                     if (flags & _SHORTSPEC) v = (unsigned short)v;
 980              		.loc 1 327 42 is_stmt 1 view .LVU302
 327:source\lcd/print.c ****                     if (flags & _SHORTSPEC) v = (unsigned short)v;
 981              		.loc 1 327 54 is_stmt 0 view .LVU303
 982 0366 1DBF     		ittte	ne
 983 0368 0735     		addne	r5, r5, #7
 984              	.LVL124:
 327:source\lcd/print.c ****                     if (flags & _SHORTSPEC) v = (unsigned short)v;
 985              		.loc 1 327 54 view .LVU304
 986 036a 25F00705 		bicne	r5, r5, #7
 987              	.LVL125:
 327:source\lcd/print.c ****                     if (flags & _SHORTSPEC) v = (unsigned short)v;
 988              		.loc 1 327 52 view .LVU305
 989 036e F5E80201 		ldrdne	r0, [r5], #8
 990              	.LVL126:
 327:source\lcd/print.c ****                     if (flags & _SHORTSPEC) v = (unsigned short)v;
 991              		.loc 1 327 85 view .LVU306
 992 0372 55F8042B 		ldreq	r2, [r5], #4
 327:source\lcd/print.c ****                     if (flags & _SHORTSPEC) v = (unsigned short)v;
 993              		.loc 1 327 52 view .LVU307
 994 0376 1CBF     		itt	ne
 995 0378 C4E90E01 		strdne	r0, [r4, #56]
 225:source\lcd/print.c ****                for (;;) {
 996              		.loc 1 225 29 view .LVU308
 997 037c 0022     		movne	r2, #0
 327:source\lcd/print.c ****                     if (flags & _SHORTSPEC) v = (unsigned short)v;
 998              		.loc 1 327 83 is_stmt 1 view .LVU309
 999              	.LVL127:
 328:source\lcd/print.c ****                     dr->hextab = "0123456789abcdef";
 1000              		.loc 1 328 21 view .LVU310
 329:source\lcd/print.c ****                     dr->fpr.prefix = (flags&_VARIANT) ? "0x" : "";
 1001              		.loc 1 329 32 is_stmt 0 view .LVU311
 1002 037e 2949     		ldr	r1, .L221+16
 1003 0380 E162     		str	r1, [r4, #44]
 328:source\lcd/print.c ****                     dr->hextab = "0123456789abcdef";
 1004              		.loc 1 328 24 view .LVU312
 1005 0382 1AF0800F 		tst	r10, #128
 328:source\lcd/print.c ****                     dr->hextab = "0123456789abcdef";
 1006              		.loc 1 328 45 is_stmt 1 view .LVU313
 1007 0386 18BF     		it	ne
 1008 0388 92B2     		uxthne	r2, r2
 1009              	.LVL128:
 329:source\lcd/print.c ****                     dr->fpr.prefix = (flags&_VARIANT) ? "0x" : "";
 1010              		.loc 1 329 21 view .LVU314
 330:source\lcd/print.c ****                     if (flags & _PRECGIVEN) flags &= ~_PADZERO;
 1011              		.loc 1 330 21 view .LVU315
 330:source\lcd/print.c ****                     if (flags & _PRECGIVEN) flags &= ~_PADZERO;
 1012              		.loc 1 330 62 is_stmt 0 view .LVU316
 1013 038a 2749     		ldr	r1, .L221+20
 1014 038c 1AF0080F 		tst	r10, #8
 1015 0390 E3E7     		b	.L220
 1016              	.LVL129:
 1017              	.L40:
 334:source\lcd/print.c ****                     dr->hextab = "0123456789abcdef";
 1018              		.loc 1 334 21 is_stmt 1 view .LVU317
 336:source\lcd/print.c ****                     dr->fpr.precision = 8;
 1019              		.loc 1 336 61 is_stmt 0 view .LVU318
 1020 0392 2048     		ldr	r0, .L221
 335:source\lcd/print.c ****                     dr->fpr.prefix = (flags&_VARIANT) ? "@" : "";
 1021              		.loc 1 335 32 view .LVU319
 1022 0394 2349     		ldr	r1, .L221+16
 334:source\lcd/print.c ****                     dr->hextab = "0123456789abcdef";
 1023              		.loc 1 334 23 view .LVU320
 1024 0396 55F8042B 		ldr	r2, [r5], #4
 1025              	.LVL130:
 335:source\lcd/print.c ****                     dr->fpr.prefix = (flags&_VARIANT) ? "@" : "";
 1026              		.loc 1 335 21 is_stmt 1 view .LVU321
 335:source\lcd/print.c ****                     dr->fpr.prefix = (flags&_VARIANT) ? "@" : "";
 1027              		.loc 1 335 32 is_stmt 0 view .LVU322
 1028 039a E162     		str	r1, [r4, #44]
 336:source\lcd/print.c ****                     dr->fpr.precision = 8;
 1029              		.loc 1 336 21 is_stmt 1 view .LVU323
 336:source\lcd/print.c ****                     dr->fpr.precision = 8;
 1030              		.loc 1 336 61 is_stmt 0 view .LVU324
 1031 039c 1AF0080F 		tst	r10, #8
 1032 03a0 2249     		ldr	r1, .L221+24
 1033 03a2 08BF     		it	eq
 1034 03a4 0146     		moveq	r1, r0
 336:source\lcd/print.c ****                     dr->fpr.precision = 8;
 1035              		.loc 1 336 36 view .LVU325
 1036 03a6 6160     		str	r1, [r4, #4]
 337:source\lcd/print.c ****                     flags |= _PRECGIVEN;
 1037              		.loc 1 337 21 is_stmt 1 view .LVU326
 337:source\lcd/print.c ****                     flags |= _PRECGIVEN;
 1038              		.loc 1 337 39 is_stmt 0 view .LVU327
 1039 03a8 0821     		movs	r1, #8
 1040 03aa A160     		str	r1, [r4, #8]
 338:source\lcd/print.c ****                     break;
 1041              		.loc 1 338 21 is_stmt 1 view .LVU328
 338:source\lcd/print.c ****                     break;
 1042              		.loc 1 338 27 is_stmt 0 view .LVU329
 1043 03ac 4AF0100A 		orr	r10, r10, #16
 1044              	.LVL131:
 339:source\lcd/print.c ****                   case 'o':
 1045              		.loc 1 339 21 is_stmt 1 view .LVU330
 1046              	.L72:
 386:source\lcd/print.c ****                dr->fpr.flags = flags;
 1047              		.loc 1 386 16 view .LVU331
 1048              	.LBB58:
 1049              	.LBB59:
 113:source\lcd/print.c ****       if (!(dr->fpr.flags & (_FPCONV + _PRECGIVEN))) dr->fpr.precision = 1;
 1050              		.loc 1 113 26 is_stmt 0 view .LVU332
 1051 03b0 4FF0FF31 		mov	r1, #-1
 114:source\lcd/print.c ****       switch (ch) {
 1052              		.loc 1 114 10 view .LVU333
 1053 03b4 1AF4047F 		tst	r10, #528
 113:source\lcd/print.c ****       if (!(dr->fpr.flags & (_FPCONV + _PRECGIVEN))) dr->fpr.precision = 1;
 1054              		.loc 1 113 50 view .LVU334
 1055 03b8 C4E90311 		strd	r1, r1, [r4, #12]
 114:source\lcd/print.c ****       switch (ch) {
 1056              		.loc 1 114 72 view .LVU335
 1057 03bc 04BF     		itt	eq
 1058 03be 0121     		moveq	r1, #1
 1059 03c0 A160     		streq	r1, [r4, #8]
 115:source\lcd/print.c **** 	 case 'p':
 1060              		.loc 1 115 7 view .LVU336
 1061 03c2 582B     		cmp	r3, #88
 1062              	.LBE59:
 1063              	.LBE58:
 386:source\lcd/print.c ****                dr->fpr.flags = flags;
 1064              		.loc 1 386 26 view .LVU337
 1065 03c4 2763     		str	r7, [r4, #48]
 387:source\lcd/print.c ****                charcount += printf_display(p, ch, dr, v);
 1066              		.loc 1 387 16 is_stmt 1 view .LVU338
 387:source\lcd/print.c ****                charcount += printf_display(p, ch, dr, v);
 1067              		.loc 1 387 30 is_stmt 0 view .LVU339
 1068 03c6 C4F800A0 		str	r10, [r4]
 388:source\lcd/print.c ****                continue;
 1069              		.loc 1 388 16 is_stmt 1 view .LVU340
 1070              	.LVL132:
 1071              	.LBB83:
 1072              	.LBI58:
 108:source\lcd/print.c **** {
 1073              		.loc 1 108 12 view .LVU341
 1074              	.LBB80:
 110:source\lcd/print.c ****       char buff[32];       /* used to accumulate value to print    */
 1075              		.loc 1 110 7 view .LVU342
 111:source\lcd/print.c ****       int flags = dr->fpr.flags;
 1076              		.loc 1 111 7 view .LVU343
 112:source\lcd/print.c ****       dr->fpr.before_dot = -1, dr->fpr.after_dot = -1;
 1077              		.loc 1 112 7 view .LVU344
 113:source\lcd/print.c ****       if (!(dr->fpr.flags & (_FPCONV + _PRECGIVEN))) dr->fpr.precision = 1;
 1078              		.loc 1 113 7 view .LVU345
 114:source\lcd/print.c ****       switch (ch) {
 1079              		.loc 1 114 7 view .LVU346
 114:source\lcd/print.c ****       switch (ch) {
 1080              		.loc 1 114 54 view .LVU347
 115:source\lcd/print.c **** 	 case 'p':
 1081              		.loc 1 115 7 view .LVU348
 1082 03ca 00F09480 		beq	.L93
 115:source\lcd/print.c **** 	 case 'p':
 1083              		.loc 1 115 7 is_stmt 0 view .LVU349
 1084 03ce 643B     		subs	r3, r3, #100
 1085              	.LVL133:
 115:source\lcd/print.c **** 	 case 'p':
 1086              		.loc 1 115 7 view .LVU350
 1087 03d0 142B     		cmp	r3, #20
 1088 03d2 00F24E81 		bhi	.L94
 1089 03d6 1648     		ldr	r0, .L221+28
 1090 03d8 0121     		movs	r1, #1
 1091 03da 9940     		lsls	r1, r1, r3
 1092 03dc 0840     		ands	r0, r0, r1
 1093 03de 0028     		cmp	r0, #0
 1094 03e0 40F02081 		bne	.L95
 1095 03e4 1348     		ldr	r0, .L221+32
 1096 03e6 0140     		ands	r1, r1, r0
 1097 03e8 40F08580 		bne	.L93
 1098 03ec 0B2B     		cmp	r3, #11
 1099 03ee 40F04081 		bne	.L94
 133:source\lcd/print.c **** 	      unsigned long long w = dr->llval;
 1100              		.loc 1 133 5 is_stmt 1 view .LVU351
 133:source\lcd/print.c **** 	      unsigned long long w = dr->llval;
 1101              		.loc 1 133 8 is_stmt 0 view .LVU352
 1102 03f2 1AF04008 		ands	r8, r10, #64
 1103 03f6 40F0F980 		bne	.L103
 1104 03fa 08AB     		add	r3, sp, #32
 1105              	.LVL134:
 1106              	.L104:
 140:source\lcd/print.c **** 		    buff[len++] = '0' + (v & 7);
 1107              		.loc 1 140 17 is_stmt 1 view .LVU353
 1108 03fc 002A     		cmp	r2, #0
 1109 03fe 00F0FC80 		beq	.L107
 141:source\lcd/print.c **** 		    v = v >> 3;
 1110              		.loc 1 141 7 view .LVU354
 141:source\lcd/print.c **** 		    v = v >> 3;
 1111              		.loc 1 141 30 is_stmt 0 view .LVU355
 1112 0402 02F00701 		and	r1, r2, #7
 141:source\lcd/print.c **** 		    v = v >> 3;
 1113              		.loc 1 141 25 view .LVU356
 1114 0406 3031     		adds	r1, r1, #48
 141:source\lcd/print.c **** 		    v = v >> 3;
 1115              		.loc 1 141 19 view .LVU357
 1116 0408 03F8011B 		strb	r1, [r3], #1
 141:source\lcd/print.c **** 		    v = v >> 3;
 1117              		.loc 1 141 15 view .LVU358
 1118 040c 08F10108 		add	r8, r8, #1
 1119              	.LVL135:
 142:source\lcd/print.c **** 	      }
 1120              		.loc 1 142 7 is_stmt 1 view .LVU359
 142:source\lcd/print.c **** 	      }
 1121              		.loc 1 142 9 is_stmt 0 view .LVU360
 1122 0410 D208     		lsrs	r2, r2, #3
 1123              	.LVL136:
 142:source\lcd/print.c **** 	      }
 1124              		.loc 1 142 9 view .LVU361
 1125 0412 F3E7     		b	.L104
 1126              	.L222:
 1127              		.align	2
 1128              	.L221:
 1129 0414 03000000 		.word	.LC1
 1130 0418 0F000000 		.word	.LC7
 1131 041c 11000000 		.word	.LC8
 1132 0420 00000000 		.word	.LC0
 1133 0424 22000000 		.word	.LC9
 1134 0428 04000000 		.word	.LC2
 1135 042c 07000000 		.word	.LC3
 1136 0430 21000200 		.word	131105
 1137 0434 00101000 		.word	1052672
 1138              	.LVL137:
 1139              	.L41:
 142:source\lcd/print.c **** 	      }
 1140              		.loc 1 142 9 view .LVU362
 1141              	.LBE80:
 1142              	.LBE83:
 341:source\lcd/print.c ****                     if (flags & _SHORTSPEC) v = (unsigned short)v;
 1143              		.loc 1 341 21 is_stmt 1 view .LVU363
 341:source\lcd/print.c ****                     if (flags & _SHORTSPEC) v = (unsigned short)v;
 1144              		.loc 1 341 24 is_stmt 0 view .LVU364
 1145 0438 1AF0400F 		tst	r10, #64
 341:source\lcd/print.c ****                     if (flags & _SHORTSPEC) v = (unsigned short)v;
 1146              		.loc 1 341 42 is_stmt 1 view .LVU365
 341:source\lcd/print.c ****                     if (flags & _SHORTSPEC) v = (unsigned short)v;
 1147              		.loc 1 341 54 is_stmt 0 view .LVU366
 1148 043c 1FBF     		itttt	ne
 1149 043e 0735     		addne	r5, r5, #7
 1150              	.LVL138:
 341:source\lcd/print.c ****                     if (flags & _SHORTSPEC) v = (unsigned short)v;
 1151              		.loc 1 341 54 view .LVU367
 1152 0440 25F00705 		bicne	r5, r5, #7
 1153              	.LVL139:
 341:source\lcd/print.c ****                     if (flags & _SHORTSPEC) v = (unsigned short)v;
 1154              		.loc 1 341 52 view .LVU368
 1155 0444 F5E80201 		ldrdne	r0, [r5], #8
 1156              	.LVL140:
 225:source\lcd/print.c ****                for (;;) {
 1157              		.loc 1 225 29 view .LVU369
 1158 0448 0022     		movne	r2, #0
 341:source\lcd/print.c ****                     if (flags & _SHORTSPEC) v = (unsigned short)v;
 1159              		.loc 1 341 83 is_stmt 1 view .LVU370
 1160              	.LVL141:
 341:source\lcd/print.c ****                     if (flags & _SHORTSPEC) v = (unsigned short)v;
 1161              		.loc 1 341 52 is_stmt 0 view .LVU371
 1162 044a 14BF     		ite	ne
 1163 044c C4E90E01 		strdne	r0, [r4, #56]
 341:source\lcd/print.c ****                     if (flags & _SHORTSPEC) v = (unsigned short)v;
 1164              		.loc 1 341 85 view .LVU372
 1165 0450 55F8042B 		ldreq	r2, [r5], #4
 1166              	.LVL142:
 342:source\lcd/print.c ****                     dr->fpr.prefix = (flags&_VARIANT) ? "0" : "";
 1167              		.loc 1 342 21 is_stmt 1 view .LVU373
 343:source\lcd/print.c ****                     if (flags & _PRECGIVEN) flags &= ~_PADZERO;
 1168              		.loc 1 343 61 is_stmt 0 view .LVU374
 1169 0454 B049     		ldr	r1, .L223
 342:source\lcd/print.c ****                     dr->fpr.prefix = (flags&_VARIANT) ? "0" : "";
 1170              		.loc 1 342 24 view .LVU375
 1171 0456 1AF0800F 		tst	r10, #128
 342:source\lcd/print.c ****                     dr->fpr.prefix = (flags&_VARIANT) ? "0" : "";
 1172              		.loc 1 342 45 is_stmt 1 view .LVU376
 1173 045a 18BF     		it	ne
 1174 045c 92B2     		uxthne	r2, r2
 1175              	.LVL143:
 343:source\lcd/print.c ****                     if (flags & _PRECGIVEN) flags &= ~_PADZERO;
 1176              		.loc 1 343 21 view .LVU377
 343:source\lcd/print.c ****                     if (flags & _PRECGIVEN) flags &= ~_PADZERO;
 1177              		.loc 1 343 61 is_stmt 0 view .LVU378
 1178 045e 1AF0080F 		tst	r10, #8
 1179 0462 7AE7     		b	.L220
 1180              	.LVL144:
 1181              	.L38:
 347:source\lcd/print.c ****                     if (flags & _SHORTSPEC) v = (unsigned short)v;
 1182              		.loc 1 347 21 is_stmt 1 view .LVU379
 347:source\lcd/print.c ****                     if (flags & _SHORTSPEC) v = (unsigned short)v;
 1183              		.loc 1 347 24 is_stmt 0 view .LVU380
 1184 0464 1AF0400F 		tst	r10, #64
 347:source\lcd/print.c ****                     if (flags & _SHORTSPEC) v = (unsigned short)v;
 1185              		.loc 1 347 42 is_stmt 1 view .LVU381
 347:source\lcd/print.c ****                     if (flags & _SHORTSPEC) v = (unsigned short)v;
 1186              		.loc 1 347 54 is_stmt 0 view .LVU382
 1187 0468 1FBF     		itttt	ne
 1188 046a 0735     		addne	r5, r5, #7
 1189              	.LVL145:
 347:source\lcd/print.c ****                     if (flags & _SHORTSPEC) v = (unsigned short)v;
 1190              		.loc 1 347 54 view .LVU383
 1191 046c 25F00705 		bicne	r5, r5, #7
 1192              	.LVL146:
 347:source\lcd/print.c ****                     if (flags & _SHORTSPEC) v = (unsigned short)v;
 1193              		.loc 1 347 52 view .LVU384
 1194 0470 F5E80201 		ldrdne	r0, [r5], #8
 1195              	.LVL147:
 225:source\lcd/print.c ****                for (;;) {
 1196              		.loc 1 225 29 view .LVU385
 1197 0474 0022     		movne	r2, #0
 347:source\lcd/print.c ****                     if (flags & _SHORTSPEC) v = (unsigned short)v;
 1198              		.loc 1 347 83 is_stmt 1 view .LVU386
 1199              	.LVL148:
 347:source\lcd/print.c ****                     if (flags & _SHORTSPEC) v = (unsigned short)v;
 1200              		.loc 1 347 52 is_stmt 0 view .LVU387
 1201 0476 14BF     		ite	ne
 1202 0478 C4E90E01 		strdne	r0, [r4, #56]
 347:source\lcd/print.c ****                     if (flags & _SHORTSPEC) v = (unsigned short)v;
 1203              		.loc 1 347 85 view .LVU388
 1204 047c 55F8042B 		ldreq	r2, [r5], #4
 1205              	.LVL149:
 348:source\lcd/print.c ****                     dr->fpr.prefix = "";
 1206              		.loc 1 348 21 is_stmt 1 view .LVU389
 349:source\lcd/print.c ****                     if (flags & _PRECGIVEN) flags &= ~_PADZERO;
 1207              		.loc 1 349 36 is_stmt 0 view .LVU390
 1208 0480 A649     		ldr	r1, .L223+4
 348:source\lcd/print.c ****                     dr->fpr.prefix = "";
 1209              		.loc 1 348 24 view .LVU391
 1210 0482 1AF0800F 		tst	r10, #128
 348:source\lcd/print.c ****                     dr->fpr.prefix = "";
 1211              		.loc 1 348 45 is_stmt 1 view .LVU392
 1212 0486 18BF     		it	ne
 1213 0488 92B2     		uxthne	r2, r2
 1214              	.LVL150:
 349:source\lcd/print.c ****                     if (flags & _PRECGIVEN) flags &= ~_PADZERO;
 1215              		.loc 1 349 21 view .LVU393
 1216              	.L88:
 369:source\lcd/print.c ****                     break;
 1217              		.loc 1 369 24 is_stmt 0 discriminator 12 view .LVU394
 1218 048a 1AF0100F 		tst	r10, #16
 1219              	.LBB84:
 367:source\lcd/print.c ****                   }
 1220              		.loc 1 367 36 discriminator 12 view .LVU395
 1221 048e 6160     		str	r1, [r4, #4]
 1222              	.LBE84:
 369:source\lcd/print.c ****                     break;
 1223              		.loc 1 369 21 is_stmt 1 discriminator 12 view .LVU396
 369:source\lcd/print.c ****                     break;
 1224              		.loc 1 369 24 is_stmt 0 discriminator 12 view .LVU397
 1225 0490 8ED0     		beq	.L72
 369:source\lcd/print.c ****                     break;
 1226              		.loc 1 369 45 is_stmt 1 discriminator 1 view .LVU398
 369:source\lcd/print.c ****                     break;
 1227              		.loc 1 369 51 is_stmt 0 discriminator 1 view .LVU399
 1228 0492 2AF4807A 		bic	r10, r10, #256
 1229              	.LVL151:
 369:source\lcd/print.c ****                     break;
 1230              		.loc 1 369 51 discriminator 1 view .LVU400
 1231 0496 8BE7     		b	.L72
 1232              	.L43:
 1233              	.LBB85:
 355:source\lcd/print.c ****                     if (flags & _LLSPEC) {
 1234              		.loc 1 355 21 is_stmt 1 view .LVU401
 356:source\lcd/print.c ****                        dr->llval = va_arg(args, long long);
 1235              		.loc 1 356 21 view .LVU402
 356:source\lcd/print.c ****                        dr->llval = va_arg(args, long long);
 1236              		.loc 1 356 24 is_stmt 0 view .LVU403
 1237 0498 1AF0400F 		tst	r10, #64
 1238 049c 1AD0     		beq	.L85
 357:source\lcd/print.c ****                        if ((long long)dr->llval < 0) {
 1239              		.loc 1 357 24 is_stmt 1 view .LVU404
 357:source\lcd/print.c ****                        if ((long long)dr->llval < 0) {
 1240              		.loc 1 357 36 is_stmt 0 view .LVU405
 1241 049e 0735     		adds	r5, r5, #7
 1242              	.LVL152:
 357:source\lcd/print.c ****                        if ((long long)dr->llval < 0) {
 1243              		.loc 1 357 36 view .LVU406
 1244 04a0 25F00702 		bic	r2, r5, #7
 1245 04a4 1546     		mov	r5, r2
 1246              	.LVL153:
 357:source\lcd/print.c ****                        if ((long long)dr->llval < 0) {
 1247              		.loc 1 357 36 view .LVU407
 1248 04a6 5268     		ldr	r2, [r2, #4]
 1249              	.LVL154:
 358:source\lcd/print.c ****                           dr->llval = -dr->llval;
 1250              		.loc 1 358 24 is_stmt 1 view .LVU408
 357:source\lcd/print.c ****                        if ((long long)dr->llval < 0) {
 1251              		.loc 1 357 36 is_stmt 0 view .LVU409
 1252 04a8 55F8081B 		ldr	r1, [r5], #8
 1253              	.LVL155:
 358:source\lcd/print.c ****                           dr->llval = -dr->llval;
 1254              		.loc 1 358 27 view .LVU410
 1255 04ac 002A     		cmp	r2, #0
 1256 04ae 09DB     		blt	.L86
 357:source\lcd/print.c ****                        if ((long long)dr->llval < 0) {
 1257              		.loc 1 357 34 view .LVU411
 1258 04b0 C4E90E12 		strd	r1, r2, [r4, #56]
 1259              	.LBE85:
 225:source\lcd/print.c ****                for (;;) {
 1260              		.loc 1 225 29 view .LVU412
 1261 04b4 0022     		movs	r2, #0
 1262              	.L87:
 1263              	.LBB86:
 367:source\lcd/print.c ****                   }
 1264              		.loc 1 367 78 discriminator 1 view .LVU413
 1265 04b6 1AF0020F 		tst	r10, #2
 1266 04ba 18D1     		bne	.L153
 367:source\lcd/print.c ****                   }
 1267              		.loc 1 367 105 discriminator 3 view .LVU414
 1268 04bc 9849     		ldr	r1, .L223+8
 1269 04be 1AF0040F 		tst	r10, #4
 1270 04c2 4AE7     		b	.L220
 1271              	.L86:
 359:source\lcd/print.c ****                           w = -1;
 1272              		.loc 1 359 27 is_stmt 1 view .LVU415
 359:source\lcd/print.c ****                           w = -1;
 1273              		.loc 1 359 39 is_stmt 0 view .LVU416
 1274 04c4 4942     		negs	r1, r1
 1275 04c6 62EB4202 		sbc	r2, r2, r2, lsl #1
 359:source\lcd/print.c ****                           w = -1;
 1276              		.loc 1 359 37 view .LVU417
 1277 04ca C4E90E12 		strd	r1, r2, [r4, #56]
 360:source\lcd/print.c ****                        } else w = 0;
 1278              		.loc 1 360 27 is_stmt 1 view .LVU418
 1279              	.LVL156:
 367:source\lcd/print.c ****                   }
 1280              		.loc 1 367 21 view .LVU419
 1281              	.LBE86:
 225:source\lcd/print.c ****                for (;;) {
 1282              		.loc 1 225 29 is_stmt 0 view .LVU420
 1283 04ce 0022     		movs	r2, #0
 1284              	.LVL157:
 1285              	.L152:
 1286              	.LBB87:
 367:source\lcd/print.c ****                   }
 1287              		.loc 1 367 52 view .LVU421
 1288 04d0 9449     		ldr	r1, .L223+12
 1289 04d2 DAE7     		b	.L88
 1290              	.L85:
 363:source\lcd/print.c ****                        if (flags & _SHORTSPEC) w = (signed short)w;
 1291              		.loc 1 363 24 is_stmt 1 view .LVU422
 1292              	.LVL158:
 363:source\lcd/print.c ****                        if (flags & _SHORTSPEC) w = (signed short)w;
 1293              		.loc 1 363 26 is_stmt 0 view .LVU423
 1294 04d4 55F8041B 		ldr	r1, [r5], #4
 1295              	.LVL159:
 364:source\lcd/print.c ****                        v = (w < 0) ? -w : w;
 1296              		.loc 1 364 24 is_stmt 1 view .LVU424
 364:source\lcd/print.c ****                        v = (w < 0) ? -w : w;
 1297              		.loc 1 364 27 is_stmt 0 view .LVU425
 1298 04d8 1AF0800F 		tst	r10, #128
 364:source\lcd/print.c ****                        v = (w < 0) ? -w : w;
 1299              		.loc 1 364 48 is_stmt 1 view .LVU426
 364:source\lcd/print.c ****                        v = (w < 0) ? -w : w;
 1300              		.loc 1 364 52 is_stmt 0 view .LVU427
 1301 04dc 18BF     		it	ne
 1302 04de 09B2     		sxthne	r1, r1
 1303              	.LVL160:
 365:source\lcd/print.c ****                     }
 1304              		.loc 1 365 24 is_stmt 1 view .LVU428
 365:source\lcd/print.c ****                     }
 1305              		.loc 1 365 41 is_stmt 0 view .LVU429
 1306 04e0 81EAE172 		eor	r2, r1, r1, asr #31
 367:source\lcd/print.c ****                   }
 1307              		.loc 1 367 52 view .LVU430
 1308 04e4 0029     		cmp	r1, #0
 365:source\lcd/print.c ****                     }
 1309              		.loc 1 365 41 view .LVU431
 1310 04e6 A2EBE172 		sub	r2, r2, r1, asr #31
 1311              	.LVL161:
 367:source\lcd/print.c ****                   }
 1312              		.loc 1 367 21 is_stmt 1 view .LVU432
 367:source\lcd/print.c ****                   }
 1313              		.loc 1 367 52 is_stmt 0 view .LVU433
 1314 04ea E4DA     		bge	.L87
 1315 04ec F0E7     		b	.L152
 1316              	.LVL162:
 1317              	.L153:
 367:source\lcd/print.c ****                   }
 1318              		.loc 1 367 78 view .LVU434
 1319 04ee 8E49     		ldr	r1, .L223+16
 1320 04f0 CBE7     		b	.L88
 1321              	.LVL163:
 1322              	.L155:
 367:source\lcd/print.c ****                   }
 1323              		.loc 1 367 78 view .LVU435
 1324              	.LBE87:
 382:source\lcd/print.c ****                     }
 1325              		.loc 1 382 60 view .LVU436
 1326 04f2 8D4A     		ldr	r2, .L223+16
 1327 04f4 24E6     		b	.L91
 1328              	.LVL164:
 1329              	.L93:
 1330              	.LBB88:
 1331              	.LBB81:
 119:source\lcd/print.c **** 	      unsigned long long w = dr->llval;
 1332              		.loc 1 119 5 is_stmt 1 view .LVU437
 119:source\lcd/print.c **** 	      unsigned long long w = dr->llval;
 1333              		.loc 1 119 8 is_stmt 0 view .LVU438
 1334 04f6 1AF04008 		ands	r8, r10, #64
 1335 04fa 0BD1     		bne	.L97
 1336 04fc 08AB     		add	r3, sp, #32
 1337              	.LVL165:
 1338              	.L98:
 126:source\lcd/print.c **** 		    buff[len++] = dr->hextab[v & 0xf];
 1339              		.loc 1 126 17 is_stmt 1 view .LVU439
 1340 04fe 8AB1     		cbz	r2, .L101
 127:source\lcd/print.c **** 		    v = v >> 4;
 1341              		.loc 1 127 7 view .LVU440
 127:source\lcd/print.c **** 		    v = v >> 4;
 1342              		.loc 1 127 34 is_stmt 0 view .LVU441
 1343 0500 02F00F01 		and	r1, r2, #15
 127:source\lcd/print.c **** 		    v = v >> 4;
 1344              		.loc 1 127 31 view .LVU442
 1345 0504 E06A     		ldr	r0, [r4, #44]
 127:source\lcd/print.c **** 		    v = v >> 4;
 1346              		.loc 1 127 19 view .LVU443
 1347 0506 415C     		ldrb	r1, [r0, r1]	@ zero_extendqisi2
 1348 0508 03F8011B 		strb	r1, [r3], #1
 127:source\lcd/print.c **** 		    v = v >> 4;
 1349              		.loc 1 127 15 view .LVU444
 1350 050c 08F10108 		add	r8, r8, #1
 1351              	.LVL166:
 128:source\lcd/print.c **** 	      }
 1352              		.loc 1 128 7 is_stmt 1 view .LVU445
 128:source\lcd/print.c **** 	      }
 1353              		.loc 1 128 9 is_stmt 0 view .LVU446
 1354 0510 1209     		lsrs	r2, r2, #4
 1355              	.LVL167:
 128:source\lcd/print.c **** 	      }
 1356              		.loc 1 128 9 view .LVU447
 1357 0512 F4E7     		b	.L98
 1358              	.LVL168:
 1359              	.L97:
 1360              	.LBB60:
 120:source\lcd/print.c **** 	      while (w != 0) {
 1361              		.loc 1 120 8 is_stmt 1 view .LVU448
 120:source\lcd/print.c **** 	      while (w != 0) {
 1362              		.loc 1 120 27 is_stmt 0 view .LVU449
 1363 0514 D4E90E31 		ldrd	r3, r1, [r4, #56]
 1364              	.LVL169:
 121:source\lcd/print.c **** 		    buff[len++] = dr->hextab[(int)w & 0xf];
 1365              		.loc 1 121 8 is_stmt 1 view .LVU450
 1366 0518 08AA     		add	r2, sp, #32
 1367              	.LVL170:
 121:source\lcd/print.c **** 		    buff[len++] = dr->hextab[(int)w & 0xf];
 1368              		.loc 1 121 8 is_stmt 0 view .LVU451
 1369              	.LBE60:
 110:source\lcd/print.c ****       char buff[32];       /* used to accumulate value to print    */
 1370              		.loc 1 110 11 view .LVU452
 1371 051a 4FF00008 		mov	r8, #0
 1372              	.LVL171:
 1373              	.L99:
 1374              	.LBB61:
 121:source\lcd/print.c **** 		    buff[len++] = dr->hextab[(int)w & 0xf];
 1375              		.loc 1 121 17 is_stmt 1 view .LVU453
 1376 051e 53EA0100 		orrs	r0, r3, r1
 1377 0522 55D1     		bne	.L100
 1378              	.LVL172:
 1379              	.L101:
 121:source\lcd/print.c **** 		    buff[len++] = dr->hextab[(int)w & 0xf];
 1380              		.loc 1 121 17 is_stmt 0 view .LVU454
 1381              	.LBE61:
 1382              	.LBB62:
 171:source\lcd/print.c ****       int width = dr->width;
 1383              		.loc 1 171 7 is_stmt 1 view .LVU455
 172:source\lcd/print.c ****       if (flags & _FPCONV) {
 1384              		.loc 1 172 7 view .LVU456
 173:source\lcd/print.c **** 	 precision = 0;
 1385              		.loc 1 173 7 view .LVU457
 173:source\lcd/print.c **** 	 precision = 0;
 1386              		.loc 1 173 10 is_stmt 0 view .LVU458
 1387 0524 1AF40073 		ands	r3, r10, #512
 1388 0528 0593     		str	r3, [sp, #20]
 178:source\lcd/print.c ****          if ((precision -= len)<0) precision = 0;
 1389              		.loc 1 178 10 is_stmt 1 view .LVU459
 178:source\lcd/print.c ****          if ((precision -= len)<0) precision = 0;
 1390              		.loc 1 178 20 is_stmt 0 view .LVU460
 1391 052a 08BF     		it	eq
 1392 052c A368     		ldreq	r3, [r4, #8]
 1393              	.LVL173:
 179:source\lcd/print.c ****       }
 1394              		.loc 1 179 10 is_stmt 1 view .LVU461
 181:source\lcd/print.c ****       if (!(flags & _PADZERO)) pre_padding(dr, p);
 1395              		.loc 1 181 35 is_stmt 0 view .LVU462
 1396 052e 6068     		ldr	r0, [r4, #4]
 179:source\lcd/print.c ****       }
 1397              		.loc 1 179 25 view .LVU463
 1398 0530 06BF     		itte	eq
 1399 0532 A3EB0803 		subeq	r3, r3, r8
 1400              	.LVL174:
 179:source\lcd/print.c ****       }
 1401              		.loc 1 179 13 view .LVU464
 1402 0536 23EAE373 		biceq	r3, r3, r3, asr #31
 1403 053a 0023     		movne	r3, #0
 1404 053c 0293     		str	r3, [sp, #8]
 1405              	.LVL175:
 181:source\lcd/print.c ****       if (!(flags & _PADZERO)) pre_padding(dr, p);
 1406              		.loc 1 181 7 is_stmt 1 view .LVU465
 181:source\lcd/print.c ****       if (!(flags & _PADZERO)) pre_padding(dr, p);
 1407              		.loc 1 181 35 is_stmt 0 view .LVU466
 1408 053e FFF7FEFF 		bl	strlen
 1409              	.LVL176:
 181:source\lcd/print.c ****       if (!(flags & _PADZERO)) pre_padding(dr, p);
 1410              		.loc 1 181 27 view .LVU467
 1411 0542 029B     		ldr	r3, [sp, #8]
 181:source\lcd/print.c ****       if (!(flags & _PADZERO)) pre_padding(dr, p);
 1412              		.loc 1 181 13 view .LVU468
 1413 0544 3F1A     		subs	r7, r7, r0
 1414              	.LVL177:
 181:source\lcd/print.c ****       if (!(flags & _PADZERO)) pre_padding(dr, p);
 1415              		.loc 1 181 27 view .LVU469
 1416 0546 4344     		add	r3, r8, r3
 181:source\lcd/print.c ****       if (!(flags & _PADZERO)) pre_padding(dr, p);
 1417              		.loc 1 181 13 view .LVU470
 1418 0548 A7EB030B 		sub	fp, r7, r3
 1419              	.LVL178:
 182:source\lcd/print.c ****       {
 1420              		.loc 1 182 7 is_stmt 1 view .LVU471
 182:source\lcd/print.c ****       {
 1421              		.loc 1 182 32 view .LVU472
 1422 054c 0AF00103 		and	r3, r10, #1
 1423 0550 0493     		str	r3, [sp, #16]
 1424 0552 40F20113 		movw	r3, #257
 1425 0556 1AEA030F 		tst	r10, r3
 1426 055a 00F0A180 		beq	.L158
 1427              	.LBE62:
 110:source\lcd/print.c ****       char buff[32];       /* used to accumulate value to print    */
 1428              		.loc 1 110 20 is_stmt 0 view .LVU473
 1429 055e 0027     		movs	r7, #0
 1430              	.LVL179:
 1431              	.L117:
 1432              	.LBB71:
 1433              	.LBB63:
 182:source\lcd/print.c ****       {
 1434              		.loc 1 182 32 is_stmt 1 view .LVU474
 1435              	.LBE63:
 182:source\lcd/print.c ****       {
 1436              		.loc 1 182 50 view .LVU475
 1437              	.LBB64:
 184:source\lcd/print.c ****       char *prefix = dr->fpr.prefix;
 1438              		.loc 1 184 7 view .LVU476
 185:source\lcd/print.c ****       for (; (c=*prefix++)!=0; charcount++) xputc(dr, c, p);
 1439              		.loc 1 185 7 view .LVU477
 185:source\lcd/print.c ****       for (; (c=*prefix++)!=0; charcount++) xputc(dr, c, p);
 1440              		.loc 1 185 13 is_stmt 0 view .LVU478
 1441 0560 6368     		ldr	r3, [r4, #4]
 1442              	.LVL180:
 186:source\lcd/print.c ****       }
 1443              		.loc 1 186 7 is_stmt 1 view .LVU479
 185:source\lcd/print.c ****       for (; (c=*prefix++)!=0; charcount++) xputc(dr, c, p);
 1444              		.loc 1 185 13 is_stmt 0 view .LVU480
 1445 0562 1946     		mov	r1, r3
 1446              	.LVL181:
 1447              	.L119:
 186:source\lcd/print.c ****       }
 1448              		.loc 1 186 27 is_stmt 1 view .LVU481
 186:source\lcd/print.c ****       }
 1449              		.loc 1 186 24 is_stmt 0 view .LVU482
 1450 0564 0A46     		mov	r2, r1
 1451              	.LVL182:
 186:source\lcd/print.c ****       }
 1452              		.loc 1 186 16 view .LVU483
 1453 0566 12F8010B 		ldrb	r0, [r2], #1	@ zero_extendqisi2
 1454              	.LVL183:
 186:source\lcd/print.c ****       }
 1455              		.loc 1 186 16 view .LVU484
 1456 056a 0390     		str	r0, [sp, #12]
 1457              	.LVL184:
 186:source\lcd/print.c ****       }
 1458              		.loc 1 186 27 view .LVU485
 1459 056c 0028     		cmp	r0, #0
 1460 056e 40F09980 		bne	.L120
 1461 0572 FB1A     		subs	r3, r7, r3
 1462 0574 CF18     		adds	r7, r1, r3
 1463              	.LBE64:
 188:source\lcd/print.c ****       if (flags & _FPCONV) {
 1464              		.loc 1 188 7 is_stmt 1 view .LVU486
 1465 0576 049B     		ldr	r3, [sp, #16]
 1466 0578 8BB9     		cbnz	r3, .L121
 1467              	.LBB65:
 188:source\lcd/print.c ****       if (flags & _FPCONV) {
 1468              		.loc 1 188 7 view .LVU487
 1469 057a 1AF4807F 		tst	r10, #256
 1470 057e 0CBF     		ite	eq
 1471 0580 2023     		moveq	r3, #32
 1472 0582 3023     		movne	r3, #48
 1473 0584 0693     		str	r3, [sp, #24]
 1474              	.LVL185:
 188:source\lcd/print.c ****       if (flags & _FPCONV) {
 1475              		.loc 1 188 7 view .LVU488
 1476 0586 DA46     		mov	r10, fp
 1477              	.LVL186:
 1478              	.L123:
 188:source\lcd/print.c ****       if (flags & _FPCONV) {
 1479              		.loc 1 188 7 view .LVU489
 188:source\lcd/print.c ****       if (flags & _FPCONV) {
 1480              		.loc 1 188 7 is_stmt 0 view .LVU490
 1481 0588 BAF1010A 		subs	r10, r10, #1
 1482              	.LVL187:
 188:source\lcd/print.c ****       if (flags & _FPCONV) {
 1483              		.loc 1 188 7 view .LVU491
 1484 058c 40F19480 		bpl	.L124
 1485 0590 2BEAEB73 		bic	r3, fp, fp, asr #31
 1486 0594 0BF1FF32 		add	r2, fp, #-1
 1487 0598 1F44     		add	r7, r7, r3
 1488 059a A2EB030B 		sub	fp, r2, r3
 1489              	.LVL188:
 1490              	.L121:
 188:source\lcd/print.c ****       if (flags & _FPCONV) {
 1491              		.loc 1 188 7 is_stmt 1 view .LVU492
 1492              	.LBE65:
 188:source\lcd/print.c ****       if (flags & _FPCONV) {
 1493              		.loc 1 188 25 view .LVU493
 189:source\lcd/print.c **** 	 int i, c;
 1494              		.loc 1 189 7 view .LVU494
 189:source\lcd/print.c **** 	 int i, c;
 1495              		.loc 1 189 10 is_stmt 0 view .LVU495
 1496 059e 059B     		ldr	r3, [sp, #20]
 1497 05a0 002B     		cmp	r3, #0
 1498 05a2 40F0A780 		bne	.L125
 1499 05a6 DDF808A0 		ldr	r10, [sp, #8]
 1500              	.LVL189:
 1501              	.L126:
 206:source\lcd/print.c **** 	 charcount += len;
 1502              		.loc 1 206 3 is_stmt 1 view .LVU496
 1503 05aa BAF1010A 		subs	r10, r10, #1
 1504              	.LVL190:
 206:source\lcd/print.c **** 	 charcount += len;
 1505              		.loc 1 206 3 is_stmt 0 view .LVU497
 1506 05ae 80F0BD80 		bcs	.L135
 1507 05b2 029B     		ldr	r3, [sp, #8]
 1508 05b4 3B44     		add	r3, r3, r7
 206:source\lcd/print.c **** 	 charcount += len;
 1509              		.loc 1 206 36 is_stmt 1 view .LVU498
 207:source\lcd/print.c ****          while (len-- > 0) xputc(dr, buff[len], p);
 1510              		.loc 1 207 3 view .LVU499
 207:source\lcd/print.c ****          while (len-- > 0) xputc(dr, buff[len], p);
 1511              		.loc 1 207 13 is_stmt 0 view .LVU500
 1512 05b6 08EB0307 		add	r7, r8, r3
 1513              	.LVL191:
 208:source\lcd/print.c ****       }
 1514              		.loc 1 208 10 is_stmt 1 view .LVU501
 1515              	.L136:
 208:source\lcd/print.c ****       }
 1516              		.loc 1 208 23 view .LVU502
 1517 05ba B8F10108 		subs	r8, r8, #1
 1518              	.LVL192:
 208:source\lcd/print.c ****       }
 1519              		.loc 1 208 23 is_stmt 0 view .LVU503
 1520 05be C0F09C80 		bcc	.L134
 208:source\lcd/print.c ****       }
 1521              		.loc 1 208 28 is_stmt 1 view .LVU504
 1522 05c2 08AA     		add	r2, sp, #32
 1523 05c4 636A     		ldr	r3, [r4, #36]
 1524 05c6 0199     		ldr	r1, [sp, #4]
 1525 05c8 12F80800 		ldrb	r0, [r2, r8]	@ zero_extendqisi2
 1526 05cc 9847     		blx	r3
 1527              	.LVL193:
 1528 05ce F4E7     		b	.L136
 1529              	.LVL194:
 1530              	.L100:
 208:source\lcd/print.c ****       }
 1531              		.loc 1 208 28 is_stmt 0 view .LVU505
 1532              	.LBE71:
 1533              	.LBB72:
 122:source\lcd/print.c **** 		    w = w >> 4;
 1534              		.loc 1 122 7 is_stmt 1 view .LVU506
 122:source\lcd/print.c **** 		    w = w >> 4;
 1535              		.loc 1 122 39 is_stmt 0 view .LVU507
 1536 05d0 03F00F0C 		and	ip, r3, #15
 122:source\lcd/print.c **** 		    w = w >> 4;
 1537              		.loc 1 122 31 view .LVU508
 1538 05d4 E06A     		ldr	r0, [r4, #44]
 123:source\lcd/print.c **** 	      }
 1539              		.loc 1 123 9 view .LVU509
 1540 05d6 1B09     		lsrs	r3, r3, #4
 1541              	.LVL195:
 122:source\lcd/print.c **** 		    w = w >> 4;
 1542              		.loc 1 122 19 view .LVU510
 1543 05d8 10F80C00 		ldrb	r0, [r0, ip]	@ zero_extendqisi2
 1544 05dc 02F8010B 		strb	r0, [r2], #1
 123:source\lcd/print.c **** 	      }
 1545              		.loc 1 123 9 view .LVU511
 1546 05e0 43EA0173 		orr	r3, r3, r1, lsl #28
 122:source\lcd/print.c **** 		    w = w >> 4;
 1547              		.loc 1 122 15 view .LVU512
 1548 05e4 08F10108 		add	r8, r8, #1
 1549              	.LVL196:
 123:source\lcd/print.c **** 	      }
 1550              		.loc 1 123 7 is_stmt 1 view .LVU513
 123:source\lcd/print.c **** 	      }
 1551              		.loc 1 123 9 is_stmt 0 view .LVU514
 1552 05e8 0909     		lsrs	r1, r1, #4
 123:source\lcd/print.c **** 	      }
 1553              		.loc 1 123 9 view .LVU515
 1554 05ea 98E7     		b	.L99
 1555              	.LVL197:
 1556              	.L103:
 123:source\lcd/print.c **** 	      }
 1557              		.loc 1 123 9 view .LVU516
 1558              	.LBE72:
 1559              	.LBB73:
 134:source\lcd/print.c **** 	      while (w != 0) {
 1560              		.loc 1 134 8 is_stmt 1 view .LVU517
 134:source\lcd/print.c **** 	      while (w != 0) {
 1561              		.loc 1 134 27 is_stmt 0 view .LVU518
 1562 05ec D4E90E20 		ldrd	r2, r0, [r4, #56]
 1563              	.LVL198:
 135:source\lcd/print.c **** 		    buff[len++] = dr->hextab[(int)w & 7];
 1564              		.loc 1 135 8 is_stmt 1 view .LVU519
 1565 05f0 08AB     		add	r3, sp, #32
 1566              	.LVL199:
 135:source\lcd/print.c **** 		    buff[len++] = dr->hextab[(int)w & 7];
 1567              		.loc 1 135 8 is_stmt 0 view .LVU520
 1568              	.LBE73:
 110:source\lcd/print.c ****       char buff[32];       /* used to accumulate value to print    */
 1569              		.loc 1 110 11 view .LVU521
 1570 05f2 8846     		mov	r8, r1
 1571              	.LVL200:
 1572              	.L105:
 1573              	.LBB74:
 135:source\lcd/print.c **** 		    buff[len++] = dr->hextab[(int)w & 7];
 1574              		.loc 1 135 17 is_stmt 1 view .LVU522
 1575 05f4 52EA0001 		orrs	r1, r2, r0
 1576 05f8 06D1     		bne	.L106
 1577              	.LVL201:
 1578              	.L107:
 135:source\lcd/print.c **** 		    buff[len++] = dr->hextab[(int)w & 7];
 1579              		.loc 1 135 17 is_stmt 0 view .LVU523
 1580              	.LBE74:
 145:source\lcd/print.c **** 	   break;
 1581              		.loc 1 145 5 is_stmt 1 view .LVU524
 145:source\lcd/print.c **** 	   break;
 1582              		.loc 1 145 8 is_stmt 0 view .LVU525
 1583 05fa 1AF0080F 		tst	r10, #8
 1584 05fe 91D0     		beq	.L101
 145:source\lcd/print.c **** 	   break;
 1585              		.loc 1 145 27 is_stmt 1 view .LVU526
 145:source\lcd/print.c **** 	   break;
 1586              		.loc 1 145 44 is_stmt 0 view .LVU527
 1587 0600 A368     		ldr	r3, [r4, #8]
 1588 0602 013B     		subs	r3, r3, #1
 1589 0604 A360     		str	r3, [r4, #8]
 1590 0606 8DE7     		b	.L101
 1591              	.LVL202:
 1592              	.L106:
 1593              	.LBB75:
 136:source\lcd/print.c **** 		    w = w >> 3;
 1594              		.loc 1 136 7 is_stmt 1 view .LVU528
 136:source\lcd/print.c **** 		    w = w >> 3;
 1595              		.loc 1 136 39 is_stmt 0 view .LVU529
 1596 0608 02F0070C 		and	ip, r2, #7
 136:source\lcd/print.c **** 		    w = w >> 3;
 1597              		.loc 1 136 31 view .LVU530
 1598 060c E16A     		ldr	r1, [r4, #44]
 137:source\lcd/print.c **** 	      }
 1599              		.loc 1 137 9 view .LVU531
 1600 060e D208     		lsrs	r2, r2, #3
 1601              	.LVL203:
 136:source\lcd/print.c **** 		    w = w >> 3;
 1602              		.loc 1 136 19 view .LVU532
 1603 0610 11F80C10 		ldrb	r1, [r1, ip]	@ zero_extendqisi2
 1604 0614 03F8011B 		strb	r1, [r3], #1
 137:source\lcd/print.c **** 	      }
 1605              		.loc 1 137 9 view .LVU533
 1606 0618 42EA4072 		orr	r2, r2, r0, lsl #29
 136:source\lcd/print.c **** 		    w = w >> 3;
 1607              		.loc 1 136 15 view .LVU534
 1608 061c 08F10108 		add	r8, r8, #1
 1609              	.LVL204:
 137:source\lcd/print.c **** 	      }
 1610              		.loc 1 137 7 is_stmt 1 view .LVU535
 137:source\lcd/print.c **** 	      }
 1611              		.loc 1 137 9 is_stmt 0 view .LVU536
 1612 0620 C008     		lsrs	r0, r0, #3
 137:source\lcd/print.c **** 	      }
 1613              		.loc 1 137 9 view .LVU537
 1614 0622 E7E7     		b	.L105
 1615              	.LVL205:
 1616              	.L95:
 137:source\lcd/print.c **** 	      }
 1617              		.loc 1 137 9 view .LVU538
 1618              	.LBE75:
 150:source\lcd/print.c **** 	      unsigned long long w = dr->llval;
 1619              		.loc 1 150 5 is_stmt 1 view .LVU539
 150:source\lcd/print.c **** 	      unsigned long long w = dr->llval;
 1620              		.loc 1 150 8 is_stmt 0 view .LVU540
 1621 0624 1AF04008 		ands	r8, r10, #64
 1622 0628 0FD1     		bne	.L110
 1623 062a 08AB     		add	r3, sp, #32
 1624              	.LVL206:
 158:source\lcd/print.c **** 		    v = v / 10;
 1625              		.loc 1 158 36 view .LVU541
 1626 062c 0A21     		movs	r1, #10
 1627              	.LVL207:
 1628              	.L111:
 157:source\lcd/print.c **** 		    buff[len++] = '0' + (char)(v % 10);
 1629              		.loc 1 157 24 is_stmt 1 view .LVU542
 1630 062e 002A     		cmp	r2, #0
 1631 0630 3FF478AF 		beq	.L101
 158:source\lcd/print.c **** 		    v = v / 10;
 1632              		.loc 1 158 7 view .LVU543
 158:source\lcd/print.c **** 		    v = v / 10;
 1633              		.loc 1 158 36 is_stmt 0 view .LVU544
 1634 0634 B2FBF1F0 		udiv	r0, r2, r1
 1635 0638 01FB1022 		mls	r2, r1, r0, r2
 1636              	.LVL208:
 158:source\lcd/print.c **** 		    v = v / 10;
 1637              		.loc 1 158 25 view .LVU545
 1638 063c 3032     		adds	r2, r2, #48
 158:source\lcd/print.c **** 		    v = v / 10;
 1639              		.loc 1 158 19 view .LVU546
 1640 063e 03F8012B 		strb	r2, [r3], #1
 158:source\lcd/print.c **** 		    v = v / 10;
 1641              		.loc 1 158 15 view .LVU547
 1642 0642 08F10108 		add	r8, r8, #1
 1643              	.LVL209:
 159:source\lcd/print.c **** 	      }
 1644              		.loc 1 159 7 is_stmt 1 view .LVU548
 159:source\lcd/print.c **** 	      }
 1645              		.loc 1 159 9 is_stmt 0 view .LVU549
 1646 0646 0246     		mov	r2, r0
 1647              	.LVL210:
 159:source\lcd/print.c **** 	      }
 1648              		.loc 1 159 9 view .LVU550
 1649 0648 F1E7     		b	.L111
 1650              	.LVL211:
 1651              	.L110:
 1652              	.LBB76:
 151:source\lcd/print.c **** 	      while (w != 0) {
 1653              		.loc 1 151 8 is_stmt 1 view .LVU551
 151:source\lcd/print.c **** 	      while (w != 0) {
 1654              		.loc 1 151 27 is_stmt 0 view .LVU552
 1655 064a D4E90E01 		ldrd	r0, r1, [r4, #56]
 1656              	.LVL212:
 152:source\lcd/print.c **** 		    buff[len++] = '0' + (char)(w % 10);
 1657              		.loc 1 152 8 is_stmt 1 view .LVU553
 1658 064e 0DF1200B 		add	fp, sp, #32
 1659              	.LBE76:
 110:source\lcd/print.c ****       char buff[32];       /* used to accumulate value to print    */
 1660              		.loc 1 110 11 is_stmt 0 view .LVU554
 1661 0652 4FF00008 		mov	r8, #0
 1662              	.LVL213:
 1663              	.L112:
 1664              	.LBB77:
 152:source\lcd/print.c **** 		    buff[len++] = '0' + (char)(w % 10);
 1665              		.loc 1 152 17 is_stmt 1 view .LVU555
 1666 0656 50EA0103 		orrs	r3, r0, r1
 1667 065a 3FF463AF 		beq	.L101
 153:source\lcd/print.c ****                     w = w / 10;
 1668              		.loc 1 153 7 view .LVU556
 1669 065e 0A22     		movs	r2, #10
 1670 0660 0023     		movs	r3, #0
 1671 0662 FFF7FEFF 		bl	__aeabi_uldivmod
 1672              	.LVL214:
 153:source\lcd/print.c ****                     w = w / 10;
 1673              		.loc 1 153 25 is_stmt 0 view .LVU557
 1674 0666 3032     		adds	r2, r2, #48
 153:source\lcd/print.c ****                     w = w / 10;
 1675              		.loc 1 153 19 view .LVU558
 1676 0668 0BF8012B 		strb	r2, [fp], #1
 153:source\lcd/print.c ****                     w = w / 10;
 1677              		.loc 1 153 15 view .LVU559
 1678 066c 08F10108 		add	r8, r8, #1
 1679              	.LVL215:
 154:source\lcd/print.c ****               }
 1680              		.loc 1 154 21 is_stmt 1 view .LVU560
 154:source\lcd/print.c ****               }
 1681              		.loc 1 154 21 is_stmt 0 view .LVU561
 1682 0670 F1E7     		b	.L112
 1683              	.LVL216:
 1684              	.L94:
 154:source\lcd/print.c ****               }
 1685              		.loc 1 154 21 view .LVU562
 1686              	.LBE77:
 164:source\lcd/print.c ****            buff[1] = DecimalPoint;
 1687              		.loc 1 164 5 is_stmt 1 view .LVU563
 165:source\lcd/print.c ****            buff[2] = '0';
 1688              		.loc 1 165 12 view .LVU564
 166:source\lcd/print.c ****            len = 3;
 1689              		.loc 1 166 12 view .LVU565
 164:source\lcd/print.c ****            buff[1] = DecimalPoint;
 1690              		.loc 1 164 13 is_stmt 0 view .LVU566
 1691 0672 42F63063 		movw	r3, #11824
 1692              	.LVL217:
 164:source\lcd/print.c ****            buff[1] = DecimalPoint;
 1693              		.loc 1 164 13 view .LVU567
 1694 0676 ADF82030 		strh	r3, [sp, #32]	@ movhi
 166:source\lcd/print.c ****            len = 3;
 1695              		.loc 1 166 20 view .LVU568
 1696 067a 3023     		movs	r3, #48
 1697 067c 8DF82230 		strb	r3, [sp, #34]
 167:source\lcd/print.c ****            break;
 1698              		.loc 1 167 12 is_stmt 1 view .LVU569
 1699              	.LVL218:
 168:source\lcd/print.c ****       }
 1700              		.loc 1 168 12 view .LVU570
 167:source\lcd/print.c ****            break;
 1701              		.loc 1 167 16 is_stmt 0 view .LVU571
 1702 0680 4FF00308 		mov	r8, #3
 168:source\lcd/print.c ****       }
 1703              		.loc 1 168 12 view .LVU572
 1704 0684 4EE7     		b	.L101
 1705              	.LVL219:
 1706              	.L118:
 1707              	.LBB78:
 1708              	.LBB66:
 182:source\lcd/print.c ****       {
 1709              		.loc 1 182 32 is_stmt 1 view .LVU573
 1710 0686 636A     		ldr	r3, [r4, #36]
 1711 0688 0199     		ldr	r1, [sp, #4]
 1712 068a 2020     		movs	r0, #32
 1713 068c 9847     		blx	r3
 1714              	.LVL220:
 1715              	.L116:
 182:source\lcd/print.c ****       {
 1716              		.loc 1 182 32 view .LVU574
 182:source\lcd/print.c ****       {
 1717              		.loc 1 182 32 is_stmt 0 view .LVU575
 1718 068e 013F     		subs	r7, r7, #1
 1719              	.LVL221:
 182:source\lcd/print.c ****       {
 1720              		.loc 1 182 32 view .LVU576
 1721 0690 F9D5     		bpl	.L118
 1722 0692 2BEAEB77 		bic	r7, fp, fp, asr #31
 1723              	.LVL222:
 182:source\lcd/print.c ****       {
 1724              		.loc 1 182 32 view .LVU577
 1725 0696 0BF1FF33 		add	r3, fp, #-1
 1726 069a A3EB070B 		sub	fp, r3, r7
 1727 069e 5FE7     		b	.L117
 1728              	.LVL223:
 1729              	.L158:
 182:source\lcd/print.c ****       {
 1730              		.loc 1 182 32 view .LVU578
 1731              	.LBE66:
 181:source\lcd/print.c ****       if (!(flags & _PADZERO)) pre_padding(dr, p);
 1732              		.loc 1 181 13 view .LVU579
 1733 06a0 5F46     		mov	r7, fp
 1734 06a2 F4E7     		b	.L116
 1735              	.LVL224:
 1736              	.L120:
 181:source\lcd/print.c ****       if (!(flags & _PADZERO)) pre_padding(dr, p);
 1737              		.loc 1 181 13 view .LVU580
 1738 06a4 CDE90632 		strd	r3, r2, [sp, #24]
 1739              	.LBB67:
 186:source\lcd/print.c ****       }
 1740              		.loc 1 186 45 is_stmt 1 view .LVU581
 1741 06a8 0199     		ldr	r1, [sp, #4]
 1742 06aa 636A     		ldr	r3, [r4, #36]
 1743 06ac 0398     		ldr	r0, [sp, #12]
 1744              	.LVL225:
 186:source\lcd/print.c ****       }
 1745              		.loc 1 186 45 is_stmt 0 view .LVU582
 1746 06ae 9847     		blx	r3
 1747              	.LVL226:
 186:source\lcd/print.c ****       }
 1748              		.loc 1 186 41 is_stmt 1 view .LVU583
 186:source\lcd/print.c ****       }
 1749              		.loc 1 186 24 is_stmt 0 view .LVU584
 1750 06b0 079A     		ldr	r2, [sp, #28]
 1751 06b2 069B     		ldr	r3, [sp, #24]
 1752 06b4 1146     		mov	r1, r2
 1753 06b6 55E7     		b	.L119
 1754              	.LVL227:
 1755              	.L124:
 186:source\lcd/print.c ****       }
 1756              		.loc 1 186 24 view .LVU585
 1757              	.LBE67:
 1758              	.LBB68:
 188:source\lcd/print.c ****       if (flags & _FPCONV) {
 1759              		.loc 1 188 7 is_stmt 1 view .LVU586
 1760 06b8 636A     		ldr	r3, [r4, #36]
 1761 06ba 0199     		ldr	r1, [sp, #4]
 1762 06bc 0698     		ldr	r0, [sp, #24]
 1763 06be 9847     		blx	r3
 1764              	.LVL228:
 1765 06c0 62E7     		b	.L123
 1766              	.LVL229:
 1767              	.L133:
 188:source\lcd/print.c ****       if (flags & _FPCONV) {
 1768              		.loc 1 188 7 is_stmt 0 view .LVU587
 1769              	.LBE68:
 1770              	.LBB69:
 192:source\lcd/print.c ****                 case '<':
 1771              		.loc 1 192 7 is_stmt 1 view .LVU588
 192:source\lcd/print.c ****                 case '<':
 1772              		.loc 1 192 23 is_stmt 0 view .LVU589
 1773 06c2 039B     		ldr	r3, [sp, #12]
 1774              	.LVL230:
 192:source\lcd/print.c ****                 case '<':
 1775              		.loc 1 192 23 view .LVU590
 1776 06c4 08AA     		add	r2, sp, #32
 1777 06c6 D05C     		ldrb	r0, [r2, r3]	@ zero_extendqisi2
 1778              	.LVL231:
 192:source\lcd/print.c ****                 case '<':
 1779              		.loc 1 192 7 view .LVU591
 1780 06c8 3C28     		cmp	r0, #60
 1781 06ca 0BD0     		beq	.L127
 1782 06cc 3E28     		cmp	r0, #62
 1783 06ce 1DD0     		beq	.L128
 200:source\lcd/print.c **** 	          charcount++;
 1784              		.loc 1 200 11 is_stmt 1 view .LVU592
 1785 06d0 636A     		ldr	r3, [r4, #36]
 1786 06d2 0199     		ldr	r1, [sp, #4]
 1787 06d4 9847     		blx	r3
 1788              	.LVL232:
 201:source\lcd/print.c **** 	          break;
 1789              		.loc 1 201 12 view .LVU593
 201:source\lcd/print.c **** 	          break;
 1790              		.loc 1 201 21 is_stmt 0 view .LVU594
 1791 06d6 0137     		adds	r7, r7, #1
 1792              	.LVL233:
 202:source\lcd/print.c **** 	     }
 1793              		.loc 1 202 12 is_stmt 1 view .LVU595
 1794 06d8 09E0     		b	.L131
 1795              	.L130:
 194:source\lcd/print.c **** 		  break;
 1796              		.loc 1 194 5 view .LVU596
 1797 06da 636A     		ldr	r3, [r4, #36]
 1798 06dc 0199     		ldr	r1, [sp, #4]
 1799 06de 3020     		movs	r0, #48
 1800 06e0 0137     		adds	r7, r7, #1
 1801              	.LVL234:
 194:source\lcd/print.c **** 		  break;
 1802              		.loc 1 194 5 is_stmt 0 view .LVU597
 1803 06e2 9847     		blx	r3
 1804              	.LVL235:
 1805              	.L127:
 194:source\lcd/print.c **** 		  break;
 1806              		.loc 1 194 5 is_stmt 1 view .LVU598
 1807 06e4 E368     		ldr	r3, [r4, #12]
 1808 06e6 013B     		subs	r3, r3, #1
 1809 06e8 002B     		cmp	r3, #0
 1810 06ea E360     		str	r3, [r4, #12]
 1811 06ec F5DA     		bge	.L130
 1812              	.L131:
 191:source\lcd/print.c **** 	     switch (c = buff[i]) {
 1813              		.loc 1 191 30 view .LVU599
 1814 06ee 039B     		ldr	r3, [sp, #12]
 1815 06f0 0133     		adds	r3, r3, #1
 1816 06f2 0393     		str	r3, [sp, #12]
 1817              	.LVL236:
 1818              	.L125:
 191:source\lcd/print.c **** 	     switch (c = buff[i]) {
 1819              		.loc 1 191 23 view .LVU600
 1820 06f4 039B     		ldr	r3, [sp, #12]
 1821 06f6 9845     		cmp	r8, r3
 1822 06f8 E3D1     		bne	.L133
 1823              	.LVL237:
 1824              	.L134:
 191:source\lcd/print.c **** 	     switch (c = buff[i]) {
 1825              		.loc 1 191 23 is_stmt 0 view .LVU601
 1826              	.LBE69:
 210:source\lcd/print.c ****       return charcount;
 1827              		.loc 1 210 7 is_stmt 1 view .LVU602
 1828 06fa 049B     		ldr	r3, [sp, #16]
 1829 06fc 3BBB     		cbnz	r3, .L160
 1830              	.LVL238:
 1831              	.L139:
 210:source\lcd/print.c ****       return charcount;
 1832              		.loc 1 210 7 view .LVU603
 210:source\lcd/print.c ****       return charcount;
 1833              		.loc 1 210 26 view .LVU604
 211:source\lcd/print.c ****       }
 1834              		.loc 1 211 7 view .LVU605
 211:source\lcd/print.c ****       }
 1835              		.loc 1 211 7 is_stmt 0 view .LVU606
 1836              	.LBE78:
 1837              	.LBE81:
 1838              	.LBE88:
 388:source\lcd/print.c ****                continue;
 1839              		.loc 1 388 26 view .LVU607
 1840 06fe B944     		add	r9, r9, r7
 1841              	.LVL239:
 389:source\lcd/print.c ****             }
 1842              		.loc 1 389 16 is_stmt 1 view .LVU608
 389:source\lcd/print.c ****             }
 1843              		.loc 1 389 16 is_stmt 0 view .LVU609
 1844 0700 87E4     		b	.L6
 1845              	.LVL240:
 1846              	.L132:
 1847              	.LBB89:
 1848              	.LBB82:
 1849              	.LBB79:
 1850              	.LBB70:
 197:source\lcd/print.c **** 	          break;
 1851              		.loc 1 197 12 is_stmt 1 view .LVU610
 1852 0702 636A     		ldr	r3, [r4, #36]
 1853 0704 0199     		ldr	r1, [sp, #4]
 1854 0706 3020     		movs	r0, #48
 1855 0708 0137     		adds	r7, r7, #1
 1856              	.LVL241:
 197:source\lcd/print.c **** 	          break;
 1857              		.loc 1 197 12 is_stmt 0 view .LVU611
 1858 070a 9847     		blx	r3
 1859              	.LVL242:
 1860              	.L128:
 197:source\lcd/print.c **** 	          break;
 1861              		.loc 1 197 12 is_stmt 1 view .LVU612
 1862 070c 2369     		ldr	r3, [r4, #16]
 1863 070e 013B     		subs	r3, r3, #1
 1864 0710 002B     		cmp	r3, #0
 1865 0712 2361     		str	r3, [r4, #16]
 1866 0714 F5DA     		bge	.L132
 197:source\lcd/print.c **** 	          break;
 1867              		.loc 1 197 12 is_stmt 0 view .LVU613
 1868 0716 EAE7     		b	.L131
 1869              	.L224:
 1870              		.align	2
 1871              	.L223:
 1872 0718 09000000 		.word	.LC4
 1873 071c 03000000 		.word	.LC1
 1874 0720 0F000000 		.word	.LC7
 1875 0724 0D000000 		.word	.LC6
 1876 0728 0B000000 		.word	.LC5
 1877              	.LVL243:
 1878              	.L135:
 197:source\lcd/print.c **** 	          break;
 1879              		.loc 1 197 12 view .LVU614
 1880              	.LBE70:
 206:source\lcd/print.c **** 	 charcount += len;
 1881              		.loc 1 206 3 is_stmt 1 view .LVU615
 1882 072c 636A     		ldr	r3, [r4, #36]
 1883 072e 0199     		ldr	r1, [sp, #4]
 1884 0730 3020     		movs	r0, #48
 1885 0732 9847     		blx	r3
 1886              	.LVL244:
 1887 0734 39E7     		b	.L126
 1888              	.LVL245:
 1889              	.L140:
 210:source\lcd/print.c ****       return charcount;
 1890              		.loc 1 210 7 view .LVU616
 1891 0736 636A     		ldr	r3, [r4, #36]
 1892 0738 0199     		ldr	r1, [sp, #4]
 1893 073a 2020     		movs	r0, #32
 1894 073c 9847     		blx	r3
 1895              	.LVL246:
 1896              	.L138:
 210:source\lcd/print.c ****       return charcount;
 1897              		.loc 1 210 7 view .LVU617
 210:source\lcd/print.c ****       return charcount;
 1898              		.loc 1 210 7 is_stmt 0 view .LVU618
 1899 073e B8F10108 		subs	r8, r8, #1
 1900              	.LVL247:
 210:source\lcd/print.c ****       return charcount;
 1901              		.loc 1 210 7 view .LVU619
 1902 0742 F8D5     		bpl	.L140
 1903 0744 BBF1000F 		cmp	fp, #0
 1904 0748 A8BF     		it	ge
 1905 074a 5F44     		addge	r7, r7, fp
 1906 074c D7E7     		b	.L139
 1907              	.LVL248:
 1908              	.L160:
 210:source\lcd/print.c ****       return charcount;
 1909              		.loc 1 210 7 view .LVU620
 1910 074e D846     		mov	r8, fp
 1911 0750 F5E7     		b	.L138
 1912              	.LBE79:
 1913              	.LBE82:
 1914              	.LBE89:
 1915              	.LBE40:
 1916              		.cfi_endproc
 1917              	.LFE5:
 1919 0752 00BF     		.section	.text.sprintf,"ax",%progbits
 1920              		.align	1
 1921              		.global	sprintf
 1922              		.syntax unified
 1923              		.thumb
 1924              		.thumb_func
 1926              	sprintf:
 1927              	.LVL249:
 1928              	.LFB6:
 394:source\lcd/print.c **** 
 395:source\lcd/print.c **** 
 396:source\lcd/print.c **** int sprintf (char *buff, const char *fmt, ...)
 397:source\lcd/print.c **** {
 1929              		.loc 1 397 1 is_stmt 1 view -0
 1930              		.cfi_startproc
 1931              		@ args = 4, pretend = 12, frame = 72
 1932              		@ frame_needed = 0, uses_anonymous_args = 1
 398:source\lcd/print.c ****       StringOutputFile sf;
 1933              		.loc 1 398 7 view .LVU622
 399:source\lcd/print.c ****       va_list a;
 1934              		.loc 1 399 7 view .LVU623
 400:source\lcd/print.c ****       int length;
 1935              		.loc 1 400 7 view .LVU624
 401:source\lcd/print.c ****       printf_display_rec dr;
 1936              		.loc 1 401 7 view .LVU625
 402:source\lcd/print.c ****       va_start(a, fmt);
 1937              		.loc 1 402 7 view .LVU626
 397:source\lcd/print.c ****       StringOutputFile sf;
 1938              		.loc 1 397 1 is_stmt 0 view .LVU627
 1939 0000 0EB4     		push	{r1, r2, r3}
 1940              		.cfi_def_cfa_offset 12
 1941              		.cfi_offset 1, -12
 1942              		.cfi_offset 2, -8
 1943              		.cfi_offset 3, -4
 1944 0002 10B5     		push	{r4, lr}
 1945              		.cfi_def_cfa_offset 20
 1946              		.cfi_offset 4, -20
 1947              		.cfi_offset 14, -16
 1948 0004 93B0     		sub	sp, sp, #76
 1949              		.cfi_def_cfa_offset 96
 397:source\lcd/print.c ****       StringOutputFile sf;
 1950              		.loc 1 397 1 view .LVU628
 1951 0006 15AA     		add	r2, sp, #84
 403:source\lcd/print.c ****       sf.ptr = buff;
 404:source\lcd/print.c ****       dr.putc = _sputc;
 1952              		.loc 1 404 15 view .LVU629
 1953 0008 0A4B     		ldr	r3, .L226
 397:source\lcd/print.c ****       StringOutputFile sf;
 1954              		.loc 1 397 1 view .LVU630
 1955 000a 52F8041B 		ldr	r1, [r2], #4
 1956              		.loc 1 404 15 view .LVU631
 1957 000e 0B93     		str	r3, [sp, #44]
 405:source\lcd/print.c ****       dr.ferror = _serror;
 1958              		.loc 1 405 17 view .LVU632
 1959 0010 094B     		ldr	r3, .L226+4
 1960 0012 0C93     		str	r3, [sp, #48]
 403:source\lcd/print.c ****       sf.ptr = buff;
 1961              		.loc 1 403 14 view .LVU633
 1962 0014 CDE90002 		strd	r0, r2, [sp]
 404:source\lcd/print.c ****       dr.ferror = _serror;
 1963              		.loc 1 404 7 is_stmt 1 view .LVU634
 1964              		.loc 1 405 7 view .LVU635
 406:source\lcd/print.c ****       dr.fn = 0;
 1965              		.loc 1 406 7 view .LVU636
 1966              		.loc 1 406 13 is_stmt 0 view .LVU637
 1967 0018 0024     		movs	r4, #0
 407:source\lcd/print.c ****       length = __vfprintf((char *)&sf, fmt, a, &dr);
 1968              		.loc 1 407 16 view .LVU638
 1969 001a 02AB     		add	r3, sp, #8
 1970 001c 6846     		mov	r0, sp
 1971              	.LVL250:
 406:source\lcd/print.c ****       dr.fn = 0;
 1972              		.loc 1 406 13 view .LVU639
 1973 001e 0A94     		str	r4, [sp, #40]
 1974              		.loc 1 407 7 is_stmt 1 view .LVU640
 1975              		.loc 1 407 16 is_stmt 0 view .LVU641
 1976 0020 FFF7FEFF 		bl	__vfprintf
 1977              	.LVL251:
 408:source\lcd/print.c ****       _sputc(0, (char *)&sf);
 1978              		.loc 1 408 7 is_stmt 1 view .LVU642
 1979              	.LBB90:
 1980              	.LBI90:
  31:source\lcd/print.c **** {
 1981              		.loc 1 31 5 view .LVU643
 1982              	.LBB91:
  33:source\lcd/print.c ****       char *op = sf->ptr;
 1983              		.loc 1 33 7 view .LVU644
  34:source\lcd/print.c ****       int r = *op++ = ch;
 1984              		.loc 1 34 7 view .LVU645
  34:source\lcd/print.c ****       int r = *op++ = ch;
 1985              		.loc 1 34 13 is_stmt 0 view .LVU646
 1986 0024 009B     		ldr	r3, [sp]
 1987              	.LVL252:
  35:source\lcd/print.c ****       sf->ptr = op;
 1988              		.loc 1 35 7 is_stmt 1 view .LVU647
  35:source\lcd/print.c ****       sf->ptr = op;
 1989              		.loc 1 35 21 is_stmt 0 view .LVU648
 1990 0026 1C70     		strb	r4, [r3]
 1991              	.LVL253:
  36:source\lcd/print.c ****       return r;
 1992              		.loc 1 36 7 is_stmt 1 view .LVU649
  37:source\lcd/print.c **** }
 1993              		.loc 1 37 7 view .LVU650
  37:source\lcd/print.c **** }
 1994              		.loc 1 37 7 is_stmt 0 view .LVU651
 1995              	.LBE91:
 1996              	.LBE90:
 409:source\lcd/print.c ****       va_end(a);
 1997              		.loc 1 409 7 is_stmt 1 view .LVU652
 410:source\lcd/print.c ****       return length;
 1998              		.loc 1 410 7 view .LVU653
 411:source\lcd/print.c **** }
 1999              		.loc 1 411 1 is_stmt 0 view .LVU654
 2000 0028 13B0     		add	sp, sp, #76
 2001              		.cfi_def_cfa_offset 20
 2002              		@ sp needed
 2003 002a BDE81040 		pop	{r4, lr}
 2004              		.cfi_restore 14
 2005              		.cfi_restore 4
 2006              		.cfi_def_cfa_offset 12
 2007 002e 03B0     		add	sp, sp, #12
 2008              		.cfi_restore 3
 2009              		.cfi_restore 2
 2010              		.cfi_restore 1
 2011              		.cfi_def_cfa_offset 0
 2012 0030 7047     		bx	lr
 2013              	.L227:
 2014 0032 00BF     		.align	2
 2015              	.L226:
 2016 0034 00000000 		.word	_sputc
 2017 0038 00000000 		.word	_serror
 2018              		.cfi_endproc
 2019              	.LFE6:
 2021              		.section	.text.vsprintf,"ax",%progbits
 2022              		.align	1
 2023              		.global	vsprintf
 2024              		.syntax unified
 2025              		.thumb
 2026              		.thumb_func
 2028              	vsprintf:
 2029              	.LVL254:
 2030              	.LFB7:
 412:source\lcd/print.c **** 
 413:source\lcd/print.c **** 
 414:source\lcd/print.c **** int vsprintf (char *buff, const char *fmt, va_list a)
 415:source\lcd/print.c **** {
 2031              		.loc 1 415 1 is_stmt 1 view -0
 2032              		.cfi_startproc
 2033              		@ args = 0, pretend = 0, frame = 72
 2034              		@ frame_needed = 0, uses_anonymous_args = 0
 416:source\lcd/print.c ****       StringOutputFile sf;
 2035              		.loc 1 416 7 view .LVU656
 417:source\lcd/print.c ****       int length;
 2036              		.loc 1 417 7 view .LVU657
 418:source\lcd/print.c ****       printf_display_rec dr;
 2037              		.loc 1 418 7 view .LVU658
 419:source\lcd/print.c ****       dr.putc = _sputc;
 2038              		.loc 1 419 7 view .LVU659
 415:source\lcd/print.c ****       StringOutputFile sf;
 2039              		.loc 1 415 1 is_stmt 0 view .LVU660
 2040 0000 10B5     		push	{r4, lr}
 2041              		.cfi_def_cfa_offset 8
 2042              		.cfi_offset 4, -8
 2043              		.cfi_offset 14, -4
 2044 0002 92B0     		sub	sp, sp, #72
 2045              		.cfi_def_cfa_offset 80
 2046              		.loc 1 419 15 view .LVU661
 2047 0004 074B     		ldr	r3, .L229
 2048 0006 0B93     		str	r3, [sp, #44]
 420:source\lcd/print.c ****       dr.ferror = _serror;
 2049              		.loc 1 420 7 is_stmt 1 view .LVU662
 2050              		.loc 1 420 17 is_stmt 0 view .LVU663
 2051 0008 074B     		ldr	r3, .L229+4
 2052 000a 0C93     		str	r3, [sp, #48]
 421:source\lcd/print.c ****       dr.fn = 0;
 2053              		.loc 1 421 7 is_stmt 1 view .LVU664
 2054              		.loc 1 421 13 is_stmt 0 view .LVU665
 2055 000c 0024     		movs	r4, #0
 422:source\lcd/print.c ****       sf.ptr = buff;
 2056              		.loc 1 422 14 view .LVU666
 2057 000e 0190     		str	r0, [sp, #4]
 423:source\lcd/print.c ****       length = __vfprintf((char *)&sf, fmt, a, &dr);
 2058              		.loc 1 423 16 view .LVU667
 2059 0010 02AB     		add	r3, sp, #8
 2060 0012 01A8     		add	r0, sp, #4
 2061              	.LVL255:
 421:source\lcd/print.c ****       dr.fn = 0;
 2062              		.loc 1 421 13 view .LVU668
 2063 0014 0A94     		str	r4, [sp, #40]
 422:source\lcd/print.c ****       sf.ptr = buff;
 2064              		.loc 1 422 7 is_stmt 1 view .LVU669
 2065              		.loc 1 423 7 view .LVU670
 2066              		.loc 1 423 16 is_stmt 0 view .LVU671
 2067 0016 FFF7FEFF 		bl	__vfprintf
 2068              	.LVL256:
 424:source\lcd/print.c ****       _sputc(0, (char *)&sf);
 2069              		.loc 1 424 7 is_stmt 1 view .LVU672
 2070              	.LBB92:
 2071              	.LBI92:
  31:source\lcd/print.c **** {
 2072              		.loc 1 31 5 view .LVU673
 2073              	.LBB93:
  33:source\lcd/print.c ****       char *op = sf->ptr;
 2074              		.loc 1 33 7 view .LVU674
  34:source\lcd/print.c ****       int r = *op++ = ch;
 2075              		.loc 1 34 7 view .LVU675
  34:source\lcd/print.c ****       int r = *op++ = ch;
 2076              		.loc 1 34 13 is_stmt 0 view .LVU676
 2077 001a 019B     		ldr	r3, [sp, #4]
 2078              	.LVL257:
  35:source\lcd/print.c ****       sf->ptr = op;
 2079              		.loc 1 35 7 is_stmt 1 view .LVU677
  35:source\lcd/print.c ****       sf->ptr = op;
 2080              		.loc 1 35 21 is_stmt 0 view .LVU678
 2081 001c 1C70     		strb	r4, [r3]
 2082              	.LVL258:
  36:source\lcd/print.c ****       return r;
 2083              		.loc 1 36 7 is_stmt 1 view .LVU679
  37:source\lcd/print.c **** }
 2084              		.loc 1 37 7 view .LVU680
  37:source\lcd/print.c **** }
 2085              		.loc 1 37 7 is_stmt 0 view .LVU681
 2086              	.LBE93:
 2087              	.LBE92:
 425:source\lcd/print.c ****       return length;
 2088              		.loc 1 425 7 is_stmt 1 view .LVU682
 426:source\lcd/print.c **** }
 2089              		.loc 1 426 1 is_stmt 0 view .LVU683
 2090 001e 12B0     		add	sp, sp, #72
 2091              		.cfi_def_cfa_offset 8
 2092              		@ sp needed
 2093 0020 10BD     		pop	{r4, pc}
 2094              	.LVL259:
 2095              	.L230:
 2096              		.loc 1 426 1 view .LVU684
 2097 0022 00BF     		.align	2
 2098              	.L229:
 2099 0024 00000000 		.word	_sputc
 2100 0028 00000000 		.word	_serror
 2101              		.cfi_endproc
 2102              	.LFE7:
 2104              		.global	errno
 2105              		.section	.bss.errno,"aw",%nobits
 2106              		.align	2
 2109              	errno:
 2110 0000 00000000 		.space	4
 2111              		.text
 2112              	.Letext0:
 2113              		.file 2 "c:\\program files (x86)\\arm gnu toolchain arm-none-eabi\\12.2 mpacbti-rel1\\lib\\gcc\\ar
 2114              		.file 3 "<built-in>"
DEFINED SYMBOLS
                            *ABS*:00000000 print.c
C:\Users\37593\AppData\Local\Temp\ccDqNHwD.s:21     .text._sputc:00000000 $t
C:\Users\37593\AppData\Local\Temp\ccDqNHwD.s:27     .text._sputc:00000000 _sputc
C:\Users\37593\AppData\Local\Temp\ccDqNHwD.s:55     .text._serror:00000000 $t
C:\Users\37593\AppData\Local\Temp\ccDqNHwD.s:61     .text._serror:00000000 _serror
C:\Users\37593\AppData\Local\Temp\ccDqNHwD.s:80     .text._sputc1:00000000 $t
C:\Users\37593\AppData\Local\Temp\ccDqNHwD.s:86     .text._sputc1:00000000 _sputc1
C:\Users\37593\AppData\Local\Temp\ccDqNHwD.s:111    .text.is_digit:00000000 $t
C:\Users\37593\AppData\Local\Temp\ccDqNHwD.s:117    .text.is_digit:00000000 is_digit
C:\Users\37593\AppData\Local\Temp\ccDqNHwD.s:163    .text.__vfprintf:00000000 $t
C:\Users\37593\AppData\Local\Temp\ccDqNHwD.s:169    .text.__vfprintf:00000000 __vfprintf
C:\Users\37593\AppData\Local\Temp\ccDqNHwD.s:592    .text.__vfprintf:00000170 $d
C:\Users\37593\AppData\Local\Temp\ccDqNHwD.s:625    .text.__vfprintf:000001f4 $t
C:\Users\37593\AppData\Local\Temp\ccDqNHwD.s:1129   .text.__vfprintf:00000414 $d
C:\Users\37593\AppData\Local\Temp\ccDqNHwD.s:1145   .text.__vfprintf:00000438 $t
C:\Users\37593\AppData\Local\Temp\ccDqNHwD.s:1872   .text.__vfprintf:00000718 $d
C:\Users\37593\AppData\Local\Temp\ccDqNHwD.s:1882   .text.__vfprintf:0000072c $t
C:\Users\37593\AppData\Local\Temp\ccDqNHwD.s:1920   .text.sprintf:00000000 $t
C:\Users\37593\AppData\Local\Temp\ccDqNHwD.s:1926   .text.sprintf:00000000 sprintf
C:\Users\37593\AppData\Local\Temp\ccDqNHwD.s:2016   .text.sprintf:00000034 $d
C:\Users\37593\AppData\Local\Temp\ccDqNHwD.s:2022   .text.vsprintf:00000000 $t
C:\Users\37593\AppData\Local\Temp\ccDqNHwD.s:2028   .text.vsprintf:00000000 vsprintf
C:\Users\37593\AppData\Local\Temp\ccDqNHwD.s:2099   .text.vsprintf:00000024 $d
C:\Users\37593\AppData\Local\Temp\ccDqNHwD.s:2109   .bss.errno:00000000 errno
C:\Users\37593\AppData\Local\Temp\ccDqNHwD.s:2106   .bss.errno:00000000 $d

UNDEFINED SYMBOLS
__aeabi_uldivmod
strlen
