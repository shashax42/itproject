   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 4
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"serial.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.file 1 "serial.c"
  20              		.section	.text.NVIC_SystemReset,"ax",%progbits
  21              		.align	1
  22              		.syntax unified
  23              		.thumb
  24              		.thumb_func
  26              	NVIC_SystemReset:
  27              	.LFB121:
  28              		.file 2 "c:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h"
   1:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** /**************************************************************************//**
   2:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****  * @file     core_cm4.h
   3:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****  * @brief    CMSIS Cortex-M4 Core Peripheral Access Layer Header File
   4:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****  * @version  V4.30
   5:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****  * @date     20. October 2015
   6:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****  ******************************************************************************/
   7:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** /* Copyright (c) 2009 - 2015 ARM LIMITED
   8:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** 
   9:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****    All rights reserved.
  10:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****    Redistribution and use in source and binary forms, with or without
  11:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****    modification, are permitted provided that the following conditions are met:
  12:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****    - Redistributions of source code must retain the above copyright
  13:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****      notice, this list of conditions and the following disclaimer.
  14:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****    - Redistributions in binary form must reproduce the above copyright
  15:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****      notice, this list of conditions and the following disclaimer in the
  16:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****      documentation and/or other materials provided with the distribution.
  17:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****    - Neither the name of ARM nor the names of its contributors may be used
  18:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****      to endorse or promote products derived from this software without
  19:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****      specific prior written permission.
  20:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****    *
  21:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****    THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  22:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****    AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  23:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****    IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
  24:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****    ARE DISCLAIMED. IN NO EVENT SHALL COPYRIGHT HOLDERS AND CONTRIBUTORS BE
  25:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****    LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
  26:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****    CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
  27:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****    SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
  28:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****    INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
  29:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****    CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
  30:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****    ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  31:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****    POSSIBILITY OF SUCH DAMAGE.
  32:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****    ---------------------------------------------------------------------------*/
  33:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** 
  34:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** 
  35:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #if   defined ( __ICCARM__ )
  36:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****  #pragma system_include         /* treat file as system include file for MISRA check */
  37:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #elif defined(__ARMCC_VERSION) && (__ARMCC_VERSION >= 6010050)
  38:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****   #pragma clang system_header   /* treat file as system include file */
  39:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #endif
  40:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** 
  41:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #ifndef __CORE_CM4_H_GENERIC
  42:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #define __CORE_CM4_H_GENERIC
  43:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** 
  44:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #include <stdint.h>
  45:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** 
  46:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #ifdef __cplusplus
  47:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****  extern "C" {
  48:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #endif
  49:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** 
  50:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** /**
  51:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****   \page CMSIS_MISRA_Exceptions  MISRA-C:2004 Compliance Exceptions
  52:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****   CMSIS violates the following MISRA-C:2004 rules:
  53:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** 
  54:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****    \li Required Rule 8.5, object/function definition in header file.<br>
  55:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****      Function definitions in header files are used to allow 'inlining'.
  56:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** 
  57:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****    \li Required Rule 18.4, declaration of union type or object of union type: '{...}'.<br>
  58:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****      Unions are used for effective representation of core registers.
  59:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** 
  60:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****    \li Advisory Rule 19.7, Function-like macro defined.<br>
  61:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****      Function-like macros are used to allow more efficient code.
  62:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****  */
  63:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** 
  64:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** 
  65:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** /*******************************************************************************
  66:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****  *                 CMSIS definitions
  67:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****  ******************************************************************************/
  68:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** /**
  69:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****   \ingroup Cortex_M4
  70:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****   @{
  71:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****  */
  72:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** 
  73:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** /*  CMSIS CM4 definitions */
  74:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #define __CM4_CMSIS_VERSION_MAIN  (0x04U)                                      /*!< [31:16] CMSIS H
  75:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #define __CM4_CMSIS_VERSION_SUB   (0x1EU)                                      /*!< [15:0]  CMSIS H
  76:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #define __CM4_CMSIS_VERSION       ((__CM4_CMSIS_VERSION_MAIN << 16U) | \
  77:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****                                     __CM4_CMSIS_VERSION_SUB           )        /*!< CMSIS HAL versi
  78:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** 
  79:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #define __CORTEX_M                (0x04U)                                      /*!< Cortex-M Core *
  80:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** 
  81:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** 
  82:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #if   defined ( __CC_ARM )
  83:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****   #define __ASM            __asm                                      /*!< asm keyword for ARM Comp
  84:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****   #define __INLINE         __inline                                   /*!< inline keyword for ARM C
  85:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****   #define __STATIC_INLINE  static __inline
  86:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** 
  87:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #elif defined(__ARMCC_VERSION) && (__ARMCC_VERSION >= 6010050)
  88:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****   #define __ASM            __asm                                      /*!< asm keyword for ARM Comp
  89:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****   #define __INLINE         __inline                                   /*!< inline keyword for ARM C
  90:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****   #define __STATIC_INLINE  static __inline
  91:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** 
  92:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #elif defined ( __GNUC__ )
  93:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****   #define __ASM            __asm                                      /*!< asm keyword for GNU Comp
  94:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****   #define __INLINE         inline                                     /*!< inline keyword for GNU C
  95:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****   #define __STATIC_INLINE  static inline
  96:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** 
  97:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #elif defined ( __ICCARM__ )
  98:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****   #define __ASM            __asm                                      /*!< asm keyword for IAR Comp
  99:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****   #define __INLINE         inline                                     /*!< inline keyword for IAR C
 100:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****   #define __STATIC_INLINE  static inline
 101:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** 
 102:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #elif defined ( __TMS470__ )
 103:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****   #define __ASM            __asm                                      /*!< asm keyword for TI CCS C
 104:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****   #define __STATIC_INLINE  static inline
 105:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** 
 106:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #elif defined ( __TASKING__ )
 107:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****   #define __ASM            __asm                                      /*!< asm keyword for TASKING 
 108:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****   #define __INLINE         inline                                     /*!< inline keyword for TASKI
 109:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****   #define __STATIC_INLINE  static inline
 110:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** 
 111:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #elif defined ( __CSMC__ )
 112:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****   #define __packed
 113:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****   #define __ASM            _asm                                      /*!< asm keyword for COSMIC Co
 114:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****   #define __INLINE         inline                                    /*!< inline keyword for COSMIC
 115:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****   #define __STATIC_INLINE  static inline
 116:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** 
 117:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #else
 118:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****   #error Unknown compiler
 119:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #endif
 120:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** 
 121:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** /** __FPU_USED indicates whether an FPU is used or not.
 122:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****     For this, __FPU_PRESENT has to be checked prior to making use of FPU specific registers and fun
 123:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** */
 124:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #if defined ( __CC_ARM )
 125:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****   #if defined __TARGET_FPU_VFP
 126:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****     #if (__FPU_PRESENT == 1U)
 127:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****       #define __FPU_USED       1U
 128:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****     #else
 129:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****       #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)
 130:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****       #define __FPU_USED       0U
 131:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****     #endif
 132:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****   #else
 133:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****     #define __FPU_USED         0U
 134:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****   #endif
 135:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** 
 136:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #elif defined(__ARMCC_VERSION) && (__ARMCC_VERSION >= 6010050)
 137:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****   #if defined __ARM_PCS_VFP
 138:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****     #if (__FPU_PRESENT == 1)
 139:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****       #define __FPU_USED       1U
 140:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****     #else
 141:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****       #warning "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESEN
 142:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****       #define __FPU_USED       0U
 143:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****     #endif
 144:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****   #else
 145:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****     #define __FPU_USED         0U
 146:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****   #endif
 147:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** 
 148:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #elif defined ( __GNUC__ )
 149:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****   #if defined (__VFP_FP__) && !defined(__SOFTFP__)
 150:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****     #if (__FPU_PRESENT == 1U)
 151:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****       #define __FPU_USED       1U
 152:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****     #else
 153:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****       #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)
 154:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****       #define __FPU_USED       0U
 155:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****     #endif
 156:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****   #else
 157:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****     #define __FPU_USED         0U
 158:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****   #endif
 159:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** 
 160:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #elif defined ( __ICCARM__ )
 161:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****   #if defined __ARMVFP__
 162:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****     #if (__FPU_PRESENT == 1U)
 163:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****       #define __FPU_USED       1U
 164:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****     #else
 165:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****       #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)
 166:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****       #define __FPU_USED       0U
 167:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****     #endif
 168:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****   #else
 169:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****     #define __FPU_USED         0U
 170:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****   #endif
 171:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** 
 172:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #elif defined ( __TMS470__ )
 173:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****   #if defined __TI_VFP_SUPPORT__
 174:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****     #if (__FPU_PRESENT == 1U)
 175:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****       #define __FPU_USED       1U
 176:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****     #else
 177:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****       #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)
 178:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****       #define __FPU_USED       0U
 179:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****     #endif
 180:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****   #else
 181:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****     #define __FPU_USED         0U
 182:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****   #endif
 183:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** 
 184:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #elif defined ( __TASKING__ )
 185:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****   #if defined __FPU_VFP__
 186:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****     #if (__FPU_PRESENT == 1U)
 187:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****       #define __FPU_USED       1U
 188:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****     #else
 189:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****       #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)
 190:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****       #define __FPU_USED       0U
 191:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****     #endif
 192:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****   #else
 193:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****     #define __FPU_USED         0U
 194:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****   #endif
 195:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** 
 196:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #elif defined ( __CSMC__ )
 197:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****   #if ( __CSMC__ & 0x400U)
 198:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****     #if (__FPU_PRESENT == 1U)
 199:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****       #define __FPU_USED       1U
 200:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****     #else
 201:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****       #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)
 202:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****       #define __FPU_USED       0U
 203:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****     #endif
 204:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****   #else
 205:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****     #define __FPU_USED         0U
 206:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****   #endif
 207:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** 
 208:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #endif
 209:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** 
 210:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #include "core_cmInstr.h"                /* Core Instruction Access */
 211:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #include "core_cmFunc.h"                 /* Core Function Access */
 212:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #include "core_cmSimd.h"                 /* Compiler specific SIMD Intrinsics */
 213:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** 
 214:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #ifdef __cplusplus
 215:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** }
 216:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #endif
 217:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** 
 218:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #endif /* __CORE_CM4_H_GENERIC */
 219:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** 
 220:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #ifndef __CMSIS_GENERIC
 221:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** 
 222:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #ifndef __CORE_CM4_H_DEPENDANT
 223:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #define __CORE_CM4_H_DEPENDANT
 224:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** 
 225:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #ifdef __cplusplus
 226:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****  extern "C" {
 227:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #endif
 228:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** 
 229:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** /* check device defines and use defaults */
 230:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #if defined __CHECK_DEVICE_DEFINES
 231:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****   #ifndef __CM4_REV
 232:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****     #define __CM4_REV               0x0000U
 233:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****     #warning "__CM4_REV not defined in device header file; using default!"
 234:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****   #endif
 235:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** 
 236:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****   #ifndef __FPU_PRESENT
 237:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****     #define __FPU_PRESENT             0U
 238:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****     #warning "__FPU_PRESENT not defined in device header file; using default!"
 239:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****   #endif
 240:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** 
 241:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****   #ifndef __MPU_PRESENT
 242:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****     #define __MPU_PRESENT             0U
 243:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****     #warning "__MPU_PRESENT not defined in device header file; using default!"
 244:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****   #endif
 245:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** 
 246:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****   #ifndef __NVIC_PRIO_BITS
 247:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****     #define __NVIC_PRIO_BITS          4U
 248:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****     #warning "__NVIC_PRIO_BITS not defined in device header file; using default!"
 249:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****   #endif
 250:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** 
 251:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****   #ifndef __Vendor_SysTickConfig
 252:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****     #define __Vendor_SysTickConfig    0U
 253:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****     #warning "__Vendor_SysTickConfig not defined in device header file; using default!"
 254:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****   #endif
 255:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #endif
 256:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** 
 257:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** /* IO definitions (access restrictions to peripheral registers) */
 258:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** /**
 259:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****     \defgroup CMSIS_glob_defs CMSIS Global Defines
 260:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** 
 261:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****     <strong>IO Type Qualifiers</strong> are used
 262:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****     \li to specify the access to peripheral variables.
 263:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****     \li for automatic generation of peripheral register debug information.
 264:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** */
 265:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #ifdef __cplusplus
 266:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****   #define   __I     volatile             /*!< Defines 'read only' permissions */
 267:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #else
 268:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****   #define   __I     volatile const       /*!< Defines 'read only' permissions */
 269:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #endif
 270:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #define     __O     volatile             /*!< Defines 'write only' permissions */
 271:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #define     __IO    volatile             /*!< Defines 'read / write' permissions */
 272:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** 
 273:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** /* following defines should be used for structure members */
 274:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #define     __IM     volatile const      /*! Defines 'read only' structure member permissions */
 275:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #define     __OM     volatile            /*! Defines 'write only' structure member permissions */
 276:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #define     __IOM    volatile            /*! Defines 'read / write' structure member permissions */
 277:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** 
 278:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** /*@} end of group Cortex_M4 */
 279:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** 
 280:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** 
 281:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** 
 282:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** /*******************************************************************************
 283:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****  *                 Register Abstraction
 284:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****   Core Register contain:
 285:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****   - Core Register
 286:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****   - Core NVIC Register
 287:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****   - Core SCB Register
 288:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****   - Core SysTick Register
 289:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****   - Core Debug Register
 290:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****   - Core MPU Register
 291:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****   - Core FPU Register
 292:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****  ******************************************************************************/
 293:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** /**
 294:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****   \defgroup CMSIS_core_register Defines and Type Definitions
 295:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****   \brief Type definitions and defines for Cortex-M processor based devices.
 296:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** */
 297:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** 
 298:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** /**
 299:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****   \ingroup    CMSIS_core_register
 300:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****   \defgroup   CMSIS_CORE  Status and Control Registers
 301:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****   \brief      Core Register type definitions.
 302:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****   @{
 303:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****  */
 304:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** 
 305:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** /**
 306:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****   \brief  Union type to access the Application Program Status Register (APSR).
 307:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****  */
 308:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** typedef union
 309:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** {
 310:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****   struct
 311:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****   {
 312:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****     uint32_t _reserved0:16;              /*!< bit:  0..15  Reserved */
 313:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****     uint32_t GE:4;                       /*!< bit: 16..19  Greater than or Equal flags */
 314:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****     uint32_t _reserved1:7;               /*!< bit: 20..26  Reserved */
 315:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****     uint32_t Q:1;                        /*!< bit:     27  Saturation condition flag */
 316:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****     uint32_t V:1;                        /*!< bit:     28  Overflow condition code flag */
 317:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****     uint32_t C:1;                        /*!< bit:     29  Carry condition code flag */
 318:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****     uint32_t Z:1;                        /*!< bit:     30  Zero condition code flag */
 319:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****     uint32_t N:1;                        /*!< bit:     31  Negative condition code flag */
 320:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****   } b;                                   /*!< Structure used for bit  access */
 321:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****   uint32_t w;                            /*!< Type      used for word access */
 322:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** } APSR_Type;
 323:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** 
 324:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** /* APSR Register Definitions */
 325:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #define APSR_N_Pos                         31U                                            /*!< APSR
 326:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #define APSR_N_Msk                         (1UL << APSR_N_Pos)                            /*!< APSR
 327:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** 
 328:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #define APSR_Z_Pos                         30U                                            /*!< APSR
 329:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #define APSR_Z_Msk                         (1UL << APSR_Z_Pos)                            /*!< APSR
 330:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** 
 331:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #define APSR_C_Pos                         29U                                            /*!< APSR
 332:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #define APSR_C_Msk                         (1UL << APSR_C_Pos)                            /*!< APSR
 333:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** 
 334:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #define APSR_V_Pos                         28U                                            /*!< APSR
 335:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #define APSR_V_Msk                         (1UL << APSR_V_Pos)                            /*!< APSR
 336:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** 
 337:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #define APSR_Q_Pos                         27U                                            /*!< APSR
 338:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #define APSR_Q_Msk                         (1UL << APSR_Q_Pos)                            /*!< APSR
 339:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** 
 340:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #define APSR_GE_Pos                        16U                                            /*!< APSR
 341:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #define APSR_GE_Msk                        (0xFUL << APSR_GE_Pos)                         /*!< APSR
 342:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** 
 343:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** 
 344:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** /**
 345:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****   \brief  Union type to access the Interrupt Program Status Register (IPSR).
 346:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****  */
 347:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** typedef union
 348:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** {
 349:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****   struct
 350:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****   {
 351:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****     uint32_t ISR:9;                      /*!< bit:  0.. 8  Exception number */
 352:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****     uint32_t _reserved0:23;              /*!< bit:  9..31  Reserved */
 353:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****   } b;                                   /*!< Structure used for bit  access */
 354:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****   uint32_t w;                            /*!< Type      used for word access */
 355:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** } IPSR_Type;
 356:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** 
 357:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** /* IPSR Register Definitions */
 358:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #define IPSR_ISR_Pos                        0U                                            /*!< IPSR
 359:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #define IPSR_ISR_Msk                       (0x1FFUL /*<< IPSR_ISR_Pos*/)                  /*!< IPSR
 360:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** 
 361:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** 
 362:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** /**
 363:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****   \brief  Union type to access the Special-Purpose Program Status Registers (xPSR).
 364:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****  */
 365:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** typedef union
 366:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** {
 367:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****   struct
 368:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****   {
 369:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****     uint32_t ISR:9;                      /*!< bit:  0.. 8  Exception number */
 370:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****     uint32_t _reserved0:7;               /*!< bit:  9..15  Reserved */
 371:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****     uint32_t GE:4;                       /*!< bit: 16..19  Greater than or Equal flags */
 372:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****     uint32_t _reserved1:4;               /*!< bit: 20..23  Reserved */
 373:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****     uint32_t T:1;                        /*!< bit:     24  Thumb bit        (read 0) */
 374:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****     uint32_t IT:2;                       /*!< bit: 25..26  saved IT state   (read 0) */
 375:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****     uint32_t Q:1;                        /*!< bit:     27  Saturation condition flag */
 376:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****     uint32_t V:1;                        /*!< bit:     28  Overflow condition code flag */
 377:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****     uint32_t C:1;                        /*!< bit:     29  Carry condition code flag */
 378:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****     uint32_t Z:1;                        /*!< bit:     30  Zero condition code flag */
 379:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****     uint32_t N:1;                        /*!< bit:     31  Negative condition code flag */
 380:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****   } b;                                   /*!< Structure used for bit  access */
 381:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****   uint32_t w;                            /*!< Type      used for word access */
 382:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** } xPSR_Type;
 383:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** 
 384:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** /* xPSR Register Definitions */
 385:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #define xPSR_N_Pos                         31U                                            /*!< xPSR
 386:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #define xPSR_N_Msk                         (1UL << xPSR_N_Pos)                            /*!< xPSR
 387:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** 
 388:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #define xPSR_Z_Pos                         30U                                            /*!< xPSR
 389:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #define xPSR_Z_Msk                         (1UL << xPSR_Z_Pos)                            /*!< xPSR
 390:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** 
 391:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #define xPSR_C_Pos                         29U                                            /*!< xPSR
 392:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #define xPSR_C_Msk                         (1UL << xPSR_C_Pos)                            /*!< xPSR
 393:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** 
 394:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #define xPSR_V_Pos                         28U                                            /*!< xPSR
 395:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #define xPSR_V_Msk                         (1UL << xPSR_V_Pos)                            /*!< xPSR
 396:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** 
 397:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #define xPSR_Q_Pos                         27U                                            /*!< xPSR
 398:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #define xPSR_Q_Msk                         (1UL << xPSR_Q_Pos)                            /*!< xPSR
 399:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** 
 400:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #define xPSR_IT_Pos                        25U                                            /*!< xPSR
 401:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #define xPSR_IT_Msk                        (3UL << xPSR_IT_Pos)                           /*!< xPSR
 402:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** 
 403:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #define xPSR_T_Pos                         24U                                            /*!< xPSR
 404:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #define xPSR_T_Msk                         (1UL << xPSR_T_Pos)                            /*!< xPSR
 405:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** 
 406:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #define xPSR_GE_Pos                        16U                                            /*!< xPSR
 407:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #define xPSR_GE_Msk                        (0xFUL << xPSR_GE_Pos)                         /*!< xPSR
 408:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** 
 409:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #define xPSR_ISR_Pos                        0U                                            /*!< xPSR
 410:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #define xPSR_ISR_Msk                       (0x1FFUL /*<< xPSR_ISR_Pos*/)                  /*!< xPSR
 411:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** 
 412:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** 
 413:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** /**
 414:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****   \brief  Union type to access the Control Registers (CONTROL).
 415:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****  */
 416:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** typedef union
 417:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** {
 418:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****   struct
 419:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****   {
 420:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****     uint32_t nPRIV:1;                    /*!< bit:      0  Execution privilege in Thread mode */
 421:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****     uint32_t SPSEL:1;                    /*!< bit:      1  Stack to be used */
 422:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****     uint32_t FPCA:1;                     /*!< bit:      2  FP extension active flag */
 423:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****     uint32_t _reserved0:29;              /*!< bit:  3..31  Reserved */
 424:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****   } b;                                   /*!< Structure used for bit  access */
 425:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****   uint32_t w;                            /*!< Type      used for word access */
 426:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** } CONTROL_Type;
 427:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** 
 428:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** /* CONTROL Register Definitions */
 429:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #define CONTROL_FPCA_Pos                    2U                                            /*!< CONT
 430:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #define CONTROL_FPCA_Msk                   (1UL << CONTROL_FPCA_Pos)                      /*!< CONT
 431:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** 
 432:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #define CONTROL_SPSEL_Pos                   1U                                            /*!< CONT
 433:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #define CONTROL_SPSEL_Msk                  (1UL << CONTROL_SPSEL_Pos)                     /*!< CONT
 434:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** 
 435:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #define CONTROL_nPRIV_Pos                   0U                                            /*!< CONT
 436:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #define CONTROL_nPRIV_Msk                  (1UL /*<< CONTROL_nPRIV_Pos*/)                 /*!< CONT
 437:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** 
 438:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** /*@} end of group CMSIS_CORE */
 439:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** 
 440:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** 
 441:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** /**
 442:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****   \ingroup    CMSIS_core_register
 443:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****   \defgroup   CMSIS_NVIC  Nested Vectored Interrupt Controller (NVIC)
 444:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****   \brief      Type definitions for the NVIC Registers
 445:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****   @{
 446:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****  */
 447:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** 
 448:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** /**
 449:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****   \brief  Structure type to access the Nested Vectored Interrupt Controller (NVIC).
 450:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****  */
 451:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** typedef struct
 452:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** {
 453:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****   __IOM uint32_t ISER[8U];               /*!< Offset: 0x000 (R/W)  Interrupt Set Enable Register */
 454:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****         uint32_t RESERVED0[24U];
 455:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****   __IOM uint32_t ICER[8U];               /*!< Offset: 0x080 (R/W)  Interrupt Clear Enable Register 
 456:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****         uint32_t RSERVED1[24U];
 457:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****   __IOM uint32_t ISPR[8U];               /*!< Offset: 0x100 (R/W)  Interrupt Set Pending Register *
 458:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****         uint32_t RESERVED2[24U];
 459:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****   __IOM uint32_t ICPR[8U];               /*!< Offset: 0x180 (R/W)  Interrupt Clear Pending Register
 460:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****         uint32_t RESERVED3[24U];
 461:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****   __IOM uint32_t IABR[8U];               /*!< Offset: 0x200 (R/W)  Interrupt Active bit Register */
 462:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****         uint32_t RESERVED4[56U];
 463:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****   __IOM uint8_t  IP[240U];               /*!< Offset: 0x300 (R/W)  Interrupt Priority Register (8Bi
 464:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****         uint32_t RESERVED5[644U];
 465:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****   __OM  uint32_t STIR;                   /*!< Offset: 0xE00 ( /W)  Software Trigger Interrupt Regis
 466:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** }  NVIC_Type;
 467:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** 
 468:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** /* Software Triggered Interrupt Register Definitions */
 469:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #define NVIC_STIR_INTID_Pos                 0U                                         /*!< STIR: I
 470:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #define NVIC_STIR_INTID_Msk                (0x1FFUL /*<< NVIC_STIR_INTID_Pos*/)        /*!< STIR: I
 471:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** 
 472:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** /*@} end of group CMSIS_NVIC */
 473:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** 
 474:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** 
 475:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** /**
 476:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****   \ingroup  CMSIS_core_register
 477:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****   \defgroup CMSIS_SCB     System Control Block (SCB)
 478:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****   \brief    Type definitions for the System Control Block Registers
 479:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****   @{
 480:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****  */
 481:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** 
 482:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** /**
 483:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****   \brief  Structure type to access the System Control Block (SCB).
 484:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****  */
 485:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** typedef struct
 486:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** {
 487:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****   __IM  uint32_t CPUID;                  /*!< Offset: 0x000 (R/ )  CPUID Base Register */
 488:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****   __IOM uint32_t ICSR;                   /*!< Offset: 0x004 (R/W)  Interrupt Control and State Regi
 489:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****   __IOM uint32_t VTOR;                   /*!< Offset: 0x008 (R/W)  Vector Table Offset Register */
 490:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****   __IOM uint32_t AIRCR;                  /*!< Offset: 0x00C (R/W)  Application Interrupt and Reset 
 491:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****   __IOM uint32_t SCR;                    /*!< Offset: 0x010 (R/W)  System Control Register */
 492:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****   __IOM uint32_t CCR;                    /*!< Offset: 0x014 (R/W)  Configuration Control Register *
 493:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****   __IOM uint8_t  SHP[12U];               /*!< Offset: 0x018 (R/W)  System Handlers Priority Registe
 494:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****   __IOM uint32_t SHCSR;                  /*!< Offset: 0x024 (R/W)  System Handler Control and State
 495:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****   __IOM uint32_t CFSR;                   /*!< Offset: 0x028 (R/W)  Configurable Fault Status Regist
 496:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****   __IOM uint32_t HFSR;                   /*!< Offset: 0x02C (R/W)  HardFault Status Register */
 497:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****   __IOM uint32_t DFSR;                   /*!< Offset: 0x030 (R/W)  Debug Fault Status Register */
 498:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****   __IOM uint32_t MMFAR;                  /*!< Offset: 0x034 (R/W)  MemManage Fault Address Register
 499:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****   __IOM uint32_t BFAR;                   /*!< Offset: 0x038 (R/W)  BusFault Address Register */
 500:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****   __IOM uint32_t AFSR;                   /*!< Offset: 0x03C (R/W)  Auxiliary Fault Status Register 
 501:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****   __IM  uint32_t PFR[2U];                /*!< Offset: 0x040 (R/ )  Processor Feature Register */
 502:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****   __IM  uint32_t DFR;                    /*!< Offset: 0x048 (R/ )  Debug Feature Register */
 503:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****   __IM  uint32_t ADR;                    /*!< Offset: 0x04C (R/ )  Auxiliary Feature Register */
 504:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****   __IM  uint32_t MMFR[4U];               /*!< Offset: 0x050 (R/ )  Memory Model Feature Register */
 505:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****   __IM  uint32_t ISAR[5U];               /*!< Offset: 0x060 (R/ )  Instruction Set Attributes Regis
 506:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****         uint32_t RESERVED0[5U];
 507:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****   __IOM uint32_t CPACR;                  /*!< Offset: 0x088 (R/W)  Coprocessor Access Control Regis
 508:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** } SCB_Type;
 509:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** 
 510:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** /* SCB CPUID Register Definitions */
 511:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #define SCB_CPUID_IMPLEMENTER_Pos          24U                                            /*!< SCB 
 512:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #define SCB_CPUID_IMPLEMENTER_Msk          (0xFFUL << SCB_CPUID_IMPLEMENTER_Pos)          /*!< SCB 
 513:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** 
 514:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #define SCB_CPUID_VARIANT_Pos              20U                                            /*!< SCB 
 515:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #define SCB_CPUID_VARIANT_Msk              (0xFUL << SCB_CPUID_VARIANT_Pos)               /*!< SCB 
 516:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** 
 517:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #define SCB_CPUID_ARCHITECTURE_Pos         16U                                            /*!< SCB 
 518:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #define SCB_CPUID_ARCHITECTURE_Msk         (0xFUL << SCB_CPUID_ARCHITECTURE_Pos)          /*!< SCB 
 519:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** 
 520:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #define SCB_CPUID_PARTNO_Pos                4U                                            /*!< SCB 
 521:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #define SCB_CPUID_PARTNO_Msk               (0xFFFUL << SCB_CPUID_PARTNO_Pos)              /*!< SCB 
 522:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** 
 523:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #define SCB_CPUID_REVISION_Pos              0U                                            /*!< SCB 
 524:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #define SCB_CPUID_REVISION_Msk             (0xFUL /*<< SCB_CPUID_REVISION_Pos*/)          /*!< SCB 
 525:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** 
 526:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** /* SCB Interrupt Control State Register Definitions */
 527:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #define SCB_ICSR_NMIPENDSET_Pos            31U                                            /*!< SCB 
 528:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #define SCB_ICSR_NMIPENDSET_Msk            (1UL << SCB_ICSR_NMIPENDSET_Pos)               /*!< SCB 
 529:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** 
 530:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #define SCB_ICSR_PENDSVSET_Pos             28U                                            /*!< SCB 
 531:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #define SCB_ICSR_PENDSVSET_Msk             (1UL << SCB_ICSR_PENDSVSET_Pos)                /*!< SCB 
 532:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** 
 533:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #define SCB_ICSR_PENDSVCLR_Pos             27U                                            /*!< SCB 
 534:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #define SCB_ICSR_PENDSVCLR_Msk             (1UL << SCB_ICSR_PENDSVCLR_Pos)                /*!< SCB 
 535:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** 
 536:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #define SCB_ICSR_PENDSTSET_Pos             26U                                            /*!< SCB 
 537:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #define SCB_ICSR_PENDSTSET_Msk             (1UL << SCB_ICSR_PENDSTSET_Pos)                /*!< SCB 
 538:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** 
 539:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #define SCB_ICSR_PENDSTCLR_Pos             25U                                            /*!< SCB 
 540:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #define SCB_ICSR_PENDSTCLR_Msk             (1UL << SCB_ICSR_PENDSTCLR_Pos)                /*!< SCB 
 541:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** 
 542:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #define SCB_ICSR_ISRPREEMPT_Pos            23U                                            /*!< SCB 
 543:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #define SCB_ICSR_ISRPREEMPT_Msk            (1UL << SCB_ICSR_ISRPREEMPT_Pos)               /*!< SCB 
 544:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** 
 545:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #define SCB_ICSR_ISRPENDING_Pos            22U                                            /*!< SCB 
 546:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #define SCB_ICSR_ISRPENDING_Msk            (1UL << SCB_ICSR_ISRPENDING_Pos)               /*!< SCB 
 547:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** 
 548:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #define SCB_ICSR_VECTPENDING_Pos           12U                                            /*!< SCB 
 549:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #define SCB_ICSR_VECTPENDING_Msk           (0x1FFUL << SCB_ICSR_VECTPENDING_Pos)          /*!< SCB 
 550:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** 
 551:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #define SCB_ICSR_RETTOBASE_Pos             11U                                            /*!< SCB 
 552:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #define SCB_ICSR_RETTOBASE_Msk             (1UL << SCB_ICSR_RETTOBASE_Pos)                /*!< SCB 
 553:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** 
 554:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #define SCB_ICSR_VECTACTIVE_Pos             0U                                            /*!< SCB 
 555:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #define SCB_ICSR_VECTACTIVE_Msk            (0x1FFUL /*<< SCB_ICSR_VECTACTIVE_Pos*/)       /*!< SCB 
 556:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** 
 557:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** /* SCB Vector Table Offset Register Definitions */
 558:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #define SCB_VTOR_TBLOFF_Pos                 7U                                            /*!< SCB 
 559:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #define SCB_VTOR_TBLOFF_Msk                (0x1FFFFFFUL << SCB_VTOR_TBLOFF_Pos)           /*!< SCB 
 560:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** 
 561:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** /* SCB Application Interrupt and Reset Control Register Definitions */
 562:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #define SCB_AIRCR_VECTKEY_Pos              16U                                            /*!< SCB 
 563:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #define SCB_AIRCR_VECTKEY_Msk              (0xFFFFUL << SCB_AIRCR_VECTKEY_Pos)            /*!< SCB 
 564:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** 
 565:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #define SCB_AIRCR_VECTKEYSTAT_Pos          16U                                            /*!< SCB 
 566:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #define SCB_AIRCR_VECTKEYSTAT_Msk          (0xFFFFUL << SCB_AIRCR_VECTKEYSTAT_Pos)        /*!< SCB 
 567:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** 
 568:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #define SCB_AIRCR_ENDIANESS_Pos            15U                                            /*!< SCB 
 569:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #define SCB_AIRCR_ENDIANESS_Msk            (1UL << SCB_AIRCR_ENDIANESS_Pos)               /*!< SCB 
 570:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** 
 571:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #define SCB_AIRCR_PRIGROUP_Pos              8U                                            /*!< SCB 
 572:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #define SCB_AIRCR_PRIGROUP_Msk             (7UL << SCB_AIRCR_PRIGROUP_Pos)                /*!< SCB 
 573:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** 
 574:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #define SCB_AIRCR_SYSRESETREQ_Pos           2U                                            /*!< SCB 
 575:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #define SCB_AIRCR_SYSRESETREQ_Msk          (1UL << SCB_AIRCR_SYSRESETREQ_Pos)             /*!< SCB 
 576:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** 
 577:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #define SCB_AIRCR_VECTCLRACTIVE_Pos         1U                                            /*!< SCB 
 578:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #define SCB_AIRCR_VECTCLRACTIVE_Msk        (1UL << SCB_AIRCR_VECTCLRACTIVE_Pos)           /*!< SCB 
 579:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** 
 580:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #define SCB_AIRCR_VECTRESET_Pos             0U                                            /*!< SCB 
 581:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #define SCB_AIRCR_VECTRESET_Msk            (1UL /*<< SCB_AIRCR_VECTRESET_Pos*/)           /*!< SCB 
 582:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** 
 583:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** /* SCB System Control Register Definitions */
 584:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #define SCB_SCR_SEVONPEND_Pos               4U                                            /*!< SCB 
 585:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #define SCB_SCR_SEVONPEND_Msk              (1UL << SCB_SCR_SEVONPEND_Pos)                 /*!< SCB 
 586:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** 
 587:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #define SCB_SCR_SLEEPDEEP_Pos               2U                                            /*!< SCB 
 588:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #define SCB_SCR_SLEEPDEEP_Msk              (1UL << SCB_SCR_SLEEPDEEP_Pos)                 /*!< SCB 
 589:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** 
 590:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #define SCB_SCR_SLEEPONEXIT_Pos             1U                                            /*!< SCB 
 591:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #define SCB_SCR_SLEEPONEXIT_Msk            (1UL << SCB_SCR_SLEEPONEXIT_Pos)               /*!< SCB 
 592:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** 
 593:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** /* SCB Configuration Control Register Definitions */
 594:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #define SCB_CCR_STKALIGN_Pos                9U                                            /*!< SCB 
 595:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #define SCB_CCR_STKALIGN_Msk               (1UL << SCB_CCR_STKALIGN_Pos)                  /*!< SCB 
 596:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** 
 597:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #define SCB_CCR_BFHFNMIGN_Pos               8U                                            /*!< SCB 
 598:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #define SCB_CCR_BFHFNMIGN_Msk              (1UL << SCB_CCR_BFHFNMIGN_Pos)                 /*!< SCB 
 599:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** 
 600:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #define SCB_CCR_DIV_0_TRP_Pos               4U                                            /*!< SCB 
 601:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #define SCB_CCR_DIV_0_TRP_Msk              (1UL << SCB_CCR_DIV_0_TRP_Pos)                 /*!< SCB 
 602:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** 
 603:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #define SCB_CCR_UNALIGN_TRP_Pos             3U                                            /*!< SCB 
 604:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #define SCB_CCR_UNALIGN_TRP_Msk            (1UL << SCB_CCR_UNALIGN_TRP_Pos)               /*!< SCB 
 605:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** 
 606:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #define SCB_CCR_USERSETMPEND_Pos            1U                                            /*!< SCB 
 607:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #define SCB_CCR_USERSETMPEND_Msk           (1UL << SCB_CCR_USERSETMPEND_Pos)              /*!< SCB 
 608:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** 
 609:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #define SCB_CCR_NONBASETHRDENA_Pos          0U                                            /*!< SCB 
 610:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #define SCB_CCR_NONBASETHRDENA_Msk         (1UL /*<< SCB_CCR_NONBASETHRDENA_Pos*/)        /*!< SCB 
 611:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** 
 612:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** /* SCB System Handler Control and State Register Definitions */
 613:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #define SCB_SHCSR_USGFAULTENA_Pos          18U                                            /*!< SCB 
 614:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #define SCB_SHCSR_USGFAULTENA_Msk          (1UL << SCB_SHCSR_USGFAULTENA_Pos)             /*!< SCB 
 615:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** 
 616:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #define SCB_SHCSR_BUSFAULTENA_Pos          17U                                            /*!< SCB 
 617:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #define SCB_SHCSR_BUSFAULTENA_Msk          (1UL << SCB_SHCSR_BUSFAULTENA_Pos)             /*!< SCB 
 618:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** 
 619:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #define SCB_SHCSR_MEMFAULTENA_Pos          16U                                            /*!< SCB 
 620:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #define SCB_SHCSR_MEMFAULTENA_Msk          (1UL << SCB_SHCSR_MEMFAULTENA_Pos)             /*!< SCB 
 621:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** 
 622:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #define SCB_SHCSR_SVCALLPENDED_Pos         15U                                            /*!< SCB 
 623:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #define SCB_SHCSR_SVCALLPENDED_Msk         (1UL << SCB_SHCSR_SVCALLPENDED_Pos)            /*!< SCB 
 624:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** 
 625:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #define SCB_SHCSR_BUSFAULTPENDED_Pos       14U                                            /*!< SCB 
 626:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #define SCB_SHCSR_BUSFAULTPENDED_Msk       (1UL << SCB_SHCSR_BUSFAULTPENDED_Pos)          /*!< SCB 
 627:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** 
 628:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #define SCB_SHCSR_MEMFAULTPENDED_Pos       13U                                            /*!< SCB 
 629:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #define SCB_SHCSR_MEMFAULTPENDED_Msk       (1UL << SCB_SHCSR_MEMFAULTPENDED_Pos)          /*!< SCB 
 630:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** 
 631:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #define SCB_SHCSR_USGFAULTPENDED_Pos       12U                                            /*!< SCB 
 632:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #define SCB_SHCSR_USGFAULTPENDED_Msk       (1UL << SCB_SHCSR_USGFAULTPENDED_Pos)          /*!< SCB 
 633:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** 
 634:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #define SCB_SHCSR_SYSTICKACT_Pos           11U                                            /*!< SCB 
 635:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #define SCB_SHCSR_SYSTICKACT_Msk           (1UL << SCB_SHCSR_SYSTICKACT_Pos)              /*!< SCB 
 636:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** 
 637:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #define SCB_SHCSR_PENDSVACT_Pos            10U                                            /*!< SCB 
 638:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #define SCB_SHCSR_PENDSVACT_Msk            (1UL << SCB_SHCSR_PENDSVACT_Pos)               /*!< SCB 
 639:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** 
 640:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #define SCB_SHCSR_MONITORACT_Pos            8U                                            /*!< SCB 
 641:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #define SCB_SHCSR_MONITORACT_Msk           (1UL << SCB_SHCSR_MONITORACT_Pos)              /*!< SCB 
 642:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** 
 643:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #define SCB_SHCSR_SVCALLACT_Pos             7U                                            /*!< SCB 
 644:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #define SCB_SHCSR_SVCALLACT_Msk            (1UL << SCB_SHCSR_SVCALLACT_Pos)               /*!< SCB 
 645:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** 
 646:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #define SCB_SHCSR_USGFAULTACT_Pos           3U                                            /*!< SCB 
 647:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #define SCB_SHCSR_USGFAULTACT_Msk          (1UL << SCB_SHCSR_USGFAULTACT_Pos)             /*!< SCB 
 648:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** 
 649:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #define SCB_SHCSR_BUSFAULTACT_Pos           1U                                            /*!< SCB 
 650:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #define SCB_SHCSR_BUSFAULTACT_Msk          (1UL << SCB_SHCSR_BUSFAULTACT_Pos)             /*!< SCB 
 651:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** 
 652:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #define SCB_SHCSR_MEMFAULTACT_Pos           0U                                            /*!< SCB 
 653:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #define SCB_SHCSR_MEMFAULTACT_Msk          (1UL /*<< SCB_SHCSR_MEMFAULTACT_Pos*/)         /*!< SCB 
 654:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** 
 655:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** /* SCB Configurable Fault Status Register Definitions */
 656:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #define SCB_CFSR_USGFAULTSR_Pos            16U                                            /*!< SCB 
 657:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #define SCB_CFSR_USGFAULTSR_Msk            (0xFFFFUL << SCB_CFSR_USGFAULTSR_Pos)          /*!< SCB 
 658:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** 
 659:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #define SCB_CFSR_BUSFAULTSR_Pos             8U                                            /*!< SCB 
 660:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #define SCB_CFSR_BUSFAULTSR_Msk            (0xFFUL << SCB_CFSR_BUSFAULTSR_Pos)            /*!< SCB 
 661:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** 
 662:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #define SCB_CFSR_MEMFAULTSR_Pos             0U                                            /*!< SCB 
 663:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #define SCB_CFSR_MEMFAULTSR_Msk            (0xFFUL /*<< SCB_CFSR_MEMFAULTSR_Pos*/)        /*!< SCB 
 664:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** 
 665:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** /* SCB Hard Fault Status Register Definitions */
 666:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #define SCB_HFSR_DEBUGEVT_Pos              31U                                            /*!< SCB 
 667:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #define SCB_HFSR_DEBUGEVT_Msk              (1UL << SCB_HFSR_DEBUGEVT_Pos)                 /*!< SCB 
 668:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** 
 669:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #define SCB_HFSR_FORCED_Pos                30U                                            /*!< SCB 
 670:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #define SCB_HFSR_FORCED_Msk                (1UL << SCB_HFSR_FORCED_Pos)                   /*!< SCB 
 671:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** 
 672:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #define SCB_HFSR_VECTTBL_Pos                1U                                            /*!< SCB 
 673:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #define SCB_HFSR_VECTTBL_Msk               (1UL << SCB_HFSR_VECTTBL_Pos)                  /*!< SCB 
 674:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** 
 675:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** /* SCB Debug Fault Status Register Definitions */
 676:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #define SCB_DFSR_EXTERNAL_Pos               4U                                            /*!< SCB 
 677:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #define SCB_DFSR_EXTERNAL_Msk              (1UL << SCB_DFSR_EXTERNAL_Pos)                 /*!< SCB 
 678:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** 
 679:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #define SCB_DFSR_VCATCH_Pos                 3U                                            /*!< SCB 
 680:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #define SCB_DFSR_VCATCH_Msk                (1UL << SCB_DFSR_VCATCH_Pos)                   /*!< SCB 
 681:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** 
 682:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #define SCB_DFSR_DWTTRAP_Pos                2U                                            /*!< SCB 
 683:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #define SCB_DFSR_DWTTRAP_Msk               (1UL << SCB_DFSR_DWTTRAP_Pos)                  /*!< SCB 
 684:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** 
 685:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #define SCB_DFSR_BKPT_Pos                   1U                                            /*!< SCB 
 686:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #define SCB_DFSR_BKPT_Msk                  (1UL << SCB_DFSR_BKPT_Pos)                     /*!< SCB 
 687:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** 
 688:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #define SCB_DFSR_HALTED_Pos                 0U                                            /*!< SCB 
 689:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #define SCB_DFSR_HALTED_Msk                (1UL /*<< SCB_DFSR_HALTED_Pos*/)               /*!< SCB 
 690:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** 
 691:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** /*@} end of group CMSIS_SCB */
 692:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** 
 693:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** 
 694:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** /**
 695:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****   \ingroup  CMSIS_core_register
 696:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****   \defgroup CMSIS_SCnSCB System Controls not in SCB (SCnSCB)
 697:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****   \brief    Type definitions for the System Control and ID Register not in the SCB
 698:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****   @{
 699:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****  */
 700:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** 
 701:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** /**
 702:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****   \brief  Structure type to access the System Control and ID Register not in the SCB.
 703:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****  */
 704:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** typedef struct
 705:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** {
 706:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****         uint32_t RESERVED0[1U];
 707:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****   __IM  uint32_t ICTR;                   /*!< Offset: 0x004 (R/ )  Interrupt Controller Type Regist
 708:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****   __IOM uint32_t ACTLR;                  /*!< Offset: 0x008 (R/W)  Auxiliary Control Register */
 709:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** } SCnSCB_Type;
 710:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** 
 711:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** /* Interrupt Controller Type Register Definitions */
 712:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #define SCnSCB_ICTR_INTLINESNUM_Pos         0U                                         /*!< ICTR: I
 713:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #define SCnSCB_ICTR_INTLINESNUM_Msk        (0xFUL /*<< SCnSCB_ICTR_INTLINESNUM_Pos*/)  /*!< ICTR: I
 714:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** 
 715:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** /* Auxiliary Control Register Definitions */
 716:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #define SCnSCB_ACTLR_DISOOFP_Pos            9U                                         /*!< ACTLR: 
 717:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #define SCnSCB_ACTLR_DISOOFP_Msk           (1UL << SCnSCB_ACTLR_DISOOFP_Pos)           /*!< ACTLR: 
 718:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** 
 719:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #define SCnSCB_ACTLR_DISFPCA_Pos            8U                                         /*!< ACTLR: 
 720:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #define SCnSCB_ACTLR_DISFPCA_Msk           (1UL << SCnSCB_ACTLR_DISFPCA_Pos)           /*!< ACTLR: 
 721:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** 
 722:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #define SCnSCB_ACTLR_DISFOLD_Pos            2U                                         /*!< ACTLR: 
 723:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #define SCnSCB_ACTLR_DISFOLD_Msk           (1UL << SCnSCB_ACTLR_DISFOLD_Pos)           /*!< ACTLR: 
 724:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** 
 725:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #define SCnSCB_ACTLR_DISDEFWBUF_Pos         1U                                         /*!< ACTLR: 
 726:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #define SCnSCB_ACTLR_DISDEFWBUF_Msk        (1UL << SCnSCB_ACTLR_DISDEFWBUF_Pos)        /*!< ACTLR: 
 727:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** 
 728:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #define SCnSCB_ACTLR_DISMCYCINT_Pos         0U                                         /*!< ACTLR: 
 729:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #define SCnSCB_ACTLR_DISMCYCINT_Msk        (1UL /*<< SCnSCB_ACTLR_DISMCYCINT_Pos*/)    /*!< ACTLR: 
 730:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** 
 731:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** /*@} end of group CMSIS_SCnotSCB */
 732:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** 
 733:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** 
 734:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** /**
 735:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****   \ingroup  CMSIS_core_register
 736:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****   \defgroup CMSIS_SysTick     System Tick Timer (SysTick)
 737:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****   \brief    Type definitions for the System Timer Registers.
 738:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****   @{
 739:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****  */
 740:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** 
 741:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** /**
 742:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****   \brief  Structure type to access the System Timer (SysTick).
 743:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****  */
 744:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** typedef struct
 745:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** {
 746:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****   __IOM uint32_t CTRL;                   /*!< Offset: 0x000 (R/W)  SysTick Control and Status Regis
 747:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****   __IOM uint32_t LOAD;                   /*!< Offset: 0x004 (R/W)  SysTick Reload Value Register */
 748:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****   __IOM uint32_t VAL;                    /*!< Offset: 0x008 (R/W)  SysTick Current Value Register *
 749:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****   __IM  uint32_t CALIB;                  /*!< Offset: 0x00C (R/ )  SysTick Calibration Register */
 750:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** } SysTick_Type;
 751:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** 
 752:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** /* SysTick Control / Status Register Definitions */
 753:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #define SysTick_CTRL_COUNTFLAG_Pos         16U                                            /*!< SysT
 754:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #define SysTick_CTRL_COUNTFLAG_Msk         (1UL << SysTick_CTRL_COUNTFLAG_Pos)            /*!< SysT
 755:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** 
 756:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #define SysTick_CTRL_CLKSOURCE_Pos          2U                                            /*!< SysT
 757:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #define SysTick_CTRL_CLKSOURCE_Msk         (1UL << SysTick_CTRL_CLKSOURCE_Pos)            /*!< SysT
 758:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** 
 759:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #define SysTick_CTRL_TICKINT_Pos            1U                                            /*!< SysT
 760:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #define SysTick_CTRL_TICKINT_Msk           (1UL << SysTick_CTRL_TICKINT_Pos)              /*!< SysT
 761:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** 
 762:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #define SysTick_CTRL_ENABLE_Pos             0U                                            /*!< SysT
 763:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #define SysTick_CTRL_ENABLE_Msk            (1UL /*<< SysTick_CTRL_ENABLE_Pos*/)           /*!< SysT
 764:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** 
 765:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** /* SysTick Reload Register Definitions */
 766:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #define SysTick_LOAD_RELOAD_Pos             0U                                            /*!< SysT
 767:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #define SysTick_LOAD_RELOAD_Msk            (0xFFFFFFUL /*<< SysTick_LOAD_RELOAD_Pos*/)    /*!< SysT
 768:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** 
 769:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** /* SysTick Current Register Definitions */
 770:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #define SysTick_VAL_CURRENT_Pos             0U                                            /*!< SysT
 771:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #define SysTick_VAL_CURRENT_Msk            (0xFFFFFFUL /*<< SysTick_VAL_CURRENT_Pos*/)    /*!< SysT
 772:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** 
 773:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** /* SysTick Calibration Register Definitions */
 774:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #define SysTick_CALIB_NOREF_Pos            31U                                            /*!< SysT
 775:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #define SysTick_CALIB_NOREF_Msk            (1UL << SysTick_CALIB_NOREF_Pos)               /*!< SysT
 776:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** 
 777:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #define SysTick_CALIB_SKEW_Pos             30U                                            /*!< SysT
 778:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #define SysTick_CALIB_SKEW_Msk             (1UL << SysTick_CALIB_SKEW_Pos)                /*!< SysT
 779:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** 
 780:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #define SysTick_CALIB_TENMS_Pos             0U                                            /*!< SysT
 781:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #define SysTick_CALIB_TENMS_Msk            (0xFFFFFFUL /*<< SysTick_CALIB_TENMS_Pos*/)    /*!< SysT
 782:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** 
 783:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** /*@} end of group CMSIS_SysTick */
 784:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** 
 785:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** 
 786:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** /**
 787:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****   \ingroup  CMSIS_core_register
 788:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****   \defgroup CMSIS_ITM     Instrumentation Trace Macrocell (ITM)
 789:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****   \brief    Type definitions for the Instrumentation Trace Macrocell (ITM)
 790:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****   @{
 791:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****  */
 792:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** 
 793:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** /**
 794:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****   \brief  Structure type to access the Instrumentation Trace Macrocell Register (ITM).
 795:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****  */
 796:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** typedef struct
 797:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** {
 798:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****   __OM  union
 799:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****   {
 800:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****     __OM  uint8_t    u8;                 /*!< Offset: 0x000 ( /W)  ITM Stimulus Port 8-bit */
 801:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****     __OM  uint16_t   u16;                /*!< Offset: 0x000 ( /W)  ITM Stimulus Port 16-bit */
 802:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****     __OM  uint32_t   u32;                /*!< Offset: 0x000 ( /W)  ITM Stimulus Port 32-bit */
 803:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****   }  PORT [32U];                         /*!< Offset: 0x000 ( /W)  ITM Stimulus Port Registers */
 804:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****         uint32_t RESERVED0[864U];
 805:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****   __IOM uint32_t TER;                    /*!< Offset: 0xE00 (R/W)  ITM Trace Enable Register */
 806:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****         uint32_t RESERVED1[15U];
 807:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****   __IOM uint32_t TPR;                    /*!< Offset: 0xE40 (R/W)  ITM Trace Privilege Register */
 808:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****         uint32_t RESERVED2[15U];
 809:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****   __IOM uint32_t TCR;                    /*!< Offset: 0xE80 (R/W)  ITM Trace Control Register */
 810:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****         uint32_t RESERVED3[29U];
 811:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****   __OM  uint32_t IWR;                    /*!< Offset: 0xEF8 ( /W)  ITM Integration Write Register *
 812:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****   __IM  uint32_t IRR;                    /*!< Offset: 0xEFC (R/ )  ITM Integration Read Register */
 813:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****   __IOM uint32_t IMCR;                   /*!< Offset: 0xF00 (R/W)  ITM Integration Mode Control Reg
 814:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****         uint32_t RESERVED4[43U];
 815:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****   __OM  uint32_t LAR;                    /*!< Offset: 0xFB0 ( /W)  ITM Lock Access Register */
 816:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****   __IM  uint32_t LSR;                    /*!< Offset: 0xFB4 (R/ )  ITM Lock Status Register */
 817:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****         uint32_t RESERVED5[6U];
 818:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****   __IM  uint32_t PID4;                   /*!< Offset: 0xFD0 (R/ )  ITM Peripheral Identification Re
 819:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****   __IM  uint32_t PID5;                   /*!< Offset: 0xFD4 (R/ )  ITM Peripheral Identification Re
 820:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****   __IM  uint32_t PID6;                   /*!< Offset: 0xFD8 (R/ )  ITM Peripheral Identification Re
 821:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****   __IM  uint32_t PID7;                   /*!< Offset: 0xFDC (R/ )  ITM Peripheral Identification Re
 822:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****   __IM  uint32_t PID0;                   /*!< Offset: 0xFE0 (R/ )  ITM Peripheral Identification Re
 823:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****   __IM  uint32_t PID1;                   /*!< Offset: 0xFE4 (R/ )  ITM Peripheral Identification Re
 824:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****   __IM  uint32_t PID2;                   /*!< Offset: 0xFE8 (R/ )  ITM Peripheral Identification Re
 825:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****   __IM  uint32_t PID3;                   /*!< Offset: 0xFEC (R/ )  ITM Peripheral Identification Re
 826:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****   __IM  uint32_t CID0;                   /*!< Offset: 0xFF0 (R/ )  ITM Component  Identification Re
 827:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****   __IM  uint32_t CID1;                   /*!< Offset: 0xFF4 (R/ )  ITM Component  Identification Re
 828:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****   __IM  uint32_t CID2;                   /*!< Offset: 0xFF8 (R/ )  ITM Component  Identification Re
 829:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****   __IM  uint32_t CID3;                   /*!< Offset: 0xFFC (R/ )  ITM Component  Identification Re
 830:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** } ITM_Type;
 831:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** 
 832:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** /* ITM Trace Privilege Register Definitions */
 833:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #define ITM_TPR_PRIVMASK_Pos                0U                                            /*!< ITM 
 834:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #define ITM_TPR_PRIVMASK_Msk               (0xFUL /*<< ITM_TPR_PRIVMASK_Pos*/)            /*!< ITM 
 835:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** 
 836:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** /* ITM Trace Control Register Definitions */
 837:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #define ITM_TCR_BUSY_Pos                   23U                                            /*!< ITM 
 838:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #define ITM_TCR_BUSY_Msk                   (1UL << ITM_TCR_BUSY_Pos)                      /*!< ITM 
 839:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** 
 840:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #define ITM_TCR_TraceBusID_Pos             16U                                            /*!< ITM 
 841:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #define ITM_TCR_TraceBusID_Msk             (0x7FUL << ITM_TCR_TraceBusID_Pos)             /*!< ITM 
 842:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** 
 843:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #define ITM_TCR_GTSFREQ_Pos                10U                                            /*!< ITM 
 844:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #define ITM_TCR_GTSFREQ_Msk                (3UL << ITM_TCR_GTSFREQ_Pos)                   /*!< ITM 
 845:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** 
 846:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #define ITM_TCR_TSPrescale_Pos              8U                                            /*!< ITM 
 847:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #define ITM_TCR_TSPrescale_Msk             (3UL << ITM_TCR_TSPrescale_Pos)                /*!< ITM 
 848:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** 
 849:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #define ITM_TCR_SWOENA_Pos                  4U                                            /*!< ITM 
 850:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #define ITM_TCR_SWOENA_Msk                 (1UL << ITM_TCR_SWOENA_Pos)                    /*!< ITM 
 851:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** 
 852:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #define ITM_TCR_DWTENA_Pos                  3U                                            /*!< ITM 
 853:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #define ITM_TCR_DWTENA_Msk                 (1UL << ITM_TCR_DWTENA_Pos)                    /*!< ITM 
 854:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** 
 855:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #define ITM_TCR_SYNCENA_Pos                 2U                                            /*!< ITM 
 856:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #define ITM_TCR_SYNCENA_Msk                (1UL << ITM_TCR_SYNCENA_Pos)                   /*!< ITM 
 857:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** 
 858:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #define ITM_TCR_TSENA_Pos                   1U                                            /*!< ITM 
 859:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #define ITM_TCR_TSENA_Msk                  (1UL << ITM_TCR_TSENA_Pos)                     /*!< ITM 
 860:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** 
 861:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #define ITM_TCR_ITMENA_Pos                  0U                                            /*!< ITM 
 862:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #define ITM_TCR_ITMENA_Msk                 (1UL /*<< ITM_TCR_ITMENA_Pos*/)                /*!< ITM 
 863:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** 
 864:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** /* ITM Integration Write Register Definitions */
 865:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #define ITM_IWR_ATVALIDM_Pos                0U                                            /*!< ITM 
 866:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #define ITM_IWR_ATVALIDM_Msk               (1UL /*<< ITM_IWR_ATVALIDM_Pos*/)              /*!< ITM 
 867:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** 
 868:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** /* ITM Integration Read Register Definitions */
 869:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #define ITM_IRR_ATREADYM_Pos                0U                                            /*!< ITM 
 870:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #define ITM_IRR_ATREADYM_Msk               (1UL /*<< ITM_IRR_ATREADYM_Pos*/)              /*!< ITM 
 871:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** 
 872:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** /* ITM Integration Mode Control Register Definitions */
 873:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #define ITM_IMCR_INTEGRATION_Pos            0U                                            /*!< ITM 
 874:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #define ITM_IMCR_INTEGRATION_Msk           (1UL /*<< ITM_IMCR_INTEGRATION_Pos*/)          /*!< ITM 
 875:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** 
 876:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** /* ITM Lock Status Register Definitions */
 877:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #define ITM_LSR_ByteAcc_Pos                 2U                                            /*!< ITM 
 878:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #define ITM_LSR_ByteAcc_Msk                (1UL << ITM_LSR_ByteAcc_Pos)                   /*!< ITM 
 879:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** 
 880:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #define ITM_LSR_Access_Pos                  1U                                            /*!< ITM 
 881:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #define ITM_LSR_Access_Msk                 (1UL << ITM_LSR_Access_Pos)                    /*!< ITM 
 882:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** 
 883:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #define ITM_LSR_Present_Pos                 0U                                            /*!< ITM 
 884:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #define ITM_LSR_Present_Msk                (1UL /*<< ITM_LSR_Present_Pos*/)               /*!< ITM 
 885:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** 
 886:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** /*@}*/ /* end of group CMSIS_ITM */
 887:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** 
 888:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** 
 889:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** /**
 890:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****   \ingroup  CMSIS_core_register
 891:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****   \defgroup CMSIS_DWT     Data Watchpoint and Trace (DWT)
 892:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****   \brief    Type definitions for the Data Watchpoint and Trace (DWT)
 893:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****   @{
 894:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****  */
 895:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** 
 896:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** /**
 897:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****   \brief  Structure type to access the Data Watchpoint and Trace Register (DWT).
 898:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****  */
 899:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** typedef struct
 900:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** {
 901:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****   __IOM uint32_t CTRL;                   /*!< Offset: 0x000 (R/W)  Control Register */
 902:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****   __IOM uint32_t CYCCNT;                 /*!< Offset: 0x004 (R/W)  Cycle Count Register */
 903:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****   __IOM uint32_t CPICNT;                 /*!< Offset: 0x008 (R/W)  CPI Count Register */
 904:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****   __IOM uint32_t EXCCNT;                 /*!< Offset: 0x00C (R/W)  Exception Overhead Count Registe
 905:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****   __IOM uint32_t SLEEPCNT;               /*!< Offset: 0x010 (R/W)  Sleep Count Register */
 906:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****   __IOM uint32_t LSUCNT;                 /*!< Offset: 0x014 (R/W)  LSU Count Register */
 907:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****   __IOM uint32_t FOLDCNT;                /*!< Offset: 0x018 (R/W)  Folded-instruction Count Registe
 908:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****   __IM  uint32_t PCSR;                   /*!< Offset: 0x01C (R/ )  Program Counter Sample Register 
 909:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****   __IOM uint32_t COMP0;                  /*!< Offset: 0x020 (R/W)  Comparator Register 0 */
 910:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****   __IOM uint32_t MASK0;                  /*!< Offset: 0x024 (R/W)  Mask Register 0 */
 911:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****   __IOM uint32_t FUNCTION0;              /*!< Offset: 0x028 (R/W)  Function Register 0 */
 912:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****         uint32_t RESERVED0[1U];
 913:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****   __IOM uint32_t COMP1;                  /*!< Offset: 0x030 (R/W)  Comparator Register 1 */
 914:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****   __IOM uint32_t MASK1;                  /*!< Offset: 0x034 (R/W)  Mask Register 1 */
 915:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****   __IOM uint32_t FUNCTION1;              /*!< Offset: 0x038 (R/W)  Function Register 1 */
 916:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****         uint32_t RESERVED1[1U];
 917:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****   __IOM uint32_t COMP2;                  /*!< Offset: 0x040 (R/W)  Comparator Register 2 */
 918:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****   __IOM uint32_t MASK2;                  /*!< Offset: 0x044 (R/W)  Mask Register 2 */
 919:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****   __IOM uint32_t FUNCTION2;              /*!< Offset: 0x048 (R/W)  Function Register 2 */
 920:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****         uint32_t RESERVED2[1U];
 921:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****   __IOM uint32_t COMP3;                  /*!< Offset: 0x050 (R/W)  Comparator Register 3 */
 922:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****   __IOM uint32_t MASK3;                  /*!< Offset: 0x054 (R/W)  Mask Register 3 */
 923:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****   __IOM uint32_t FUNCTION3;              /*!< Offset: 0x058 (R/W)  Function Register 3 */
 924:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** } DWT_Type;
 925:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** 
 926:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** /* DWT Control Register Definitions */
 927:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #define DWT_CTRL_NUMCOMP_Pos               28U                                         /*!< DWT CTR
 928:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #define DWT_CTRL_NUMCOMP_Msk               (0xFUL << DWT_CTRL_NUMCOMP_Pos)             /*!< DWT CTR
 929:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** 
 930:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #define DWT_CTRL_NOTRCPKT_Pos              27U                                         /*!< DWT CTR
 931:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #define DWT_CTRL_NOTRCPKT_Msk              (0x1UL << DWT_CTRL_NOTRCPKT_Pos)            /*!< DWT CTR
 932:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** 
 933:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #define DWT_CTRL_NOEXTTRIG_Pos             26U                                         /*!< DWT CTR
 934:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #define DWT_CTRL_NOEXTTRIG_Msk             (0x1UL << DWT_CTRL_NOEXTTRIG_Pos)           /*!< DWT CTR
 935:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** 
 936:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #define DWT_CTRL_NOCYCCNT_Pos              25U                                         /*!< DWT CTR
 937:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #define DWT_CTRL_NOCYCCNT_Msk              (0x1UL << DWT_CTRL_NOCYCCNT_Pos)            /*!< DWT CTR
 938:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** 
 939:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #define DWT_CTRL_NOPRFCNT_Pos              24U                                         /*!< DWT CTR
 940:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #define DWT_CTRL_NOPRFCNT_Msk              (0x1UL << DWT_CTRL_NOPRFCNT_Pos)            /*!< DWT CTR
 941:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** 
 942:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #define DWT_CTRL_CYCEVTENA_Pos             22U                                         /*!< DWT CTR
 943:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #define DWT_CTRL_CYCEVTENA_Msk             (0x1UL << DWT_CTRL_CYCEVTENA_Pos)           /*!< DWT CTR
 944:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** 
 945:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #define DWT_CTRL_FOLDEVTENA_Pos            21U                                         /*!< DWT CTR
 946:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #define DWT_CTRL_FOLDEVTENA_Msk            (0x1UL << DWT_CTRL_FOLDEVTENA_Pos)          /*!< DWT CTR
 947:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** 
 948:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #define DWT_CTRL_LSUEVTENA_Pos             20U                                         /*!< DWT CTR
 949:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #define DWT_CTRL_LSUEVTENA_Msk             (0x1UL << DWT_CTRL_LSUEVTENA_Pos)           /*!< DWT CTR
 950:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** 
 951:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #define DWT_CTRL_SLEEPEVTENA_Pos           19U                                         /*!< DWT CTR
 952:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #define DWT_CTRL_SLEEPEVTENA_Msk           (0x1UL << DWT_CTRL_SLEEPEVTENA_Pos)         /*!< DWT CTR
 953:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** 
 954:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #define DWT_CTRL_EXCEVTENA_Pos             18U                                         /*!< DWT CTR
 955:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #define DWT_CTRL_EXCEVTENA_Msk             (0x1UL << DWT_CTRL_EXCEVTENA_Pos)           /*!< DWT CTR
 956:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** 
 957:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #define DWT_CTRL_CPIEVTENA_Pos             17U                                         /*!< DWT CTR
 958:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #define DWT_CTRL_CPIEVTENA_Msk             (0x1UL << DWT_CTRL_CPIEVTENA_Pos)           /*!< DWT CTR
 959:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** 
 960:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #define DWT_CTRL_EXCTRCENA_Pos             16U                                         /*!< DWT CTR
 961:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #define DWT_CTRL_EXCTRCENA_Msk             (0x1UL << DWT_CTRL_EXCTRCENA_Pos)           /*!< DWT CTR
 962:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** 
 963:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #define DWT_CTRL_PCSAMPLENA_Pos            12U                                         /*!< DWT CTR
 964:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #define DWT_CTRL_PCSAMPLENA_Msk            (0x1UL << DWT_CTRL_PCSAMPLENA_Pos)          /*!< DWT CTR
 965:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** 
 966:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #define DWT_CTRL_SYNCTAP_Pos               10U                                         /*!< DWT CTR
 967:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #define DWT_CTRL_SYNCTAP_Msk               (0x3UL << DWT_CTRL_SYNCTAP_Pos)             /*!< DWT CTR
 968:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** 
 969:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #define DWT_CTRL_CYCTAP_Pos                 9U                                         /*!< DWT CTR
 970:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #define DWT_CTRL_CYCTAP_Msk                (0x1UL << DWT_CTRL_CYCTAP_Pos)              /*!< DWT CTR
 971:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** 
 972:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #define DWT_CTRL_POSTINIT_Pos               5U                                         /*!< DWT CTR
 973:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #define DWT_CTRL_POSTINIT_Msk              (0xFUL << DWT_CTRL_POSTINIT_Pos)            /*!< DWT CTR
 974:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** 
 975:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #define DWT_CTRL_POSTPRESET_Pos             1U                                         /*!< DWT CTR
 976:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #define DWT_CTRL_POSTPRESET_Msk            (0xFUL << DWT_CTRL_POSTPRESET_Pos)          /*!< DWT CTR
 977:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** 
 978:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #define DWT_CTRL_CYCCNTENA_Pos              0U                                         /*!< DWT CTR
 979:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #define DWT_CTRL_CYCCNTENA_Msk             (0x1UL /*<< DWT_CTRL_CYCCNTENA_Pos*/)       /*!< DWT CTR
 980:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** 
 981:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** /* DWT CPI Count Register Definitions */
 982:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #define DWT_CPICNT_CPICNT_Pos               0U                                         /*!< DWT CPI
 983:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #define DWT_CPICNT_CPICNT_Msk              (0xFFUL /*<< DWT_CPICNT_CPICNT_Pos*/)       /*!< DWT CPI
 984:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** 
 985:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** /* DWT Exception Overhead Count Register Definitions */
 986:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #define DWT_EXCCNT_EXCCNT_Pos               0U                                         /*!< DWT EXC
 987:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #define DWT_EXCCNT_EXCCNT_Msk              (0xFFUL /*<< DWT_EXCCNT_EXCCNT_Pos*/)       /*!< DWT EXC
 988:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** 
 989:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** /* DWT Sleep Count Register Definitions */
 990:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #define DWT_SLEEPCNT_SLEEPCNT_Pos           0U                                         /*!< DWT SLE
 991:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #define DWT_SLEEPCNT_SLEEPCNT_Msk          (0xFFUL /*<< DWT_SLEEPCNT_SLEEPCNT_Pos*/)   /*!< DWT SLE
 992:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** 
 993:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** /* DWT LSU Count Register Definitions */
 994:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #define DWT_LSUCNT_LSUCNT_Pos               0U                                         /*!< DWT LSU
 995:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #define DWT_LSUCNT_LSUCNT_Msk              (0xFFUL /*<< DWT_LSUCNT_LSUCNT_Pos*/)       /*!< DWT LSU
 996:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** 
 997:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** /* DWT Folded-instruction Count Register Definitions */
 998:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #define DWT_FOLDCNT_FOLDCNT_Pos             0U                                         /*!< DWT FOL
 999:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #define DWT_FOLDCNT_FOLDCNT_Msk            (0xFFUL /*<< DWT_FOLDCNT_FOLDCNT_Pos*/)     /*!< DWT FOL
1000:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** 
1001:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** /* DWT Comparator Mask Register Definitions */
1002:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #define DWT_MASK_MASK_Pos                   0U                                         /*!< DWT MAS
1003:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #define DWT_MASK_MASK_Msk                  (0x1FUL /*<< DWT_MASK_MASK_Pos*/)           /*!< DWT MAS
1004:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** 
1005:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** /* DWT Comparator Function Register Definitions */
1006:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #define DWT_FUNCTION_MATCHED_Pos           24U                                         /*!< DWT FUN
1007:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #define DWT_FUNCTION_MATCHED_Msk           (0x1UL << DWT_FUNCTION_MATCHED_Pos)         /*!< DWT FUN
1008:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** 
1009:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #define DWT_FUNCTION_DATAVADDR1_Pos        16U                                         /*!< DWT FUN
1010:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #define DWT_FUNCTION_DATAVADDR1_Msk        (0xFUL << DWT_FUNCTION_DATAVADDR1_Pos)      /*!< DWT FUN
1011:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** 
1012:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #define DWT_FUNCTION_DATAVADDR0_Pos        12U                                         /*!< DWT FUN
1013:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #define DWT_FUNCTION_DATAVADDR0_Msk        (0xFUL << DWT_FUNCTION_DATAVADDR0_Pos)      /*!< DWT FUN
1014:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** 
1015:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #define DWT_FUNCTION_DATAVSIZE_Pos         10U                                         /*!< DWT FUN
1016:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #define DWT_FUNCTION_DATAVSIZE_Msk         (0x3UL << DWT_FUNCTION_DATAVSIZE_Pos)       /*!< DWT FUN
1017:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** 
1018:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #define DWT_FUNCTION_LNK1ENA_Pos            9U                                         /*!< DWT FUN
1019:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #define DWT_FUNCTION_LNK1ENA_Msk           (0x1UL << DWT_FUNCTION_LNK1ENA_Pos)         /*!< DWT FUN
1020:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** 
1021:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #define DWT_FUNCTION_DATAVMATCH_Pos         8U                                         /*!< DWT FUN
1022:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #define DWT_FUNCTION_DATAVMATCH_Msk        (0x1UL << DWT_FUNCTION_DATAVMATCH_Pos)      /*!< DWT FUN
1023:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** 
1024:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #define DWT_FUNCTION_CYCMATCH_Pos           7U                                         /*!< DWT FUN
1025:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #define DWT_FUNCTION_CYCMATCH_Msk          (0x1UL << DWT_FUNCTION_CYCMATCH_Pos)        /*!< DWT FUN
1026:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** 
1027:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #define DWT_FUNCTION_EMITRANGE_Pos          5U                                         /*!< DWT FUN
1028:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #define DWT_FUNCTION_EMITRANGE_Msk         (0x1UL << DWT_FUNCTION_EMITRANGE_Pos)       /*!< DWT FUN
1029:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** 
1030:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #define DWT_FUNCTION_FUNCTION_Pos           0U                                         /*!< DWT FUN
1031:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #define DWT_FUNCTION_FUNCTION_Msk          (0xFUL /*<< DWT_FUNCTION_FUNCTION_Pos*/)    /*!< DWT FUN
1032:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** 
1033:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** /*@}*/ /* end of group CMSIS_DWT */
1034:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** 
1035:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** 
1036:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** /**
1037:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****   \ingroup  CMSIS_core_register
1038:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****   \defgroup CMSIS_TPI     Trace Port Interface (TPI)
1039:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****   \brief    Type definitions for the Trace Port Interface (TPI)
1040:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****   @{
1041:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****  */
1042:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** 
1043:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** /**
1044:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****   \brief  Structure type to access the Trace Port Interface Register (TPI).
1045:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****  */
1046:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** typedef struct
1047:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** {
1048:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****   __IOM uint32_t SSPSR;                  /*!< Offset: 0x000 (R/ )  Supported Parallel Port Size Reg
1049:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****   __IOM uint32_t CSPSR;                  /*!< Offset: 0x004 (R/W)  Current Parallel Port Size Regis
1050:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****         uint32_t RESERVED0[2U];
1051:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****   __IOM uint32_t ACPR;                   /*!< Offset: 0x010 (R/W)  Asynchronous Clock Prescaler Reg
1052:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****         uint32_t RESERVED1[55U];
1053:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****   __IOM uint32_t SPPR;                   /*!< Offset: 0x0F0 (R/W)  Selected Pin Protocol Register *
1054:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****         uint32_t RESERVED2[131U];
1055:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****   __IM  uint32_t FFSR;                   /*!< Offset: 0x300 (R/ )  Formatter and Flush Status Regis
1056:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****   __IOM uint32_t FFCR;                   /*!< Offset: 0x304 (R/W)  Formatter and Flush Control Regi
1057:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****   __IM  uint32_t FSCR;                   /*!< Offset: 0x308 (R/ )  Formatter Synchronization Counte
1058:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****         uint32_t RESERVED3[759U];
1059:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****   __IM  uint32_t TRIGGER;                /*!< Offset: 0xEE8 (R/ )  TRIGGER */
1060:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****   __IM  uint32_t FIFO0;                  /*!< Offset: 0xEEC (R/ )  Integration ETM Data */
1061:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****   __IM  uint32_t ITATBCTR2;              /*!< Offset: 0xEF0 (R/ )  ITATBCTR2 */
1062:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****         uint32_t RESERVED4[1U];
1063:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****   __IM  uint32_t ITATBCTR0;              /*!< Offset: 0xEF8 (R/ )  ITATBCTR0 */
1064:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****   __IM  uint32_t FIFO1;                  /*!< Offset: 0xEFC (R/ )  Integration ITM Data */
1065:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****   __IOM uint32_t ITCTRL;                 /*!< Offset: 0xF00 (R/W)  Integration Mode Control */
1066:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****         uint32_t RESERVED5[39U];
1067:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****   __IOM uint32_t CLAIMSET;               /*!< Offset: 0xFA0 (R/W)  Claim tag set */
1068:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****   __IOM uint32_t CLAIMCLR;               /*!< Offset: 0xFA4 (R/W)  Claim tag clear */
1069:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****         uint32_t RESERVED7[8U];
1070:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****   __IM  uint32_t DEVID;                  /*!< Offset: 0xFC8 (R/ )  TPIU_DEVID */
1071:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****   __IM  uint32_t DEVTYPE;                /*!< Offset: 0xFCC (R/ )  TPIU_DEVTYPE */
1072:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** } TPI_Type;
1073:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** 
1074:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** /* TPI Asynchronous Clock Prescaler Register Definitions */
1075:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #define TPI_ACPR_PRESCALER_Pos              0U                                         /*!< TPI ACP
1076:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #define TPI_ACPR_PRESCALER_Msk             (0x1FFFUL /*<< TPI_ACPR_PRESCALER_Pos*/)    /*!< TPI ACP
1077:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** 
1078:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** /* TPI Selected Pin Protocol Register Definitions */
1079:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #define TPI_SPPR_TXMODE_Pos                 0U                                         /*!< TPI SPP
1080:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #define TPI_SPPR_TXMODE_Msk                (0x3UL /*<< TPI_SPPR_TXMODE_Pos*/)          /*!< TPI SPP
1081:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** 
1082:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** /* TPI Formatter and Flush Status Register Definitions */
1083:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #define TPI_FFSR_FtNonStop_Pos              3U                                         /*!< TPI FFS
1084:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #define TPI_FFSR_FtNonStop_Msk             (0x1UL << TPI_FFSR_FtNonStop_Pos)           /*!< TPI FFS
1085:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** 
1086:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #define TPI_FFSR_TCPresent_Pos              2U                                         /*!< TPI FFS
1087:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #define TPI_FFSR_TCPresent_Msk             (0x1UL << TPI_FFSR_TCPresent_Pos)           /*!< TPI FFS
1088:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** 
1089:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #define TPI_FFSR_FtStopped_Pos              1U                                         /*!< TPI FFS
1090:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #define TPI_FFSR_FtStopped_Msk             (0x1UL << TPI_FFSR_FtStopped_Pos)           /*!< TPI FFS
1091:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** 
1092:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #define TPI_FFSR_FlInProg_Pos               0U                                         /*!< TPI FFS
1093:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #define TPI_FFSR_FlInProg_Msk              (0x1UL /*<< TPI_FFSR_FlInProg_Pos*/)        /*!< TPI FFS
1094:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** 
1095:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** /* TPI Formatter and Flush Control Register Definitions */
1096:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #define TPI_FFCR_TrigIn_Pos                 8U                                         /*!< TPI FFC
1097:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #define TPI_FFCR_TrigIn_Msk                (0x1UL << TPI_FFCR_TrigIn_Pos)              /*!< TPI FFC
1098:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** 
1099:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #define TPI_FFCR_EnFCont_Pos                1U                                         /*!< TPI FFC
1100:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #define TPI_FFCR_EnFCont_Msk               (0x1UL << TPI_FFCR_EnFCont_Pos)             /*!< TPI FFC
1101:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** 
1102:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** /* TPI TRIGGER Register Definitions */
1103:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #define TPI_TRIGGER_TRIGGER_Pos             0U                                         /*!< TPI TRI
1104:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #define TPI_TRIGGER_TRIGGER_Msk            (0x1UL /*<< TPI_TRIGGER_TRIGGER_Pos*/)      /*!< TPI TRI
1105:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** 
1106:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** /* TPI Integration ETM Data Register Definitions (FIFO0) */
1107:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #define TPI_FIFO0_ITM_ATVALID_Pos          29U                                         /*!< TPI FIF
1108:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #define TPI_FIFO0_ITM_ATVALID_Msk          (0x3UL << TPI_FIFO0_ITM_ATVALID_Pos)        /*!< TPI FIF
1109:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** 
1110:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #define TPI_FIFO0_ITM_bytecount_Pos        27U                                         /*!< TPI FIF
1111:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #define TPI_FIFO0_ITM_bytecount_Msk        (0x3UL << TPI_FIFO0_ITM_bytecount_Pos)      /*!< TPI FIF
1112:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** 
1113:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #define TPI_FIFO0_ETM_ATVALID_Pos          26U                                         /*!< TPI FIF
1114:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #define TPI_FIFO0_ETM_ATVALID_Msk          (0x3UL << TPI_FIFO0_ETM_ATVALID_Pos)        /*!< TPI FIF
1115:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** 
1116:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #define TPI_FIFO0_ETM_bytecount_Pos        24U                                         /*!< TPI FIF
1117:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #define TPI_FIFO0_ETM_bytecount_Msk        (0x3UL << TPI_FIFO0_ETM_bytecount_Pos)      /*!< TPI FIF
1118:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** 
1119:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #define TPI_FIFO0_ETM2_Pos                 16U                                         /*!< TPI FIF
1120:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #define TPI_FIFO0_ETM2_Msk                 (0xFFUL << TPI_FIFO0_ETM2_Pos)              /*!< TPI FIF
1121:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** 
1122:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #define TPI_FIFO0_ETM1_Pos                  8U                                         /*!< TPI FIF
1123:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #define TPI_FIFO0_ETM1_Msk                 (0xFFUL << TPI_FIFO0_ETM1_Pos)              /*!< TPI FIF
1124:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** 
1125:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #define TPI_FIFO0_ETM0_Pos                  0U                                         /*!< TPI FIF
1126:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #define TPI_FIFO0_ETM0_Msk                 (0xFFUL /*<< TPI_FIFO0_ETM0_Pos*/)          /*!< TPI FIF
1127:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** 
1128:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** /* TPI ITATBCTR2 Register Definitions */
1129:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #define TPI_ITATBCTR2_ATREADY_Pos           0U                                         /*!< TPI ITA
1130:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #define TPI_ITATBCTR2_ATREADY_Msk          (0x1UL /*<< TPI_ITATBCTR2_ATREADY_Pos*/)    /*!< TPI ITA
1131:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** 
1132:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** /* TPI Integration ITM Data Register Definitions (FIFO1) */
1133:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #define TPI_FIFO1_ITM_ATVALID_Pos          29U                                         /*!< TPI FIF
1134:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #define TPI_FIFO1_ITM_ATVALID_Msk          (0x3UL << TPI_FIFO1_ITM_ATVALID_Pos)        /*!< TPI FIF
1135:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** 
1136:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #define TPI_FIFO1_ITM_bytecount_Pos        27U                                         /*!< TPI FIF
1137:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #define TPI_FIFO1_ITM_bytecount_Msk        (0x3UL << TPI_FIFO1_ITM_bytecount_Pos)      /*!< TPI FIF
1138:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** 
1139:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #define TPI_FIFO1_ETM_ATVALID_Pos          26U                                         /*!< TPI FIF
1140:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #define TPI_FIFO1_ETM_ATVALID_Msk          (0x3UL << TPI_FIFO1_ETM_ATVALID_Pos)        /*!< TPI FIF
1141:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** 
1142:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #define TPI_FIFO1_ETM_bytecount_Pos        24U                                         /*!< TPI FIF
1143:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #define TPI_FIFO1_ETM_bytecount_Msk        (0x3UL << TPI_FIFO1_ETM_bytecount_Pos)      /*!< TPI FIF
1144:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** 
1145:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #define TPI_FIFO1_ITM2_Pos                 16U                                         /*!< TPI FIF
1146:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #define TPI_FIFO1_ITM2_Msk                 (0xFFUL << TPI_FIFO1_ITM2_Pos)              /*!< TPI FIF
1147:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** 
1148:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #define TPI_FIFO1_ITM1_Pos                  8U                                         /*!< TPI FIF
1149:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #define TPI_FIFO1_ITM1_Msk                 (0xFFUL << TPI_FIFO1_ITM1_Pos)              /*!< TPI FIF
1150:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** 
1151:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #define TPI_FIFO1_ITM0_Pos                  0U                                         /*!< TPI FIF
1152:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #define TPI_FIFO1_ITM0_Msk                 (0xFFUL /*<< TPI_FIFO1_ITM0_Pos*/)          /*!< TPI FIF
1153:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** 
1154:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** /* TPI ITATBCTR0 Register Definitions */
1155:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #define TPI_ITATBCTR0_ATREADY_Pos           0U                                         /*!< TPI ITA
1156:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #define TPI_ITATBCTR0_ATREADY_Msk          (0x1UL /*<< TPI_ITATBCTR0_ATREADY_Pos*/)    /*!< TPI ITA
1157:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** 
1158:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** /* TPI Integration Mode Control Register Definitions */
1159:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #define TPI_ITCTRL_Mode_Pos                 0U                                         /*!< TPI ITC
1160:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #define TPI_ITCTRL_Mode_Msk                (0x1UL /*<< TPI_ITCTRL_Mode_Pos*/)          /*!< TPI ITC
1161:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** 
1162:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** /* TPI DEVID Register Definitions */
1163:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #define TPI_DEVID_NRZVALID_Pos             11U                                         /*!< TPI DEV
1164:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #define TPI_DEVID_NRZVALID_Msk             (0x1UL << TPI_DEVID_NRZVALID_Pos)           /*!< TPI DEV
1165:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** 
1166:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #define TPI_DEVID_MANCVALID_Pos            10U                                         /*!< TPI DEV
1167:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #define TPI_DEVID_MANCVALID_Msk            (0x1UL << TPI_DEVID_MANCVALID_Pos)          /*!< TPI DEV
1168:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** 
1169:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #define TPI_DEVID_PTINVALID_Pos             9U                                         /*!< TPI DEV
1170:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #define TPI_DEVID_PTINVALID_Msk            (0x1UL << TPI_DEVID_PTINVALID_Pos)          /*!< TPI DEV
1171:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** 
1172:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #define TPI_DEVID_MinBufSz_Pos              6U                                         /*!< TPI DEV
1173:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #define TPI_DEVID_MinBufSz_Msk             (0x7UL << TPI_DEVID_MinBufSz_Pos)           /*!< TPI DEV
1174:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** 
1175:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #define TPI_DEVID_AsynClkIn_Pos             5U                                         /*!< TPI DEV
1176:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #define TPI_DEVID_AsynClkIn_Msk            (0x1UL << TPI_DEVID_AsynClkIn_Pos)          /*!< TPI DEV
1177:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** 
1178:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #define TPI_DEVID_NrTraceInput_Pos          0U                                         /*!< TPI DEV
1179:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #define TPI_DEVID_NrTraceInput_Msk         (0x1FUL /*<< TPI_DEVID_NrTraceInput_Pos*/)  /*!< TPI DEV
1180:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** 
1181:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** /* TPI DEVTYPE Register Definitions */
1182:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #define TPI_DEVTYPE_MajorType_Pos           4U                                         /*!< TPI DEV
1183:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #define TPI_DEVTYPE_MajorType_Msk          (0xFUL << TPI_DEVTYPE_MajorType_Pos)        /*!< TPI DEV
1184:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** 
1185:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #define TPI_DEVTYPE_SubType_Pos             0U                                         /*!< TPI DEV
1186:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #define TPI_DEVTYPE_SubType_Msk            (0xFUL /*<< TPI_DEVTYPE_SubType_Pos*/)      /*!< TPI DEV
1187:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** 
1188:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** /*@}*/ /* end of group CMSIS_TPI */
1189:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** 
1190:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** 
1191:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #if (__MPU_PRESENT == 1U)
1192:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** /**
1193:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****   \ingroup  CMSIS_core_register
1194:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****   \defgroup CMSIS_MPU     Memory Protection Unit (MPU)
1195:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****   \brief    Type definitions for the Memory Protection Unit (MPU)
1196:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****   @{
1197:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****  */
1198:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** 
1199:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** /**
1200:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****   \brief  Structure type to access the Memory Protection Unit (MPU).
1201:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****  */
1202:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** typedef struct
1203:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** {
1204:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****   __IM  uint32_t TYPE;                   /*!< Offset: 0x000 (R/ )  MPU Type Register */
1205:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****   __IOM uint32_t CTRL;                   /*!< Offset: 0x004 (R/W)  MPU Control Register */
1206:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****   __IOM uint32_t RNR;                    /*!< Offset: 0x008 (R/W)  MPU Region RNRber Register */
1207:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****   __IOM uint32_t RBAR;                   /*!< Offset: 0x00C (R/W)  MPU Region Base Address Register
1208:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****   __IOM uint32_t RASR;                   /*!< Offset: 0x010 (R/W)  MPU Region Attribute and Size Re
1209:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****   __IOM uint32_t RBAR_A1;                /*!< Offset: 0x014 (R/W)  MPU Alias 1 Region Base Address 
1210:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****   __IOM uint32_t RASR_A1;                /*!< Offset: 0x018 (R/W)  MPU Alias 1 Region Attribute and
1211:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****   __IOM uint32_t RBAR_A2;                /*!< Offset: 0x01C (R/W)  MPU Alias 2 Region Base Address 
1212:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****   __IOM uint32_t RASR_A2;                /*!< Offset: 0x020 (R/W)  MPU Alias 2 Region Attribute and
1213:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****   __IOM uint32_t RBAR_A3;                /*!< Offset: 0x024 (R/W)  MPU Alias 3 Region Base Address 
1214:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****   __IOM uint32_t RASR_A3;                /*!< Offset: 0x028 (R/W)  MPU Alias 3 Region Attribute and
1215:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** } MPU_Type;
1216:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** 
1217:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** /* MPU Type Register Definitions */
1218:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #define MPU_TYPE_IREGION_Pos               16U                                            /*!< MPU 
1219:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #define MPU_TYPE_IREGION_Msk               (0xFFUL << MPU_TYPE_IREGION_Pos)               /*!< MPU 
1220:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** 
1221:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #define MPU_TYPE_DREGION_Pos                8U                                            /*!< MPU 
1222:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #define MPU_TYPE_DREGION_Msk               (0xFFUL << MPU_TYPE_DREGION_Pos)               /*!< MPU 
1223:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** 
1224:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #define MPU_TYPE_SEPARATE_Pos               0U                                            /*!< MPU 
1225:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #define MPU_TYPE_SEPARATE_Msk              (1UL /*<< MPU_TYPE_SEPARATE_Pos*/)             /*!< MPU 
1226:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** 
1227:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** /* MPU Control Register Definitions */
1228:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #define MPU_CTRL_PRIVDEFENA_Pos             2U                                            /*!< MPU 
1229:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #define MPU_CTRL_PRIVDEFENA_Msk            (1UL << MPU_CTRL_PRIVDEFENA_Pos)               /*!< MPU 
1230:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** 
1231:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #define MPU_CTRL_HFNMIENA_Pos               1U                                            /*!< MPU 
1232:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #define MPU_CTRL_HFNMIENA_Msk              (1UL << MPU_CTRL_HFNMIENA_Pos)                 /*!< MPU 
1233:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** 
1234:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #define MPU_CTRL_ENABLE_Pos                 0U                                            /*!< MPU 
1235:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #define MPU_CTRL_ENABLE_Msk                (1UL /*<< MPU_CTRL_ENABLE_Pos*/)               /*!< MPU 
1236:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** 
1237:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** /* MPU Region Number Register Definitions */
1238:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #define MPU_RNR_REGION_Pos                  0U                                            /*!< MPU 
1239:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #define MPU_RNR_REGION_Msk                 (0xFFUL /*<< MPU_RNR_REGION_Pos*/)             /*!< MPU 
1240:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** 
1241:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** /* MPU Region Base Address Register Definitions */
1242:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #define MPU_RBAR_ADDR_Pos                   5U                                            /*!< MPU 
1243:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #define MPU_RBAR_ADDR_Msk                  (0x7FFFFFFUL << MPU_RBAR_ADDR_Pos)             /*!< MPU 
1244:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** 
1245:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #define MPU_RBAR_VALID_Pos                  4U                                            /*!< MPU 
1246:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #define MPU_RBAR_VALID_Msk                 (1UL << MPU_RBAR_VALID_Pos)                    /*!< MPU 
1247:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** 
1248:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #define MPU_RBAR_REGION_Pos                 0U                                            /*!< MPU 
1249:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #define MPU_RBAR_REGION_Msk                (0xFUL /*<< MPU_RBAR_REGION_Pos*/)             /*!< MPU 
1250:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** 
1251:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** /* MPU Region Attribute and Size Register Definitions */
1252:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #define MPU_RASR_ATTRS_Pos                 16U                                            /*!< MPU 
1253:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #define MPU_RASR_ATTRS_Msk                 (0xFFFFUL << MPU_RASR_ATTRS_Pos)               /*!< MPU 
1254:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** 
1255:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #define MPU_RASR_XN_Pos                    28U                                            /*!< MPU 
1256:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #define MPU_RASR_XN_Msk                    (1UL << MPU_RASR_XN_Pos)                       /*!< MPU 
1257:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** 
1258:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #define MPU_RASR_AP_Pos                    24U                                            /*!< MPU 
1259:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #define MPU_RASR_AP_Msk                    (0x7UL << MPU_RASR_AP_Pos)                     /*!< MPU 
1260:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** 
1261:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #define MPU_RASR_TEX_Pos                   19U                                            /*!< MPU 
1262:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #define MPU_RASR_TEX_Msk                   (0x7UL << MPU_RASR_TEX_Pos)                    /*!< MPU 
1263:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** 
1264:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #define MPU_RASR_S_Pos                     18U                                            /*!< MPU 
1265:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #define MPU_RASR_S_Msk                     (1UL << MPU_RASR_S_Pos)                        /*!< MPU 
1266:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** 
1267:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #define MPU_RASR_C_Pos                     17U                                            /*!< MPU 
1268:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #define MPU_RASR_C_Msk                     (1UL << MPU_RASR_C_Pos)                        /*!< MPU 
1269:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** 
1270:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #define MPU_RASR_B_Pos                     16U                                            /*!< MPU 
1271:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #define MPU_RASR_B_Msk                     (1UL << MPU_RASR_B_Pos)                        /*!< MPU 
1272:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** 
1273:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #define MPU_RASR_SRD_Pos                    8U                                            /*!< MPU 
1274:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #define MPU_RASR_SRD_Msk                   (0xFFUL << MPU_RASR_SRD_Pos)                   /*!< MPU 
1275:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** 
1276:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #define MPU_RASR_SIZE_Pos                   1U                                            /*!< MPU 
1277:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #define MPU_RASR_SIZE_Msk                  (0x1FUL << MPU_RASR_SIZE_Pos)                  /*!< MPU 
1278:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** 
1279:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #define MPU_RASR_ENABLE_Pos                 0U                                            /*!< MPU 
1280:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #define MPU_RASR_ENABLE_Msk                (1UL /*<< MPU_RASR_ENABLE_Pos*/)               /*!< MPU 
1281:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** 
1282:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** /*@} end of group CMSIS_MPU */
1283:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #endif
1284:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** 
1285:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** 
1286:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #if (__FPU_PRESENT == 1U)
1287:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** /**
1288:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****   \ingroup  CMSIS_core_register
1289:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****   \defgroup CMSIS_FPU     Floating Point Unit (FPU)
1290:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****   \brief    Type definitions for the Floating Point Unit (FPU)
1291:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****   @{
1292:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****  */
1293:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** 
1294:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** /**
1295:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****   \brief  Structure type to access the Floating Point Unit (FPU).
1296:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****  */
1297:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** typedef struct
1298:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** {
1299:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****         uint32_t RESERVED0[1U];
1300:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****   __IOM uint32_t FPCCR;                  /*!< Offset: 0x004 (R/W)  Floating-Point Context Control R
1301:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****   __IOM uint32_t FPCAR;                  /*!< Offset: 0x008 (R/W)  Floating-Point Context Address R
1302:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****   __IOM uint32_t FPDSCR;                 /*!< Offset: 0x00C (R/W)  Floating-Point Default Status Co
1303:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****   __IM  uint32_t MVFR0;                  /*!< Offset: 0x010 (R/ )  Media and FP Feature Register 0 
1304:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****   __IM  uint32_t MVFR1;                  /*!< Offset: 0x014 (R/ )  Media and FP Feature Register 1 
1305:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** } FPU_Type;
1306:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** 
1307:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** /* Floating-Point Context Control Register Definitions */
1308:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #define FPU_FPCCR_ASPEN_Pos                31U                                            /*!< FPCC
1309:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #define FPU_FPCCR_ASPEN_Msk                (1UL << FPU_FPCCR_ASPEN_Pos)                   /*!< FPCC
1310:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** 
1311:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #define FPU_FPCCR_LSPEN_Pos                30U                                            /*!< FPCC
1312:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #define FPU_FPCCR_LSPEN_Msk                (1UL << FPU_FPCCR_LSPEN_Pos)                   /*!< FPCC
1313:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** 
1314:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #define FPU_FPCCR_MONRDY_Pos                8U                                            /*!< FPCC
1315:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #define FPU_FPCCR_MONRDY_Msk               (1UL << FPU_FPCCR_MONRDY_Pos)                  /*!< FPCC
1316:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** 
1317:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #define FPU_FPCCR_BFRDY_Pos                 6U                                            /*!< FPCC
1318:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #define FPU_FPCCR_BFRDY_Msk                (1UL << FPU_FPCCR_BFRDY_Pos)                   /*!< FPCC
1319:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** 
1320:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #define FPU_FPCCR_MMRDY_Pos                 5U                                            /*!< FPCC
1321:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #define FPU_FPCCR_MMRDY_Msk                (1UL << FPU_FPCCR_MMRDY_Pos)                   /*!< FPCC
1322:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** 
1323:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #define FPU_FPCCR_HFRDY_Pos                 4U                                            /*!< FPCC
1324:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #define FPU_FPCCR_HFRDY_Msk                (1UL << FPU_FPCCR_HFRDY_Pos)                   /*!< FPCC
1325:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** 
1326:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #define FPU_FPCCR_THREAD_Pos                3U                                            /*!< FPCC
1327:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #define FPU_FPCCR_THREAD_Msk               (1UL << FPU_FPCCR_THREAD_Pos)                  /*!< FPCC
1328:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** 
1329:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #define FPU_FPCCR_USER_Pos                  1U                                            /*!< FPCC
1330:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #define FPU_FPCCR_USER_Msk                 (1UL << FPU_FPCCR_USER_Pos)                    /*!< FPCC
1331:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** 
1332:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #define FPU_FPCCR_LSPACT_Pos                0U                                            /*!< FPCC
1333:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #define FPU_FPCCR_LSPACT_Msk               (1UL /*<< FPU_FPCCR_LSPACT_Pos*/)              /*!< FPCC
1334:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** 
1335:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** /* Floating-Point Context Address Register Definitions */
1336:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #define FPU_FPCAR_ADDRESS_Pos               3U                                            /*!< FPCA
1337:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #define FPU_FPCAR_ADDRESS_Msk              (0x1FFFFFFFUL << FPU_FPCAR_ADDRESS_Pos)        /*!< FPCA
1338:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** 
1339:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** /* Floating-Point Default Status Control Register Definitions */
1340:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #define FPU_FPDSCR_AHP_Pos                 26U                                            /*!< FPDS
1341:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #define FPU_FPDSCR_AHP_Msk                 (1UL << FPU_FPDSCR_AHP_Pos)                    /*!< FPDS
1342:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** 
1343:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #define FPU_FPDSCR_DN_Pos                  25U                                            /*!< FPDS
1344:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #define FPU_FPDSCR_DN_Msk                  (1UL << FPU_FPDSCR_DN_Pos)                     /*!< FPDS
1345:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** 
1346:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #define FPU_FPDSCR_FZ_Pos                  24U                                            /*!< FPDS
1347:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #define FPU_FPDSCR_FZ_Msk                  (1UL << FPU_FPDSCR_FZ_Pos)                     /*!< FPDS
1348:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** 
1349:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #define FPU_FPDSCR_RMode_Pos               22U                                            /*!< FPDS
1350:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #define FPU_FPDSCR_RMode_Msk               (3UL << FPU_FPDSCR_RMode_Pos)                  /*!< FPDS
1351:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** 
1352:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** /* Media and FP Feature Register 0 Definitions */
1353:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #define FPU_MVFR0_FP_rounding_modes_Pos    28U                                            /*!< MVFR
1354:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #define FPU_MVFR0_FP_rounding_modes_Msk    (0xFUL << FPU_MVFR0_FP_rounding_modes_Pos)     /*!< MVFR
1355:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** 
1356:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #define FPU_MVFR0_Short_vectors_Pos        24U                                            /*!< MVFR
1357:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #define FPU_MVFR0_Short_vectors_Msk        (0xFUL << FPU_MVFR0_Short_vectors_Pos)         /*!< MVFR
1358:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** 
1359:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #define FPU_MVFR0_Square_root_Pos          20U                                            /*!< MVFR
1360:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #define FPU_MVFR0_Square_root_Msk          (0xFUL << FPU_MVFR0_Square_root_Pos)           /*!< MVFR
1361:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** 
1362:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #define FPU_MVFR0_Divide_Pos               16U                                            /*!< MVFR
1363:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #define FPU_MVFR0_Divide_Msk               (0xFUL << FPU_MVFR0_Divide_Pos)                /*!< MVFR
1364:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** 
1365:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #define FPU_MVFR0_FP_excep_trapping_Pos    12U                                            /*!< MVFR
1366:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #define FPU_MVFR0_FP_excep_trapping_Msk    (0xFUL << FPU_MVFR0_FP_excep_trapping_Pos)     /*!< MVFR
1367:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** 
1368:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #define FPU_MVFR0_Double_precision_Pos      8U                                            /*!< MVFR
1369:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #define FPU_MVFR0_Double_precision_Msk     (0xFUL << FPU_MVFR0_Double_precision_Pos)      /*!< MVFR
1370:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** 
1371:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #define FPU_MVFR0_Single_precision_Pos      4U                                            /*!< MVFR
1372:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #define FPU_MVFR0_Single_precision_Msk     (0xFUL << FPU_MVFR0_Single_precision_Pos)      /*!< MVFR
1373:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** 
1374:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #define FPU_MVFR0_A_SIMD_registers_Pos      0U                                            /*!< MVFR
1375:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #define FPU_MVFR0_A_SIMD_registers_Msk     (0xFUL /*<< FPU_MVFR0_A_SIMD_registers_Pos*/)  /*!< MVFR
1376:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** 
1377:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** /* Media and FP Feature Register 1 Definitions */
1378:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #define FPU_MVFR1_FP_fused_MAC_Pos         28U                                            /*!< MVFR
1379:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #define FPU_MVFR1_FP_fused_MAC_Msk         (0xFUL << FPU_MVFR1_FP_fused_MAC_Pos)          /*!< MVFR
1380:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** 
1381:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #define FPU_MVFR1_FP_HPFP_Pos              24U                                            /*!< MVFR
1382:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #define FPU_MVFR1_FP_HPFP_Msk              (0xFUL << FPU_MVFR1_FP_HPFP_Pos)               /*!< MVFR
1383:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** 
1384:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #define FPU_MVFR1_D_NaN_mode_Pos            4U                                            /*!< MVFR
1385:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #define FPU_MVFR1_D_NaN_mode_Msk           (0xFUL << FPU_MVFR1_D_NaN_mode_Pos)            /*!< MVFR
1386:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** 
1387:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #define FPU_MVFR1_FtZ_mode_Pos              0U                                            /*!< MVFR
1388:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #define FPU_MVFR1_FtZ_mode_Msk             (0xFUL /*<< FPU_MVFR1_FtZ_mode_Pos*/)          /*!< MVFR
1389:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** 
1390:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** /*@} end of group CMSIS_FPU */
1391:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #endif
1392:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** 
1393:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** 
1394:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** /**
1395:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****   \ingroup  CMSIS_core_register
1396:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****   \defgroup CMSIS_CoreDebug       Core Debug Registers (CoreDebug)
1397:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****   \brief    Type definitions for the Core Debug Registers
1398:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****   @{
1399:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****  */
1400:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** 
1401:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** /**
1402:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****   \brief  Structure type to access the Core Debug Register (CoreDebug).
1403:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****  */
1404:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** typedef struct
1405:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** {
1406:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****   __IOM uint32_t DHCSR;                  /*!< Offset: 0x000 (R/W)  Debug Halting Control and Status
1407:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****   __OM  uint32_t DCRSR;                  /*!< Offset: 0x004 ( /W)  Debug Core Register Selector Reg
1408:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****   __IOM uint32_t DCRDR;                  /*!< Offset: 0x008 (R/W)  Debug Core Register Data Registe
1409:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****   __IOM uint32_t DEMCR;                  /*!< Offset: 0x00C (R/W)  Debug Exception and Monitor Cont
1410:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** } CoreDebug_Type;
1411:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** 
1412:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** /* Debug Halting Control and Status Register Definitions */
1413:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #define CoreDebug_DHCSR_DBGKEY_Pos         16U                                            /*!< Core
1414:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #define CoreDebug_DHCSR_DBGKEY_Msk         (0xFFFFUL << CoreDebug_DHCSR_DBGKEY_Pos)       /*!< Core
1415:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** 
1416:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #define CoreDebug_DHCSR_S_RESET_ST_Pos     25U                                            /*!< Core
1417:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #define CoreDebug_DHCSR_S_RESET_ST_Msk     (1UL << CoreDebug_DHCSR_S_RESET_ST_Pos)        /*!< Core
1418:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** 
1419:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #define CoreDebug_DHCSR_S_RETIRE_ST_Pos    24U                                            /*!< Core
1420:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #define CoreDebug_DHCSR_S_RETIRE_ST_Msk    (1UL << CoreDebug_DHCSR_S_RETIRE_ST_Pos)       /*!< Core
1421:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** 
1422:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #define CoreDebug_DHCSR_S_LOCKUP_Pos       19U                                            /*!< Core
1423:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #define CoreDebug_DHCSR_S_LOCKUP_Msk       (1UL << CoreDebug_DHCSR_S_LOCKUP_Pos)          /*!< Core
1424:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** 
1425:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #define CoreDebug_DHCSR_S_SLEEP_Pos        18U                                            /*!< Core
1426:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #define CoreDebug_DHCSR_S_SLEEP_Msk        (1UL << CoreDebug_DHCSR_S_SLEEP_Pos)           /*!< Core
1427:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** 
1428:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #define CoreDebug_DHCSR_S_HALT_Pos         17U                                            /*!< Core
1429:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #define CoreDebug_DHCSR_S_HALT_Msk         (1UL << CoreDebug_DHCSR_S_HALT_Pos)            /*!< Core
1430:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** 
1431:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #define CoreDebug_DHCSR_S_REGRDY_Pos       16U                                            /*!< Core
1432:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #define CoreDebug_DHCSR_S_REGRDY_Msk       (1UL << CoreDebug_DHCSR_S_REGRDY_Pos)          /*!< Core
1433:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** 
1434:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #define CoreDebug_DHCSR_C_SNAPSTALL_Pos     5U                                            /*!< Core
1435:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #define CoreDebug_DHCSR_C_SNAPSTALL_Msk    (1UL << CoreDebug_DHCSR_C_SNAPSTALL_Pos)       /*!< Core
1436:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** 
1437:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #define CoreDebug_DHCSR_C_MASKINTS_Pos      3U                                            /*!< Core
1438:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #define CoreDebug_DHCSR_C_MASKINTS_Msk     (1UL << CoreDebug_DHCSR_C_MASKINTS_Pos)        /*!< Core
1439:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** 
1440:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #define CoreDebug_DHCSR_C_STEP_Pos          2U                                            /*!< Core
1441:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #define CoreDebug_DHCSR_C_STEP_Msk         (1UL << CoreDebug_DHCSR_C_STEP_Pos)            /*!< Core
1442:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** 
1443:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #define CoreDebug_DHCSR_C_HALT_Pos          1U                                            /*!< Core
1444:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #define CoreDebug_DHCSR_C_HALT_Msk         (1UL << CoreDebug_DHCSR_C_HALT_Pos)            /*!< Core
1445:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** 
1446:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #define CoreDebug_DHCSR_C_DEBUGEN_Pos       0U                                            /*!< Core
1447:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #define CoreDebug_DHCSR_C_DEBUGEN_Msk      (1UL /*<< CoreDebug_DHCSR_C_DEBUGEN_Pos*/)     /*!< Core
1448:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** 
1449:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** /* Debug Core Register Selector Register Definitions */
1450:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #define CoreDebug_DCRSR_REGWnR_Pos         16U                                            /*!< Core
1451:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #define CoreDebug_DCRSR_REGWnR_Msk         (1UL << CoreDebug_DCRSR_REGWnR_Pos)            /*!< Core
1452:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** 
1453:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #define CoreDebug_DCRSR_REGSEL_Pos          0U                                            /*!< Core
1454:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #define CoreDebug_DCRSR_REGSEL_Msk         (0x1FUL /*<< CoreDebug_DCRSR_REGSEL_Pos*/)     /*!< Core
1455:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** 
1456:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** /* Debug Exception and Monitor Control Register Definitions */
1457:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #define CoreDebug_DEMCR_TRCENA_Pos         24U                                            /*!< Core
1458:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #define CoreDebug_DEMCR_TRCENA_Msk         (1UL << CoreDebug_DEMCR_TRCENA_Pos)            /*!< Core
1459:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** 
1460:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #define CoreDebug_DEMCR_MON_REQ_Pos        19U                                            /*!< Core
1461:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #define CoreDebug_DEMCR_MON_REQ_Msk        (1UL << CoreDebug_DEMCR_MON_REQ_Pos)           /*!< Core
1462:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** 
1463:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #define CoreDebug_DEMCR_MON_STEP_Pos       18U                                            /*!< Core
1464:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #define CoreDebug_DEMCR_MON_STEP_Msk       (1UL << CoreDebug_DEMCR_MON_STEP_Pos)          /*!< Core
1465:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** 
1466:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #define CoreDebug_DEMCR_MON_PEND_Pos       17U                                            /*!< Core
1467:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #define CoreDebug_DEMCR_MON_PEND_Msk       (1UL << CoreDebug_DEMCR_MON_PEND_Pos)          /*!< Core
1468:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** 
1469:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #define CoreDebug_DEMCR_MON_EN_Pos         16U                                            /*!< Core
1470:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #define CoreDebug_DEMCR_MON_EN_Msk         (1UL << CoreDebug_DEMCR_MON_EN_Pos)            /*!< Core
1471:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** 
1472:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #define CoreDebug_DEMCR_VC_HARDERR_Pos     10U                                            /*!< Core
1473:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #define CoreDebug_DEMCR_VC_HARDERR_Msk     (1UL << CoreDebug_DEMCR_VC_HARDERR_Pos)        /*!< Core
1474:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** 
1475:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #define CoreDebug_DEMCR_VC_INTERR_Pos       9U                                            /*!< Core
1476:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #define CoreDebug_DEMCR_VC_INTERR_Msk      (1UL << CoreDebug_DEMCR_VC_INTERR_Pos)         /*!< Core
1477:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** 
1478:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #define CoreDebug_DEMCR_VC_BUSERR_Pos       8U                                            /*!< Core
1479:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #define CoreDebug_DEMCR_VC_BUSERR_Msk      (1UL << CoreDebug_DEMCR_VC_BUSERR_Pos)         /*!< Core
1480:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** 
1481:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #define CoreDebug_DEMCR_VC_STATERR_Pos      7U                                            /*!< Core
1482:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #define CoreDebug_DEMCR_VC_STATERR_Msk     (1UL << CoreDebug_DEMCR_VC_STATERR_Pos)        /*!< Core
1483:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** 
1484:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #define CoreDebug_DEMCR_VC_CHKERR_Pos       6U                                            /*!< Core
1485:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #define CoreDebug_DEMCR_VC_CHKERR_Msk      (1UL << CoreDebug_DEMCR_VC_CHKERR_Pos)         /*!< Core
1486:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** 
1487:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #define CoreDebug_DEMCR_VC_NOCPERR_Pos      5U                                            /*!< Core
1488:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #define CoreDebug_DEMCR_VC_NOCPERR_Msk     (1UL << CoreDebug_DEMCR_VC_NOCPERR_Pos)        /*!< Core
1489:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** 
1490:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #define CoreDebug_DEMCR_VC_MMERR_Pos        4U                                            /*!< Core
1491:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #define CoreDebug_DEMCR_VC_MMERR_Msk       (1UL << CoreDebug_DEMCR_VC_MMERR_Pos)          /*!< Core
1492:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** 
1493:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #define CoreDebug_DEMCR_VC_CORERESET_Pos    0U                                            /*!< Core
1494:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #define CoreDebug_DEMCR_VC_CORERESET_Msk   (1UL /*<< CoreDebug_DEMCR_VC_CORERESET_Pos*/)  /*!< Core
1495:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** 
1496:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** /*@} end of group CMSIS_CoreDebug */
1497:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** 
1498:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** 
1499:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** /**
1500:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****   \ingroup    CMSIS_core_register
1501:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****   \defgroup   CMSIS_core_bitfield     Core register bit field macros
1502:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****   \brief      Macros for use with bit field definitions (xxx_Pos, xxx_Msk).
1503:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****   @{
1504:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****  */
1505:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** 
1506:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** /**
1507:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****   \brief   Mask and shift a bit field value for use in a register bit range.
1508:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****   \param[in] field  Name of the register bit field.
1509:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****   \param[in] value  Value of the bit field.
1510:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****   \return           Masked and shifted value.
1511:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** */
1512:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #define _VAL2FLD(field, value)    ((value << field ## _Pos) & field ## _Msk)
1513:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** 
1514:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** /**
1515:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****   \brief     Mask and shift a register value to extract a bit filed value.
1516:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****   \param[in] field  Name of the register bit field.
1517:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****   \param[in] value  Value of register.
1518:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****   \return           Masked and shifted bit field value.
1519:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** */
1520:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #define _FLD2VAL(field, value)    ((value & field ## _Msk) >> field ## _Pos)
1521:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** 
1522:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** /*@} end of group CMSIS_core_bitfield */
1523:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** 
1524:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** 
1525:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** /**
1526:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****   \ingroup    CMSIS_core_register
1527:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****   \defgroup   CMSIS_core_base     Core Definitions
1528:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****   \brief      Definitions for base addresses, unions, and structures.
1529:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****   @{
1530:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****  */
1531:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** 
1532:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** /* Memory mapping of Cortex-M4 Hardware */
1533:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #define SCS_BASE            (0xE000E000UL)                            /*!< System Control Space Bas
1534:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #define ITM_BASE            (0xE0000000UL)                            /*!< ITM Base Address */
1535:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #define DWT_BASE            (0xE0001000UL)                            /*!< DWT Base Address */
1536:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #define TPI_BASE            (0xE0040000UL)                            /*!< TPI Base Address */
1537:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #define CoreDebug_BASE      (0xE000EDF0UL)                            /*!< Core Debug Base Address 
1538:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #define SysTick_BASE        (SCS_BASE +  0x0010UL)                    /*!< SysTick Base Address */
1539:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #define NVIC_BASE           (SCS_BASE +  0x0100UL)                    /*!< NVIC Base Address */
1540:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #define SCB_BASE            (SCS_BASE +  0x0D00UL)                    /*!< System Control Block Bas
1541:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** 
1542:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #define SCnSCB              ((SCnSCB_Type    *)     SCS_BASE      )   /*!< System control Register 
1543:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #define SCB                 ((SCB_Type       *)     SCB_BASE      )   /*!< SCB configuration struct
1544:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #define SysTick             ((SysTick_Type   *)     SysTick_BASE  )   /*!< SysTick configuration st
1545:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #define NVIC                ((NVIC_Type      *)     NVIC_BASE     )   /*!< NVIC configuration struc
1546:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #define ITM                 ((ITM_Type       *)     ITM_BASE      )   /*!< ITM configuration struct
1547:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #define DWT                 ((DWT_Type       *)     DWT_BASE      )   /*!< DWT configuration struct
1548:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #define TPI                 ((TPI_Type       *)     TPI_BASE      )   /*!< TPI configuration struct
1549:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #define CoreDebug           ((CoreDebug_Type *)     CoreDebug_BASE)   /*!< Core Debug configuration
1550:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** 
1551:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #if (__MPU_PRESENT == 1U)
1552:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****   #define MPU_BASE          (SCS_BASE +  0x0D90UL)                    /*!< Memory Protection Unit *
1553:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****   #define MPU               ((MPU_Type       *)     MPU_BASE      )   /*!< Memory Protection Unit *
1554:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #endif
1555:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** 
1556:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #if (__FPU_PRESENT == 1U)
1557:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****   #define FPU_BASE          (SCS_BASE +  0x0F30UL)                    /*!< Floating Point Unit */
1558:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****   #define FPU               ((FPU_Type       *)     FPU_BASE      )   /*!< Floating Point Unit */
1559:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** #endif
1560:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** 
1561:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** /*@} */
1562:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** 
1563:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** 
1564:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** 
1565:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** /*******************************************************************************
1566:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****  *                Hardware Abstraction Layer
1567:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****   Core Function Interface contains:
1568:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****   - Core NVIC Functions
1569:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****   - Core SysTick Functions
1570:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****   - Core Debug Functions
1571:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****   - Core Register Access Functions
1572:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****  ******************************************************************************/
1573:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** /**
1574:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****   \defgroup CMSIS_Core_FunctionInterface Functions and Instructions Reference
1575:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** */
1576:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** 
1577:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** 
1578:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** 
1579:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** /* ##########################   NVIC functions  #################################### */
1580:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** /**
1581:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****   \ingroup  CMSIS_Core_FunctionInterface
1582:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****   \defgroup CMSIS_Core_NVICFunctions NVIC Functions
1583:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****   \brief    Functions that manage interrupts and exceptions via the NVIC.
1584:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****   @{
1585:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****  */
1586:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** 
1587:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** /**
1588:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****   \brief   Set Priority Grouping
1589:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****   \details Sets the priority grouping field using the required unlock sequence.
1590:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****            The parameter PriorityGroup is assigned to the field SCB->AIRCR [10:8] PRIGROUP field.
1591:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****            Only values from 0..7 are used.
1592:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****            In case of a conflict between priority grouping and available
1593:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****            priority bits (__NVIC_PRIO_BITS), the smallest possible priority group is set.
1594:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****   \param [in]      PriorityGroup  Priority grouping field.
1595:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****  */
1596:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** __STATIC_INLINE void NVIC_SetPriorityGrouping(uint32_t PriorityGroup)
1597:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** {
1598:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****   uint32_t reg_value;
1599:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****   uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);             /* only values 0..7 a
1600:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** 
1601:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****   reg_value  =  SCB->AIRCR;                                                   /* read old register 
1602:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****   reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to chan
1603:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****   reg_value  =  (reg_value                                   |
1604:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****                 ((uint32_t)0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
1605:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****                 (PriorityGroupTmp << 8U)                      );              /* Insert write key a
1606:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****   SCB->AIRCR =  reg_value;
1607:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** }
1608:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** 
1609:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** 
1610:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** /**
1611:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****   \brief   Get Priority Grouping
1612:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****   \details Reads the priority grouping field from the NVIC Interrupt Controller.
1613:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****   \return                Priority grouping field (SCB->AIRCR [10:8] PRIGROUP field).
1614:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****  */
1615:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** __STATIC_INLINE uint32_t NVIC_GetPriorityGrouping(void)
1616:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** {
1617:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****   return ((uint32_t)((SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) >> SCB_AIRCR_PRIGROUP_Pos));
1618:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** }
1619:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** 
1620:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** 
1621:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** /**
1622:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****   \brief   Enable External Interrupt
1623:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****   \details Enables a device-specific interrupt in the NVIC interrupt controller.
1624:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****   \param [in]      IRQn  External interrupt number. Value cannot be negative.
1625:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****  */
1626:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** __STATIC_INLINE void NVIC_EnableIRQ(IRQn_Type IRQn)
1627:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** {
1628:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****   NVIC->ISER[(((uint32_t)(int32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)(int32_t)IRQn) & 0
1629:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** }
1630:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** 
1631:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** 
1632:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** /**
1633:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****   \brief   Disable External Interrupt
1634:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****   \details Disables a device-specific interrupt in the NVIC interrupt controller.
1635:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****   \param [in]      IRQn  External interrupt number. Value cannot be negative.
1636:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****  */
1637:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** __STATIC_INLINE void NVIC_DisableIRQ(IRQn_Type IRQn)
1638:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** {
1639:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****   NVIC->ICER[(((uint32_t)(int32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)(int32_t)IRQn) & 0
1640:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** }
1641:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** 
1642:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** 
1643:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** /**
1644:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****   \brief   Get Pending Interrupt
1645:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****   \details Reads the pending register in the NVIC and returns the pending bit for the specified int
1646:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****   \param [in]      IRQn  Interrupt number.
1647:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****   \return             0  Interrupt status is not pending.
1648:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****   \return             1  Interrupt status is pending.
1649:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****  */
1650:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** __STATIC_INLINE uint32_t NVIC_GetPendingIRQ(IRQn_Type IRQn)
1651:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** {
1652:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****   return((uint32_t)(((NVIC->ISPR[(((uint32_t)(int32_t)IRQn) >> 5UL)] & (1UL << (((uint32_t)(int32_t
1653:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** }
1654:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** 
1655:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** 
1656:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** /**
1657:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****   \brief   Set Pending Interrupt
1658:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****   \details Sets the pending bit of an external interrupt.
1659:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****   \param [in]      IRQn  Interrupt number. Value cannot be negative.
1660:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****  */
1661:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** __STATIC_INLINE void NVIC_SetPendingIRQ(IRQn_Type IRQn)
1662:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** {
1663:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****   NVIC->ISPR[(((uint32_t)(int32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)(int32_t)IRQn) & 0
1664:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** }
1665:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** 
1666:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** 
1667:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** /**
1668:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****   \brief   Clear Pending Interrupt
1669:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****   \details Clears the pending bit of an external interrupt.
1670:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****   \param [in]      IRQn  External interrupt number. Value cannot be negative.
1671:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****  */
1672:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** __STATIC_INLINE void NVIC_ClearPendingIRQ(IRQn_Type IRQn)
1673:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** {
1674:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****   NVIC->ICPR[(((uint32_t)(int32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)(int32_t)IRQn) & 0
1675:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** }
1676:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** 
1677:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** 
1678:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** /**
1679:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****   \brief   Get Active Interrupt
1680:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****   \details Reads the active register in NVIC and returns the active bit.
1681:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****   \param [in]      IRQn  Interrupt number.
1682:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****   \return             0  Interrupt status is not active.
1683:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****   \return             1  Interrupt status is active.
1684:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****  */
1685:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** __STATIC_INLINE uint32_t NVIC_GetActive(IRQn_Type IRQn)
1686:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** {
1687:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****   return((uint32_t)(((NVIC->IABR[(((uint32_t)(int32_t)IRQn) >> 5UL)] & (1UL << (((uint32_t)(int32_t
1688:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** }
1689:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** 
1690:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** 
1691:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** /**
1692:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****   \brief   Set Interrupt Priority
1693:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****   \details Sets the priority of an interrupt.
1694:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****   \note    The priority cannot be set for every core interrupt.
1695:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****   \param [in]      IRQn  Interrupt number.
1696:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****   \param [in]  priority  Priority to set.
1697:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****  */
1698:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** __STATIC_INLINE void NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
1699:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** {
1700:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****   if ((int32_t)(IRQn) < 0)
1701:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****   {
1702:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****     SCB->SHP[(((uint32_t)(int32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BI
1703:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****   }
1704:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****   else
1705:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****   {
1706:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****     NVIC->IP[((uint32_t)(int32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BI
1707:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****   }
1708:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** }
1709:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** 
1710:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** 
1711:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** /**
1712:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****   \brief   Get Interrupt Priority
1713:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****   \details Reads the priority of an interrupt.
1714:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****            The interrupt number can be positive to specify an external (device specific) interrupt,
1715:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****            or negative to specify an internal (core) interrupt.
1716:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****   \param [in]   IRQn  Interrupt number.
1717:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****   \return             Interrupt Priority.
1718:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****                       Value is aligned automatically to the implemented priority bits of the microc
1719:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****  */
1720:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** __STATIC_INLINE uint32_t NVIC_GetPriority(IRQn_Type IRQn)
1721:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** {
1722:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** 
1723:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****   if ((int32_t)(IRQn) < 0)
1724:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****   {
1725:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****     return(((uint32_t)SCB->SHP[(((uint32_t)(int32_t)IRQn) & 0xFUL)-4UL] >> (8U - __NVIC_PRIO_BITS))
1726:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****   }
1727:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****   else
1728:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****   {
1729:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****     return(((uint32_t)NVIC->IP[((uint32_t)(int32_t)IRQn)]               >> (8U - __NVIC_PRIO_BITS))
1730:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****   }
1731:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** }
1732:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** 
1733:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** 
1734:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** /**
1735:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****   \brief   Encode Priority
1736:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****   \details Encodes the priority for an interrupt with the given priority group,
1737:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****            preemptive priority value, and subpriority value.
1738:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****            In case of a conflict between priority grouping and available
1739:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****            priority bits (__NVIC_PRIO_BITS), the smallest possible priority group is set.
1740:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****   \param [in]     PriorityGroup  Used priority group.
1741:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****   \param [in]   PreemptPriority  Preemptive priority value (starting from 0).
1742:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****   \param [in]       SubPriority  Subpriority value (starting from 0).
1743:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****   \return                        Encoded priority. Value can be used in the function \ref NVIC_SetP
1744:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****  */
1745:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** __STATIC_INLINE uint32_t NVIC_EncodePriority (uint32_t PriorityGroup, uint32_t PreemptPriority, uin
1746:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** {
1747:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****   uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);   /* only values 0..7 are used   
1748:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****   uint32_t PreemptPriorityBits;
1749:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****   uint32_t SubPriorityBits;
1750:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** 
1751:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****   PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NV
1752:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****   SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint
1753:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** 
1754:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****   return (
1755:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****            ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits
1756:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****            ((SubPriority     & (uint32_t)((1UL << (SubPriorityBits    )) - 1UL)))
1757:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****          );
1758:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** }
1759:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** 
1760:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** 
1761:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** /**
1762:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****   \brief   Decode Priority
1763:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****   \details Decodes an interrupt priority value with a given priority group to
1764:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****            preemptive priority value and subpriority value.
1765:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****            In case of a conflict between priority grouping and available
1766:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****            priority bits (__NVIC_PRIO_BITS) the smallest possible priority group is set.
1767:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****   \param [in]         Priority   Priority value, which can be retrieved with the function \ref NVIC
1768:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****   \param [in]     PriorityGroup  Used priority group.
1769:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****   \param [out] pPreemptPriority  Preemptive priority value (starting from 0).
1770:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****   \param [out]     pSubPriority  Subpriority value (starting from 0).
1771:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****  */
1772:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** __STATIC_INLINE void NVIC_DecodePriority (uint32_t Priority, uint32_t PriorityGroup, uint32_t* cons
1773:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** {
1774:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****   uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);   /* only values 0..7 are used   
1775:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****   uint32_t PreemptPriorityBits;
1776:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****   uint32_t SubPriorityBits;
1777:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** 
1778:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****   PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NV
1779:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****   SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint
1780:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** 
1781:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****   *pPreemptPriority = (Priority >> SubPriorityBits) & (uint32_t)((1UL << (PreemptPriorityBits)) - 1
1782:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****   *pSubPriority     = (Priority                   ) & (uint32_t)((1UL << (SubPriorityBits    )) - 1
1783:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** }
1784:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** 
1785:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** 
1786:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** /**
1787:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****   \brief   System Reset
1788:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****   \details Initiates a system reset request to reset the MCU.
1789:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****  */
1790:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** __STATIC_INLINE void NVIC_SystemReset(void)
1791:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** {
  29              		.loc 2 1791 1 view -0
  30              		.cfi_startproc
  31              		@ Volatile: function does not return.
  32              		@ args = 0, pretend = 0, frame = 0
  33              		@ frame_needed = 0, uses_anonymous_args = 0
  34              		@ link register save eliminated.
1792:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****   __DSB();                                                          /* Ensure all outstanding memor
  35              		.loc 2 1792 3 view .LVU1
  36              	.LBB8:
  37              	.LBI8:
  38              		.file 3 "c:/project/stm32fx_iolib/stm32fxxx/cmsis/cmsis_gcc.h"
   1:c:/project/stm32fx_iolib/stm32fxxx/cmsis\cmsis_gcc.h **** /**************************************************************************//**
   2:c:/project/stm32fx_iolib/stm32fxxx/cmsis\cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:c:/project/stm32fx_iolib/stm32fxxx/cmsis\cmsis_gcc.h ****  * @brief    CMSIS Cortex-M Core Function/Instruction Header File
   4:c:/project/stm32fx_iolib/stm32fxxx/cmsis\cmsis_gcc.h ****  * @version  V4.30
   5:c:/project/stm32fx_iolib/stm32fxxx/cmsis\cmsis_gcc.h ****  * @date     20. October 2015
   6:c:/project/stm32fx_iolib/stm32fxxx/cmsis\cmsis_gcc.h ****  ******************************************************************************/
   7:c:/project/stm32fx_iolib/stm32fxxx/cmsis\cmsis_gcc.h **** /* Copyright (c) 2009 - 2015 ARM LIMITED
   8:c:/project/stm32fx_iolib/stm32fxxx/cmsis\cmsis_gcc.h **** 
   9:c:/project/stm32fx_iolib/stm32fxxx/cmsis\cmsis_gcc.h ****    All rights reserved.
  10:c:/project/stm32fx_iolib/stm32fxxx/cmsis\cmsis_gcc.h ****    Redistribution and use in source and binary forms, with or without
  11:c:/project/stm32fx_iolib/stm32fxxx/cmsis\cmsis_gcc.h ****    modification, are permitted provided that the following conditions are met:
  12:c:/project/stm32fx_iolib/stm32fxxx/cmsis\cmsis_gcc.h ****    - Redistributions of source code must retain the above copyright
  13:c:/project/stm32fx_iolib/stm32fxxx/cmsis\cmsis_gcc.h ****      notice, this list of conditions and the following disclaimer.
  14:c:/project/stm32fx_iolib/stm32fxxx/cmsis\cmsis_gcc.h ****    - Redistributions in binary form must reproduce the above copyright
  15:c:/project/stm32fx_iolib/stm32fxxx/cmsis\cmsis_gcc.h ****      notice, this list of conditions and the following disclaimer in the
  16:c:/project/stm32fx_iolib/stm32fxxx/cmsis\cmsis_gcc.h ****      documentation and/or other materials provided with the distribution.
  17:c:/project/stm32fx_iolib/stm32fxxx/cmsis\cmsis_gcc.h ****    - Neither the name of ARM nor the names of its contributors may be used
  18:c:/project/stm32fx_iolib/stm32fxxx/cmsis\cmsis_gcc.h ****      to endorse or promote products derived from this software without
  19:c:/project/stm32fx_iolib/stm32fxxx/cmsis\cmsis_gcc.h ****      specific prior written permission.
  20:c:/project/stm32fx_iolib/stm32fxxx/cmsis\cmsis_gcc.h ****    *
  21:c:/project/stm32fx_iolib/stm32fxxx/cmsis\cmsis_gcc.h ****    THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  22:c:/project/stm32fx_iolib/stm32fxxx/cmsis\cmsis_gcc.h ****    AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  23:c:/project/stm32fx_iolib/stm32fxxx/cmsis\cmsis_gcc.h ****    IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
  24:c:/project/stm32fx_iolib/stm32fxxx/cmsis\cmsis_gcc.h ****    ARE DISCLAIMED. IN NO EVENT SHALL COPYRIGHT HOLDERS AND CONTRIBUTORS BE
  25:c:/project/stm32fx_iolib/stm32fxxx/cmsis\cmsis_gcc.h ****    LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
  26:c:/project/stm32fx_iolib/stm32fxxx/cmsis\cmsis_gcc.h ****    CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
  27:c:/project/stm32fx_iolib/stm32fxxx/cmsis\cmsis_gcc.h ****    SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
  28:c:/project/stm32fx_iolib/stm32fxxx/cmsis\cmsis_gcc.h ****    INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
  29:c:/project/stm32fx_iolib/stm32fxxx/cmsis\cmsis_gcc.h ****    CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
  30:c:/project/stm32fx_iolib/stm32fxxx/cmsis\cmsis_gcc.h ****    ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  31:c:/project/stm32fx_iolib/stm32fxxx/cmsis\cmsis_gcc.h ****    POSSIBILITY OF SUCH DAMAGE.
  32:c:/project/stm32fx_iolib/stm32fxxx/cmsis\cmsis_gcc.h ****    ---------------------------------------------------------------------------*/
  33:c:/project/stm32fx_iolib/stm32fxxx/cmsis\cmsis_gcc.h **** 
  34:c:/project/stm32fx_iolib/stm32fxxx/cmsis\cmsis_gcc.h **** 
  35:c:/project/stm32fx_iolib/stm32fxxx/cmsis\cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  36:c:/project/stm32fx_iolib/stm32fxxx/cmsis\cmsis_gcc.h **** #define __CMSIS_GCC_H
  37:c:/project/stm32fx_iolib/stm32fxxx/cmsis\cmsis_gcc.h **** 
  38:c:/project/stm32fx_iolib/stm32fxxx/cmsis\cmsis_gcc.h **** /* ignore some GCC warnings */
  39:c:/project/stm32fx_iolib/stm32fxxx/cmsis\cmsis_gcc.h **** #if defined ( __GNUC__ )
  40:c:/project/stm32fx_iolib/stm32fxxx/cmsis\cmsis_gcc.h **** #pragma GCC diagnostic push
  41:c:/project/stm32fx_iolib/stm32fxxx/cmsis\cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  42:c:/project/stm32fx_iolib/stm32fxxx/cmsis\cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  43:c:/project/stm32fx_iolib/stm32fxxx/cmsis\cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  44:c:/project/stm32fx_iolib/stm32fxxx/cmsis\cmsis_gcc.h **** #endif
  45:c:/project/stm32fx_iolib/stm32fxxx/cmsis\cmsis_gcc.h **** 
  46:c:/project/stm32fx_iolib/stm32fxxx/cmsis\cmsis_gcc.h **** 
  47:c:/project/stm32fx_iolib/stm32fxxx/cmsis\cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
  48:c:/project/stm32fx_iolib/stm32fxxx/cmsis\cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
  49:c:/project/stm32fx_iolib/stm32fxxx/cmsis\cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
  50:c:/project/stm32fx_iolib/stm32fxxx/cmsis\cmsis_gcc.h ****   @{
  51:c:/project/stm32fx_iolib/stm32fxxx/cmsis\cmsis_gcc.h ****  */
  52:c:/project/stm32fx_iolib/stm32fxxx/cmsis\cmsis_gcc.h **** 
  53:c:/project/stm32fx_iolib/stm32fxxx/cmsis\cmsis_gcc.h **** /**
  54:c:/project/stm32fx_iolib/stm32fxxx/cmsis\cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
  55:c:/project/stm32fx_iolib/stm32fxxx/cmsis\cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
  56:c:/project/stm32fx_iolib/stm32fxxx/cmsis\cmsis_gcc.h ****            Can only be executed in Privileged modes.
  57:c:/project/stm32fx_iolib/stm32fxxx/cmsis\cmsis_gcc.h ****  */
  58:c:/project/stm32fx_iolib/stm32fxxx/cmsis\cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __enable_irq(void)
  59:c:/project/stm32fx_iolib/stm32fxxx/cmsis\cmsis_gcc.h **** {
  60:c:/project/stm32fx_iolib/stm32fxxx/cmsis\cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
  61:c:/project/stm32fx_iolib/stm32fxxx/cmsis\cmsis_gcc.h **** }
  62:c:/project/stm32fx_iolib/stm32fxxx/cmsis\cmsis_gcc.h **** 
  63:c:/project/stm32fx_iolib/stm32fxxx/cmsis\cmsis_gcc.h **** 
  64:c:/project/stm32fx_iolib/stm32fxxx/cmsis\cmsis_gcc.h **** /**
  65:c:/project/stm32fx_iolib/stm32fxxx/cmsis\cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
  66:c:/project/stm32fx_iolib/stm32fxxx/cmsis\cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
  67:c:/project/stm32fx_iolib/stm32fxxx/cmsis\cmsis_gcc.h ****   Can only be executed in Privileged modes.
  68:c:/project/stm32fx_iolib/stm32fxxx/cmsis\cmsis_gcc.h ****  */
  69:c:/project/stm32fx_iolib/stm32fxxx/cmsis\cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __disable_irq(void)
  70:c:/project/stm32fx_iolib/stm32fxxx/cmsis\cmsis_gcc.h **** {
  71:c:/project/stm32fx_iolib/stm32fxxx/cmsis\cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
  72:c:/project/stm32fx_iolib/stm32fxxx/cmsis\cmsis_gcc.h **** }
  73:c:/project/stm32fx_iolib/stm32fxxx/cmsis\cmsis_gcc.h **** 
  74:c:/project/stm32fx_iolib/stm32fxxx/cmsis\cmsis_gcc.h **** 
  75:c:/project/stm32fx_iolib/stm32fxxx/cmsis\cmsis_gcc.h **** /**
  76:c:/project/stm32fx_iolib/stm32fxxx/cmsis\cmsis_gcc.h ****   \brief   Get Control Register
  77:c:/project/stm32fx_iolib/stm32fxxx/cmsis\cmsis_gcc.h ****   \details Returns the content of the Control Register.
  78:c:/project/stm32fx_iolib/stm32fxxx/cmsis\cmsis_gcc.h ****   \return               Control Register value
  79:c:/project/stm32fx_iolib/stm32fxxx/cmsis\cmsis_gcc.h ****  */
  80:c:/project/stm32fx_iolib/stm32fxxx/cmsis\cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_CONTROL(void)
  81:c:/project/stm32fx_iolib/stm32fxxx/cmsis\cmsis_gcc.h **** {
  82:c:/project/stm32fx_iolib/stm32fxxx/cmsis\cmsis_gcc.h ****   uint32_t result;
  83:c:/project/stm32fx_iolib/stm32fxxx/cmsis\cmsis_gcc.h **** 
  84:c:/project/stm32fx_iolib/stm32fxxx/cmsis\cmsis_gcc.h ****   __ASM volatile ("MRS %0, control" : "=r" (result) );
  85:c:/project/stm32fx_iolib/stm32fxxx/cmsis\cmsis_gcc.h ****   return(result);
  86:c:/project/stm32fx_iolib/stm32fxxx/cmsis\cmsis_gcc.h **** }
  87:c:/project/stm32fx_iolib/stm32fxxx/cmsis\cmsis_gcc.h **** 
  88:c:/project/stm32fx_iolib/stm32fxxx/cmsis\cmsis_gcc.h **** 
  89:c:/project/stm32fx_iolib/stm32fxxx/cmsis\cmsis_gcc.h **** /**
  90:c:/project/stm32fx_iolib/stm32fxxx/cmsis\cmsis_gcc.h ****   \brief   Set Control Register
  91:c:/project/stm32fx_iolib/stm32fxxx/cmsis\cmsis_gcc.h ****   \details Writes the given value to the Control Register.
  92:c:/project/stm32fx_iolib/stm32fxxx/cmsis\cmsis_gcc.h ****   \param [in]    control  Control Register value to set
  93:c:/project/stm32fx_iolib/stm32fxxx/cmsis\cmsis_gcc.h ****  */
  94:c:/project/stm32fx_iolib/stm32fxxx/cmsis\cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __set_CONTROL(uint32_t control)
  95:c:/project/stm32fx_iolib/stm32fxxx/cmsis\cmsis_gcc.h **** {
  96:c:/project/stm32fx_iolib/stm32fxxx/cmsis\cmsis_gcc.h ****   __ASM volatile ("MSR control, %0" : : "r" (control) : "memory");
  97:c:/project/stm32fx_iolib/stm32fxxx/cmsis\cmsis_gcc.h **** }
  98:c:/project/stm32fx_iolib/stm32fxxx/cmsis\cmsis_gcc.h **** 
  99:c:/project/stm32fx_iolib/stm32fxxx/cmsis\cmsis_gcc.h **** 
 100:c:/project/stm32fx_iolib/stm32fxxx/cmsis\cmsis_gcc.h **** /**
 101:c:/project/stm32fx_iolib/stm32fxxx/cmsis\cmsis_gcc.h ****   \brief   Get IPSR Register
 102:c:/project/stm32fx_iolib/stm32fxxx/cmsis\cmsis_gcc.h ****   \details Returns the content of the IPSR Register.
 103:c:/project/stm32fx_iolib/stm32fxxx/cmsis\cmsis_gcc.h ****   \return               IPSR Register value
 104:c:/project/stm32fx_iolib/stm32fxxx/cmsis\cmsis_gcc.h ****  */
 105:c:/project/stm32fx_iolib/stm32fxxx/cmsis\cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_IPSR(void)
 106:c:/project/stm32fx_iolib/stm32fxxx/cmsis\cmsis_gcc.h **** {
 107:c:/project/stm32fx_iolib/stm32fxxx/cmsis\cmsis_gcc.h ****   uint32_t result;
 108:c:/project/stm32fx_iolib/stm32fxxx/cmsis\cmsis_gcc.h **** 
 109:c:/project/stm32fx_iolib/stm32fxxx/cmsis\cmsis_gcc.h ****   __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 110:c:/project/stm32fx_iolib/stm32fxxx/cmsis\cmsis_gcc.h ****   return(result);
 111:c:/project/stm32fx_iolib/stm32fxxx/cmsis\cmsis_gcc.h **** }
 112:c:/project/stm32fx_iolib/stm32fxxx/cmsis\cmsis_gcc.h **** 
 113:c:/project/stm32fx_iolib/stm32fxxx/cmsis\cmsis_gcc.h **** 
 114:c:/project/stm32fx_iolib/stm32fxxx/cmsis\cmsis_gcc.h **** /**
 115:c:/project/stm32fx_iolib/stm32fxxx/cmsis\cmsis_gcc.h ****   \brief   Get APSR Register
 116:c:/project/stm32fx_iolib/stm32fxxx/cmsis\cmsis_gcc.h ****   \details Returns the content of the APSR Register.
 117:c:/project/stm32fx_iolib/stm32fxxx/cmsis\cmsis_gcc.h ****   \return               APSR Register value
 118:c:/project/stm32fx_iolib/stm32fxxx/cmsis\cmsis_gcc.h ****  */
 119:c:/project/stm32fx_iolib/stm32fxxx/cmsis\cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_APSR(void)
 120:c:/project/stm32fx_iolib/stm32fxxx/cmsis\cmsis_gcc.h **** {
 121:c:/project/stm32fx_iolib/stm32fxxx/cmsis\cmsis_gcc.h ****   uint32_t result;
 122:c:/project/stm32fx_iolib/stm32fxxx/cmsis\cmsis_gcc.h **** 
 123:c:/project/stm32fx_iolib/stm32fxxx/cmsis\cmsis_gcc.h ****   __ASM volatile ("MRS %0, apsr" : "=r" (result) );
 124:c:/project/stm32fx_iolib/stm32fxxx/cmsis\cmsis_gcc.h ****   return(result);
 125:c:/project/stm32fx_iolib/stm32fxxx/cmsis\cmsis_gcc.h **** }
 126:c:/project/stm32fx_iolib/stm32fxxx/cmsis\cmsis_gcc.h **** 
 127:c:/project/stm32fx_iolib/stm32fxxx/cmsis\cmsis_gcc.h **** 
 128:c:/project/stm32fx_iolib/stm32fxxx/cmsis\cmsis_gcc.h **** /**
 129:c:/project/stm32fx_iolib/stm32fxxx/cmsis\cmsis_gcc.h ****   \brief   Get xPSR Register
 130:c:/project/stm32fx_iolib/stm32fxxx/cmsis\cmsis_gcc.h ****   \details Returns the content of the xPSR Register.
 131:c:/project/stm32fx_iolib/stm32fxxx/cmsis\cmsis_gcc.h **** 
 132:c:/project/stm32fx_iolib/stm32fxxx/cmsis\cmsis_gcc.h ****     \return               xPSR Register value
 133:c:/project/stm32fx_iolib/stm32fxxx/cmsis\cmsis_gcc.h ****  */
 134:c:/project/stm32fx_iolib/stm32fxxx/cmsis\cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_xPSR(void)
 135:c:/project/stm32fx_iolib/stm32fxxx/cmsis\cmsis_gcc.h **** {
 136:c:/project/stm32fx_iolib/stm32fxxx/cmsis\cmsis_gcc.h ****   uint32_t result;
 137:c:/project/stm32fx_iolib/stm32fxxx/cmsis\cmsis_gcc.h **** 
 138:c:/project/stm32fx_iolib/stm32fxxx/cmsis\cmsis_gcc.h ****   __ASM volatile ("MRS %0, xpsr" : "=r" (result) );
 139:c:/project/stm32fx_iolib/stm32fxxx/cmsis\cmsis_gcc.h ****   return(result);
 140:c:/project/stm32fx_iolib/stm32fxxx/cmsis\cmsis_gcc.h **** }
 141:c:/project/stm32fx_iolib/stm32fxxx/cmsis\cmsis_gcc.h **** 
 142:c:/project/stm32fx_iolib/stm32fxxx/cmsis\cmsis_gcc.h **** 
 143:c:/project/stm32fx_iolib/stm32fxxx/cmsis\cmsis_gcc.h **** /**
 144:c:/project/stm32fx_iolib/stm32fxxx/cmsis\cmsis_gcc.h ****   \brief   Get Process Stack Pointer
 145:c:/project/stm32fx_iolib/stm32fxxx/cmsis\cmsis_gcc.h ****   \details Returns the current value of the Process Stack Pointer (PSP).
 146:c:/project/stm32fx_iolib/stm32fxxx/cmsis\cmsis_gcc.h ****   \return               PSP Register value
 147:c:/project/stm32fx_iolib/stm32fxxx/cmsis\cmsis_gcc.h ****  */
 148:c:/project/stm32fx_iolib/stm32fxxx/cmsis\cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_PSP(void)
 149:c:/project/stm32fx_iolib/stm32fxxx/cmsis\cmsis_gcc.h **** {
 150:c:/project/stm32fx_iolib/stm32fxxx/cmsis\cmsis_gcc.h ****   register uint32_t result;
 151:c:/project/stm32fx_iolib/stm32fxxx/cmsis\cmsis_gcc.h **** 
 152:c:/project/stm32fx_iolib/stm32fxxx/cmsis\cmsis_gcc.h ****   __ASM volatile ("MRS %0, psp\n"  : "=r" (result) );
 153:c:/project/stm32fx_iolib/stm32fxxx/cmsis\cmsis_gcc.h ****   return(result);
 154:c:/project/stm32fx_iolib/stm32fxxx/cmsis\cmsis_gcc.h **** }
 155:c:/project/stm32fx_iolib/stm32fxxx/cmsis\cmsis_gcc.h **** 
 156:c:/project/stm32fx_iolib/stm32fxxx/cmsis\cmsis_gcc.h **** 
 157:c:/project/stm32fx_iolib/stm32fxxx/cmsis\cmsis_gcc.h **** /**
 158:c:/project/stm32fx_iolib/stm32fxxx/cmsis\cmsis_gcc.h ****   \brief   Set Process Stack Pointer
 159:c:/project/stm32fx_iolib/stm32fxxx/cmsis\cmsis_gcc.h ****   \details Assigns the given value to the Process Stack Pointer (PSP).
 160:c:/project/stm32fx_iolib/stm32fxxx/cmsis\cmsis_gcc.h ****   \param [in]    topOfProcStack  Process Stack Pointer value to set
 161:c:/project/stm32fx_iolib/stm32fxxx/cmsis\cmsis_gcc.h ****  */
 162:c:/project/stm32fx_iolib/stm32fxxx/cmsis\cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __set_PSP(uint32_t topOfProcStack)
 163:c:/project/stm32fx_iolib/stm32fxxx/cmsis\cmsis_gcc.h **** {
 164:c:/project/stm32fx_iolib/stm32fxxx/cmsis\cmsis_gcc.h ****   //__ASM volatile ("MSR psp, %0\n" : : "r" (topOfProcStack) : "sp");
 165:c:/project/stm32fx_iolib/stm32fxxx/cmsis\cmsis_gcc.h ****   __ASM volatile ("MSR psp, %0\n" : : "r" (topOfProcStack) : );  
 166:c:/project/stm32fx_iolib/stm32fxxx/cmsis\cmsis_gcc.h **** }
 167:c:/project/stm32fx_iolib/stm32fxxx/cmsis\cmsis_gcc.h **** 
 168:c:/project/stm32fx_iolib/stm32fxxx/cmsis\cmsis_gcc.h **** 
 169:c:/project/stm32fx_iolib/stm32fxxx/cmsis\cmsis_gcc.h **** /**
 170:c:/project/stm32fx_iolib/stm32fxxx/cmsis\cmsis_gcc.h ****   \brief   Get Main Stack Pointer
 171:c:/project/stm32fx_iolib/stm32fxxx/cmsis\cmsis_gcc.h ****   \details Returns the current value of the Main Stack Pointer (MSP).
 172:c:/project/stm32fx_iolib/stm32fxxx/cmsis\cmsis_gcc.h ****   \return               MSP Register value
 173:c:/project/stm32fx_iolib/stm32fxxx/cmsis\cmsis_gcc.h ****  */
 174:c:/project/stm32fx_iolib/stm32fxxx/cmsis\cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_MSP(void)
 175:c:/project/stm32fx_iolib/stm32fxxx/cmsis\cmsis_gcc.h **** {
 176:c:/project/stm32fx_iolib/stm32fxxx/cmsis\cmsis_gcc.h ****   register uint32_t result;
 177:c:/project/stm32fx_iolib/stm32fxxx/cmsis\cmsis_gcc.h **** 
 178:c:/project/stm32fx_iolib/stm32fxxx/cmsis\cmsis_gcc.h ****   __ASM volatile ("MRS %0, msp\n" : "=r" (result) );
 179:c:/project/stm32fx_iolib/stm32fxxx/cmsis\cmsis_gcc.h ****   return(result);
 180:c:/project/stm32fx_iolib/stm32fxxx/cmsis\cmsis_gcc.h **** }
 181:c:/project/stm32fx_iolib/stm32fxxx/cmsis\cmsis_gcc.h **** 
 182:c:/project/stm32fx_iolib/stm32fxxx/cmsis\cmsis_gcc.h **** 
 183:c:/project/stm32fx_iolib/stm32fxxx/cmsis\cmsis_gcc.h **** /**
 184:c:/project/stm32fx_iolib/stm32fxxx/cmsis\cmsis_gcc.h ****   \brief   Set Main Stack Pointer
 185:c:/project/stm32fx_iolib/stm32fxxx/cmsis\cmsis_gcc.h ****   \details Assigns the given value to the Main Stack Pointer (MSP).
 186:c:/project/stm32fx_iolib/stm32fxxx/cmsis\cmsis_gcc.h **** 
 187:c:/project/stm32fx_iolib/stm32fxxx/cmsis\cmsis_gcc.h ****     \param [in]    topOfMainStack  Main Stack Pointer value to set
 188:c:/project/stm32fx_iolib/stm32fxxx/cmsis\cmsis_gcc.h ****  */
 189:c:/project/stm32fx_iolib/stm32fxxx/cmsis\cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __set_MSP(uint32_t topOfMainStack)
 190:c:/project/stm32fx_iolib/stm32fxxx/cmsis\cmsis_gcc.h **** {
 191:c:/project/stm32fx_iolib/stm32fxxx/cmsis\cmsis_gcc.h ****   //__ASM volatile ("MSR msp, %0\n" : : "r" (topOfMainStack) : "sp");
 192:c:/project/stm32fx_iolib/stm32fxxx/cmsis\cmsis_gcc.h ****   __ASM volatile ("MSR msp, %0\n" : : "r" (topOfMainStack) : );  
 193:c:/project/stm32fx_iolib/stm32fxxx/cmsis\cmsis_gcc.h **** }
 194:c:/project/stm32fx_iolib/stm32fxxx/cmsis\cmsis_gcc.h **** 
 195:c:/project/stm32fx_iolib/stm32fxxx/cmsis\cmsis_gcc.h **** 
 196:c:/project/stm32fx_iolib/stm32fxxx/cmsis\cmsis_gcc.h **** /**
 197:c:/project/stm32fx_iolib/stm32fxxx/cmsis\cmsis_gcc.h ****   \brief   Get Priority Mask
 198:c:/project/stm32fx_iolib/stm32fxxx/cmsis\cmsis_gcc.h ****   \details Returns the current state of the priority mask bit from the Priority Mask Register.
 199:c:/project/stm32fx_iolib/stm32fxxx/cmsis\cmsis_gcc.h ****   \return               Priority Mask value
 200:c:/project/stm32fx_iolib/stm32fxxx/cmsis\cmsis_gcc.h ****  */
 201:c:/project/stm32fx_iolib/stm32fxxx/cmsis\cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_PRIMASK(void)
 202:c:/project/stm32fx_iolib/stm32fxxx/cmsis\cmsis_gcc.h **** {
 203:c:/project/stm32fx_iolib/stm32fxxx/cmsis\cmsis_gcc.h ****   uint32_t result;
 204:c:/project/stm32fx_iolib/stm32fxxx/cmsis\cmsis_gcc.h **** 
 205:c:/project/stm32fx_iolib/stm32fxxx/cmsis\cmsis_gcc.h ****   __ASM volatile ("MRS %0, primask" : "=r" (result) );
 206:c:/project/stm32fx_iolib/stm32fxxx/cmsis\cmsis_gcc.h ****   return(result);
 207:c:/project/stm32fx_iolib/stm32fxxx/cmsis\cmsis_gcc.h **** }
 208:c:/project/stm32fx_iolib/stm32fxxx/cmsis\cmsis_gcc.h **** 
 209:c:/project/stm32fx_iolib/stm32fxxx/cmsis\cmsis_gcc.h **** 
 210:c:/project/stm32fx_iolib/stm32fxxx/cmsis\cmsis_gcc.h **** /**
 211:c:/project/stm32fx_iolib/stm32fxxx/cmsis\cmsis_gcc.h ****   \brief   Set Priority Mask
 212:c:/project/stm32fx_iolib/stm32fxxx/cmsis\cmsis_gcc.h ****   \details Assigns the given value to the Priority Mask Register.
 213:c:/project/stm32fx_iolib/stm32fxxx/cmsis\cmsis_gcc.h ****   \param [in]    priMask  Priority Mask
 214:c:/project/stm32fx_iolib/stm32fxxx/cmsis\cmsis_gcc.h ****  */
 215:c:/project/stm32fx_iolib/stm32fxxx/cmsis\cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __set_PRIMASK(uint32_t priMask)
 216:c:/project/stm32fx_iolib/stm32fxxx/cmsis\cmsis_gcc.h **** {
 217:c:/project/stm32fx_iolib/stm32fxxx/cmsis\cmsis_gcc.h ****   __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
 218:c:/project/stm32fx_iolib/stm32fxxx/cmsis\cmsis_gcc.h **** }
 219:c:/project/stm32fx_iolib/stm32fxxx/cmsis\cmsis_gcc.h **** 
 220:c:/project/stm32fx_iolib/stm32fxxx/cmsis\cmsis_gcc.h **** 
 221:c:/project/stm32fx_iolib/stm32fxxx/cmsis\cmsis_gcc.h **** #if       (__CORTEX_M >= 0x03U)
 222:c:/project/stm32fx_iolib/stm32fxxx/cmsis\cmsis_gcc.h **** 
 223:c:/project/stm32fx_iolib/stm32fxxx/cmsis\cmsis_gcc.h **** /**
 224:c:/project/stm32fx_iolib/stm32fxxx/cmsis\cmsis_gcc.h ****   \brief   Enable FIQ
 225:c:/project/stm32fx_iolib/stm32fxxx/cmsis\cmsis_gcc.h ****   \details Enables FIQ interrupts by clearing the F-bit in the CPSR.
 226:c:/project/stm32fx_iolib/stm32fxxx/cmsis\cmsis_gcc.h ****            Can only be executed in Privileged modes.
 227:c:/project/stm32fx_iolib/stm32fxxx/cmsis\cmsis_gcc.h ****  */
 228:c:/project/stm32fx_iolib/stm32fxxx/cmsis\cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __enable_fault_irq(void)
 229:c:/project/stm32fx_iolib/stm32fxxx/cmsis\cmsis_gcc.h **** {
 230:c:/project/stm32fx_iolib/stm32fxxx/cmsis\cmsis_gcc.h ****   __ASM volatile ("cpsie f" : : : "memory");
 231:c:/project/stm32fx_iolib/stm32fxxx/cmsis\cmsis_gcc.h **** }
 232:c:/project/stm32fx_iolib/stm32fxxx/cmsis\cmsis_gcc.h **** 
 233:c:/project/stm32fx_iolib/stm32fxxx/cmsis\cmsis_gcc.h **** 
 234:c:/project/stm32fx_iolib/stm32fxxx/cmsis\cmsis_gcc.h **** /**
 235:c:/project/stm32fx_iolib/stm32fxxx/cmsis\cmsis_gcc.h ****   \brief   Disable FIQ
 236:c:/project/stm32fx_iolib/stm32fxxx/cmsis\cmsis_gcc.h ****   \details Disables FIQ interrupts by setting the F-bit in the CPSR.
 237:c:/project/stm32fx_iolib/stm32fxxx/cmsis\cmsis_gcc.h ****            Can only be executed in Privileged modes.
 238:c:/project/stm32fx_iolib/stm32fxxx/cmsis\cmsis_gcc.h ****  */
 239:c:/project/stm32fx_iolib/stm32fxxx/cmsis\cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __disable_fault_irq(void)
 240:c:/project/stm32fx_iolib/stm32fxxx/cmsis\cmsis_gcc.h **** {
 241:c:/project/stm32fx_iolib/stm32fxxx/cmsis\cmsis_gcc.h ****   __ASM volatile ("cpsid f" : : : "memory");
 242:c:/project/stm32fx_iolib/stm32fxxx/cmsis\cmsis_gcc.h **** }
 243:c:/project/stm32fx_iolib/stm32fxxx/cmsis\cmsis_gcc.h **** 
 244:c:/project/stm32fx_iolib/stm32fxxx/cmsis\cmsis_gcc.h **** 
 245:c:/project/stm32fx_iolib/stm32fxxx/cmsis\cmsis_gcc.h **** /**
 246:c:/project/stm32fx_iolib/stm32fxxx/cmsis\cmsis_gcc.h ****   \brief   Get Base Priority
 247:c:/project/stm32fx_iolib/stm32fxxx/cmsis\cmsis_gcc.h ****   \details Returns the current value of the Base Priority register.
 248:c:/project/stm32fx_iolib/stm32fxxx/cmsis\cmsis_gcc.h ****   \return               Base Priority register value
 249:c:/project/stm32fx_iolib/stm32fxxx/cmsis\cmsis_gcc.h ****  */
 250:c:/project/stm32fx_iolib/stm32fxxx/cmsis\cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_BASEPRI(void)
 251:c:/project/stm32fx_iolib/stm32fxxx/cmsis\cmsis_gcc.h **** {
 252:c:/project/stm32fx_iolib/stm32fxxx/cmsis\cmsis_gcc.h ****   uint32_t result;
 253:c:/project/stm32fx_iolib/stm32fxxx/cmsis\cmsis_gcc.h **** 
 254:c:/project/stm32fx_iolib/stm32fxxx/cmsis\cmsis_gcc.h ****   __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 255:c:/project/stm32fx_iolib/stm32fxxx/cmsis\cmsis_gcc.h ****   return(result);
 256:c:/project/stm32fx_iolib/stm32fxxx/cmsis\cmsis_gcc.h **** }
 257:c:/project/stm32fx_iolib/stm32fxxx/cmsis\cmsis_gcc.h **** 
 258:c:/project/stm32fx_iolib/stm32fxxx/cmsis\cmsis_gcc.h **** 
 259:c:/project/stm32fx_iolib/stm32fxxx/cmsis\cmsis_gcc.h **** /**
 260:c:/project/stm32fx_iolib/stm32fxxx/cmsis\cmsis_gcc.h ****   \brief   Set Base Priority
 261:c:/project/stm32fx_iolib/stm32fxxx/cmsis\cmsis_gcc.h ****   \details Assigns the given value to the Base Priority register.
 262:c:/project/stm32fx_iolib/stm32fxxx/cmsis\cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 263:c:/project/stm32fx_iolib/stm32fxxx/cmsis\cmsis_gcc.h ****  */
 264:c:/project/stm32fx_iolib/stm32fxxx/cmsis\cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __set_BASEPRI(uint32_t value)
 265:c:/project/stm32fx_iolib/stm32fxxx/cmsis\cmsis_gcc.h **** {
 266:c:/project/stm32fx_iolib/stm32fxxx/cmsis\cmsis_gcc.h ****   __ASM volatile ("MSR basepri, %0" : : "r" (value) : "memory");
 267:c:/project/stm32fx_iolib/stm32fxxx/cmsis\cmsis_gcc.h **** }
 268:c:/project/stm32fx_iolib/stm32fxxx/cmsis\cmsis_gcc.h **** 
 269:c:/project/stm32fx_iolib/stm32fxxx/cmsis\cmsis_gcc.h **** 
 270:c:/project/stm32fx_iolib/stm32fxxx/cmsis\cmsis_gcc.h **** /**
 271:c:/project/stm32fx_iolib/stm32fxxx/cmsis\cmsis_gcc.h ****   \brief   Set Base Priority with condition
 272:c:/project/stm32fx_iolib/stm32fxxx/cmsis\cmsis_gcc.h ****   \details Assigns the given value to the Base Priority register only if BASEPRI masking is disable
 273:c:/project/stm32fx_iolib/stm32fxxx/cmsis\cmsis_gcc.h ****            or the new value increases the BASEPRI priority level.
 274:c:/project/stm32fx_iolib/stm32fxxx/cmsis\cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 275:c:/project/stm32fx_iolib/stm32fxxx/cmsis\cmsis_gcc.h ****  */
 276:c:/project/stm32fx_iolib/stm32fxxx/cmsis\cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __set_BASEPRI_MAX(uint32_t value)
 277:c:/project/stm32fx_iolib/stm32fxxx/cmsis\cmsis_gcc.h **** {
 278:c:/project/stm32fx_iolib/stm32fxxx/cmsis\cmsis_gcc.h ****   __ASM volatile ("MSR basepri_max, %0" : : "r" (value) : "memory");
 279:c:/project/stm32fx_iolib/stm32fxxx/cmsis\cmsis_gcc.h **** }
 280:c:/project/stm32fx_iolib/stm32fxxx/cmsis\cmsis_gcc.h **** 
 281:c:/project/stm32fx_iolib/stm32fxxx/cmsis\cmsis_gcc.h **** 
 282:c:/project/stm32fx_iolib/stm32fxxx/cmsis\cmsis_gcc.h **** /**
 283:c:/project/stm32fx_iolib/stm32fxxx/cmsis\cmsis_gcc.h ****   \brief   Get Fault Mask
 284:c:/project/stm32fx_iolib/stm32fxxx/cmsis\cmsis_gcc.h ****   \details Returns the current value of the Fault Mask register.
 285:c:/project/stm32fx_iolib/stm32fxxx/cmsis\cmsis_gcc.h ****   \return               Fault Mask register value
 286:c:/project/stm32fx_iolib/stm32fxxx/cmsis\cmsis_gcc.h ****  */
 287:c:/project/stm32fx_iolib/stm32fxxx/cmsis\cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_FAULTMASK(void)
 288:c:/project/stm32fx_iolib/stm32fxxx/cmsis\cmsis_gcc.h **** {
 289:c:/project/stm32fx_iolib/stm32fxxx/cmsis\cmsis_gcc.h ****   uint32_t result;
 290:c:/project/stm32fx_iolib/stm32fxxx/cmsis\cmsis_gcc.h **** 
 291:c:/project/stm32fx_iolib/stm32fxxx/cmsis\cmsis_gcc.h ****   __ASM volatile ("MRS %0, faultmask" : "=r" (result) );
 292:c:/project/stm32fx_iolib/stm32fxxx/cmsis\cmsis_gcc.h ****   return(result);
 293:c:/project/stm32fx_iolib/stm32fxxx/cmsis\cmsis_gcc.h **** }
 294:c:/project/stm32fx_iolib/stm32fxxx/cmsis\cmsis_gcc.h **** 
 295:c:/project/stm32fx_iolib/stm32fxxx/cmsis\cmsis_gcc.h **** 
 296:c:/project/stm32fx_iolib/stm32fxxx/cmsis\cmsis_gcc.h **** /**
 297:c:/project/stm32fx_iolib/stm32fxxx/cmsis\cmsis_gcc.h ****   \brief   Set Fault Mask
 298:c:/project/stm32fx_iolib/stm32fxxx/cmsis\cmsis_gcc.h ****   \details Assigns the given value to the Fault Mask register.
 299:c:/project/stm32fx_iolib/stm32fxxx/cmsis\cmsis_gcc.h ****   \param [in]    faultMask  Fault Mask value to set
 300:c:/project/stm32fx_iolib/stm32fxxx/cmsis\cmsis_gcc.h ****  */
 301:c:/project/stm32fx_iolib/stm32fxxx/cmsis\cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __set_FAULTMASK(uint32_t faultMask)
 302:c:/project/stm32fx_iolib/stm32fxxx/cmsis\cmsis_gcc.h **** {
 303:c:/project/stm32fx_iolib/stm32fxxx/cmsis\cmsis_gcc.h ****   __ASM volatile ("MSR faultmask, %0" : : "r" (faultMask) : "memory");
 304:c:/project/stm32fx_iolib/stm32fxxx/cmsis\cmsis_gcc.h **** }
 305:c:/project/stm32fx_iolib/stm32fxxx/cmsis\cmsis_gcc.h **** 
 306:c:/project/stm32fx_iolib/stm32fxxx/cmsis\cmsis_gcc.h **** #endif /* (__CORTEX_M >= 0x03U) */
 307:c:/project/stm32fx_iolib/stm32fxxx/cmsis\cmsis_gcc.h **** 
 308:c:/project/stm32fx_iolib/stm32fxxx/cmsis\cmsis_gcc.h **** 
 309:c:/project/stm32fx_iolib/stm32fxxx/cmsis\cmsis_gcc.h **** #if       (__CORTEX_M == 0x04U) || (__CORTEX_M == 0x07U)
 310:c:/project/stm32fx_iolib/stm32fxxx/cmsis\cmsis_gcc.h **** 
 311:c:/project/stm32fx_iolib/stm32fxxx/cmsis\cmsis_gcc.h **** /**
 312:c:/project/stm32fx_iolib/stm32fxxx/cmsis\cmsis_gcc.h ****   \brief   Get FPSCR
 313:c:/project/stm32fx_iolib/stm32fxxx/cmsis\cmsis_gcc.h ****   \details Returns the current value of the Floating Point Status/Control register.
 314:c:/project/stm32fx_iolib/stm32fxxx/cmsis\cmsis_gcc.h ****   \return               Floating Point Status/Control register value
 315:c:/project/stm32fx_iolib/stm32fxxx/cmsis\cmsis_gcc.h ****  */
 316:c:/project/stm32fx_iolib/stm32fxxx/cmsis\cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_FPSCR(void)
 317:c:/project/stm32fx_iolib/stm32fxxx/cmsis\cmsis_gcc.h **** {
 318:c:/project/stm32fx_iolib/stm32fxxx/cmsis\cmsis_gcc.h **** #if (__FPU_PRESENT == 1U) && (__FPU_USED == 1U)
 319:c:/project/stm32fx_iolib/stm32fxxx/cmsis\cmsis_gcc.h ****   uint32_t result;
 320:c:/project/stm32fx_iolib/stm32fxxx/cmsis\cmsis_gcc.h **** 
 321:c:/project/stm32fx_iolib/stm32fxxx/cmsis\cmsis_gcc.h ****   /* Empty asm statement works as a scheduling barrier */
 322:c:/project/stm32fx_iolib/stm32fxxx/cmsis\cmsis_gcc.h ****   __ASM volatile ("");
 323:c:/project/stm32fx_iolib/stm32fxxx/cmsis\cmsis_gcc.h ****   __ASM volatile ("VMRS %0, fpscr" : "=r" (result) );
 324:c:/project/stm32fx_iolib/stm32fxxx/cmsis\cmsis_gcc.h ****   __ASM volatile ("");
 325:c:/project/stm32fx_iolib/stm32fxxx/cmsis\cmsis_gcc.h ****   return(result);
 326:c:/project/stm32fx_iolib/stm32fxxx/cmsis\cmsis_gcc.h **** #else
 327:c:/project/stm32fx_iolib/stm32fxxx/cmsis\cmsis_gcc.h ****    return(0);
 328:c:/project/stm32fx_iolib/stm32fxxx/cmsis\cmsis_gcc.h **** #endif
 329:c:/project/stm32fx_iolib/stm32fxxx/cmsis\cmsis_gcc.h **** }
 330:c:/project/stm32fx_iolib/stm32fxxx/cmsis\cmsis_gcc.h **** 
 331:c:/project/stm32fx_iolib/stm32fxxx/cmsis\cmsis_gcc.h **** 
 332:c:/project/stm32fx_iolib/stm32fxxx/cmsis\cmsis_gcc.h **** /**
 333:c:/project/stm32fx_iolib/stm32fxxx/cmsis\cmsis_gcc.h ****   \brief   Set FPSCR
 334:c:/project/stm32fx_iolib/stm32fxxx/cmsis\cmsis_gcc.h ****   \details Assigns the given value to the Floating Point Status/Control register.
 335:c:/project/stm32fx_iolib/stm32fxxx/cmsis\cmsis_gcc.h ****   \param [in]    fpscr  Floating Point Status/Control value to set
 336:c:/project/stm32fx_iolib/stm32fxxx/cmsis\cmsis_gcc.h ****  */
 337:c:/project/stm32fx_iolib/stm32fxxx/cmsis\cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __set_FPSCR(uint32_t fpscr)
 338:c:/project/stm32fx_iolib/stm32fxxx/cmsis\cmsis_gcc.h **** {
 339:c:/project/stm32fx_iolib/stm32fxxx/cmsis\cmsis_gcc.h **** #if (__FPU_PRESENT == 1U) && (__FPU_USED == 1U)
 340:c:/project/stm32fx_iolib/stm32fxxx/cmsis\cmsis_gcc.h ****   /* Empty asm statement works as a scheduling barrier */
 341:c:/project/stm32fx_iolib/stm32fxxx/cmsis\cmsis_gcc.h ****   __ASM volatile ("");
 342:c:/project/stm32fx_iolib/stm32fxxx/cmsis\cmsis_gcc.h ****   __ASM volatile ("VMSR fpscr, %0" : : "r" (fpscr) : "vfpcc");
 343:c:/project/stm32fx_iolib/stm32fxxx/cmsis\cmsis_gcc.h ****   __ASM volatile ("");
 344:c:/project/stm32fx_iolib/stm32fxxx/cmsis\cmsis_gcc.h **** #endif
 345:c:/project/stm32fx_iolib/stm32fxxx/cmsis\cmsis_gcc.h **** }
 346:c:/project/stm32fx_iolib/stm32fxxx/cmsis\cmsis_gcc.h **** 
 347:c:/project/stm32fx_iolib/stm32fxxx/cmsis\cmsis_gcc.h **** #endif /* (__CORTEX_M == 0x04U) || (__CORTEX_M == 0x07U) */
 348:c:/project/stm32fx_iolib/stm32fxxx/cmsis\cmsis_gcc.h **** 
 349:c:/project/stm32fx_iolib/stm32fxxx/cmsis\cmsis_gcc.h **** 
 350:c:/project/stm32fx_iolib/stm32fxxx/cmsis\cmsis_gcc.h **** 
 351:c:/project/stm32fx_iolib/stm32fxxx/cmsis\cmsis_gcc.h **** /*@} end of CMSIS_Core_RegAccFunctions */
 352:c:/project/stm32fx_iolib/stm32fxxx/cmsis\cmsis_gcc.h **** 
 353:c:/project/stm32fx_iolib/stm32fxxx/cmsis\cmsis_gcc.h **** 
 354:c:/project/stm32fx_iolib/stm32fxxx/cmsis\cmsis_gcc.h **** /* ##########################  Core Instruction Access  ######################### */
 355:c:/project/stm32fx_iolib/stm32fxxx/cmsis\cmsis_gcc.h **** /** \defgroup CMSIS_Core_InstructionInterface CMSIS Core Instruction Interface
 356:c:/project/stm32fx_iolib/stm32fxxx/cmsis\cmsis_gcc.h ****   Access to dedicated instructions
 357:c:/project/stm32fx_iolib/stm32fxxx/cmsis\cmsis_gcc.h ****   @{
 358:c:/project/stm32fx_iolib/stm32fxxx/cmsis\cmsis_gcc.h **** */
 359:c:/project/stm32fx_iolib/stm32fxxx/cmsis\cmsis_gcc.h **** 
 360:c:/project/stm32fx_iolib/stm32fxxx/cmsis\cmsis_gcc.h **** /* Define macros for porting to both thumb1 and thumb2.
 361:c:/project/stm32fx_iolib/stm32fxxx/cmsis\cmsis_gcc.h ****  * For thumb1, use low register (r0-r7), specified by constraint "l"
 362:c:/project/stm32fx_iolib/stm32fxxx/cmsis\cmsis_gcc.h ****  * Otherwise, use general registers, specified by constraint "r" */
 363:c:/project/stm32fx_iolib/stm32fxxx/cmsis\cmsis_gcc.h **** #if defined (__thumb__) && !defined (__thumb2__)
 364:c:/project/stm32fx_iolib/stm32fxxx/cmsis\cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=l" (r)
 365:c:/project/stm32fx_iolib/stm32fxxx/cmsis\cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "l" (r)
 366:c:/project/stm32fx_iolib/stm32fxxx/cmsis\cmsis_gcc.h **** #else
 367:c:/project/stm32fx_iolib/stm32fxxx/cmsis\cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=r" (r)
 368:c:/project/stm32fx_iolib/stm32fxxx/cmsis\cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "r" (r)
 369:c:/project/stm32fx_iolib/stm32fxxx/cmsis\cmsis_gcc.h **** #endif
 370:c:/project/stm32fx_iolib/stm32fxxx/cmsis\cmsis_gcc.h **** 
 371:c:/project/stm32fx_iolib/stm32fxxx/cmsis\cmsis_gcc.h **** /**
 372:c:/project/stm32fx_iolib/stm32fxxx/cmsis\cmsis_gcc.h ****   \brief   No Operation
 373:c:/project/stm32fx_iolib/stm32fxxx/cmsis\cmsis_gcc.h ****   \details No Operation does nothing. This instruction can be used for code alignment purposes.
 374:c:/project/stm32fx_iolib/stm32fxxx/cmsis\cmsis_gcc.h ****  */
 375:c:/project/stm32fx_iolib/stm32fxxx/cmsis\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __NOP(void)
 376:c:/project/stm32fx_iolib/stm32fxxx/cmsis\cmsis_gcc.h **** {
 377:c:/project/stm32fx_iolib/stm32fxxx/cmsis\cmsis_gcc.h ****   __ASM volatile ("nop");
 378:c:/project/stm32fx_iolib/stm32fxxx/cmsis\cmsis_gcc.h **** }
 379:c:/project/stm32fx_iolib/stm32fxxx/cmsis\cmsis_gcc.h **** 
 380:c:/project/stm32fx_iolib/stm32fxxx/cmsis\cmsis_gcc.h **** 
 381:c:/project/stm32fx_iolib/stm32fxxx/cmsis\cmsis_gcc.h **** /**
 382:c:/project/stm32fx_iolib/stm32fxxx/cmsis\cmsis_gcc.h ****   \brief   Wait For Interrupt
 383:c:/project/stm32fx_iolib/stm32fxxx/cmsis\cmsis_gcc.h ****   \details Wait For Interrupt is a hint instruction that suspends execution until one of a number o
 384:c:/project/stm32fx_iolib/stm32fxxx/cmsis\cmsis_gcc.h ****  */
 385:c:/project/stm32fx_iolib/stm32fxxx/cmsis\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __WFI(void)
 386:c:/project/stm32fx_iolib/stm32fxxx/cmsis\cmsis_gcc.h **** {
 387:c:/project/stm32fx_iolib/stm32fxxx/cmsis\cmsis_gcc.h ****   __ASM volatile ("wfi");
 388:c:/project/stm32fx_iolib/stm32fxxx/cmsis\cmsis_gcc.h **** }
 389:c:/project/stm32fx_iolib/stm32fxxx/cmsis\cmsis_gcc.h **** 
 390:c:/project/stm32fx_iolib/stm32fxxx/cmsis\cmsis_gcc.h **** 
 391:c:/project/stm32fx_iolib/stm32fxxx/cmsis\cmsis_gcc.h **** /**
 392:c:/project/stm32fx_iolib/stm32fxxx/cmsis\cmsis_gcc.h ****   \brief   Wait For Event
 393:c:/project/stm32fx_iolib/stm32fxxx/cmsis\cmsis_gcc.h ****   \details Wait For Event is a hint instruction that permits the processor to enter
 394:c:/project/stm32fx_iolib/stm32fxxx/cmsis\cmsis_gcc.h ****     a low-power state until one of a number of events occurs.
 395:c:/project/stm32fx_iolib/stm32fxxx/cmsis\cmsis_gcc.h ****  */
 396:c:/project/stm32fx_iolib/stm32fxxx/cmsis\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __WFE(void)
 397:c:/project/stm32fx_iolib/stm32fxxx/cmsis\cmsis_gcc.h **** {
 398:c:/project/stm32fx_iolib/stm32fxxx/cmsis\cmsis_gcc.h ****   __ASM volatile ("wfe");
 399:c:/project/stm32fx_iolib/stm32fxxx/cmsis\cmsis_gcc.h **** }
 400:c:/project/stm32fx_iolib/stm32fxxx/cmsis\cmsis_gcc.h **** 
 401:c:/project/stm32fx_iolib/stm32fxxx/cmsis\cmsis_gcc.h **** 
 402:c:/project/stm32fx_iolib/stm32fxxx/cmsis\cmsis_gcc.h **** /**
 403:c:/project/stm32fx_iolib/stm32fxxx/cmsis\cmsis_gcc.h ****   \brief   Send Event
 404:c:/project/stm32fx_iolib/stm32fxxx/cmsis\cmsis_gcc.h ****   \details Send Event is a hint instruction. It causes an event to be signaled to the CPU.
 405:c:/project/stm32fx_iolib/stm32fxxx/cmsis\cmsis_gcc.h ****  */
 406:c:/project/stm32fx_iolib/stm32fxxx/cmsis\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __SEV(void)
 407:c:/project/stm32fx_iolib/stm32fxxx/cmsis\cmsis_gcc.h **** {
 408:c:/project/stm32fx_iolib/stm32fxxx/cmsis\cmsis_gcc.h ****   __ASM volatile ("sev");
 409:c:/project/stm32fx_iolib/stm32fxxx/cmsis\cmsis_gcc.h **** }
 410:c:/project/stm32fx_iolib/stm32fxxx/cmsis\cmsis_gcc.h **** 
 411:c:/project/stm32fx_iolib/stm32fxxx/cmsis\cmsis_gcc.h **** 
 412:c:/project/stm32fx_iolib/stm32fxxx/cmsis\cmsis_gcc.h **** /**
 413:c:/project/stm32fx_iolib/stm32fxxx/cmsis\cmsis_gcc.h ****   \brief   Instruction Synchronization Barrier
 414:c:/project/stm32fx_iolib/stm32fxxx/cmsis\cmsis_gcc.h ****   \details Instruction Synchronization Barrier flushes the pipeline in the processor,
 415:c:/project/stm32fx_iolib/stm32fxxx/cmsis\cmsis_gcc.h ****            so that all instructions following the ISB are fetched from cache or memory,
 416:c:/project/stm32fx_iolib/stm32fxxx/cmsis\cmsis_gcc.h ****            after the instruction has been completed.
 417:c:/project/stm32fx_iolib/stm32fxxx/cmsis\cmsis_gcc.h ****  */
 418:c:/project/stm32fx_iolib/stm32fxxx/cmsis\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __ISB(void)
 419:c:/project/stm32fx_iolib/stm32fxxx/cmsis\cmsis_gcc.h **** {
 420:c:/project/stm32fx_iolib/stm32fxxx/cmsis\cmsis_gcc.h ****   __ASM volatile ("isb 0xF":::"memory");
 421:c:/project/stm32fx_iolib/stm32fxxx/cmsis\cmsis_gcc.h **** }
 422:c:/project/stm32fx_iolib/stm32fxxx/cmsis\cmsis_gcc.h **** 
 423:c:/project/stm32fx_iolib/stm32fxxx/cmsis\cmsis_gcc.h **** 
 424:c:/project/stm32fx_iolib/stm32fxxx/cmsis\cmsis_gcc.h **** /**
 425:c:/project/stm32fx_iolib/stm32fxxx/cmsis\cmsis_gcc.h ****   \brief   Data Synchronization Barrier
 426:c:/project/stm32fx_iolib/stm32fxxx/cmsis\cmsis_gcc.h ****   \details Acts as a special kind of Data Memory Barrier.
 427:c:/project/stm32fx_iolib/stm32fxxx/cmsis\cmsis_gcc.h ****            It completes when all explicit memory accesses before this instruction complete.
 428:c:/project/stm32fx_iolib/stm32fxxx/cmsis\cmsis_gcc.h ****  */
 429:c:/project/stm32fx_iolib/stm32fxxx/cmsis\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __DSB(void)
  39              		.loc 3 429 53 view .LVU2
  40              	.LBB9:
 430:c:/project/stm32fx_iolib/stm32fxxx/cmsis\cmsis_gcc.h **** {
 431:c:/project/stm32fx_iolib/stm32fxxx/cmsis\cmsis_gcc.h ****   __ASM volatile ("dsb 0xF":::"memory");
  41              		.loc 3 431 3 view .LVU3
  42              		.syntax unified
  43              	@ 431 "c:/project/stm32fx_iolib/stm32fxxx/cmsis/cmsis_gcc.h" 1
  44 0000 BFF34F8F 		dsb 0xF
  45              	@ 0 "" 2
  46              		.thumb
  47              		.syntax unified
  48              	.LBE9:
  49              	.LBE8:
1793:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****                                                                        buffered write are completed
1794:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****   SCB->AIRCR  = (uint32_t)((0x5FAUL << SCB_AIRCR_VECTKEY_Pos)    |
  50              		.loc 2 1794 3 view .LVU4
1795:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****                            (SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) |
  51              		.loc 2 1795 32 is_stmt 0 view .LVU5
  52 0004 0549     		ldr	r1, .L3
1794:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****                            (SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) |
  53              		.loc 2 1794 17 view .LVU6
  54 0006 064B     		ldr	r3, .L3+4
  55              		.loc 2 1795 32 view .LVU7
  56 0008 CA68     		ldr	r2, [r1, #12]
  57              		.loc 2 1795 40 view .LVU8
  58 000a 02F4E062 		and	r2, r2, #1792
1794:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****                            (SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) |
  59              		.loc 2 1794 17 view .LVU9
  60 000e 1343     		orrs	r3, r3, r2
1794:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****                            (SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) |
  61              		.loc 2 1794 15 view .LVU10
  62 0010 CB60     		str	r3, [r1, #12]
1796:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****                             SCB_AIRCR_SYSRESETREQ_Msk    );         /* Keep priority group unchange
1797:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****   __DSB();                                                          /* Ensure completion of memory 
  63              		.loc 2 1797 3 is_stmt 1 view .LVU11
  64              	.LBB10:
  65              	.LBI10:
 429:c:/project/stm32fx_iolib/stm32fxxx/cmsis\cmsis_gcc.h **** {
  66              		.loc 3 429 53 view .LVU12
  67              	.LBB11:
  68              		.loc 3 431 3 view .LVU13
  69              		.syntax unified
  70              	@ 431 "c:/project/stm32fx_iolib/stm32fxxx/cmsis/cmsis_gcc.h" 1
  71 0012 BFF34F8F 		dsb 0xF
  72              	@ 0 "" 2
  73              		.thumb
  74              		.syntax unified
  75              	.L2:
  76              	.LBE11:
  77              	.LBE10:
1798:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h **** 
1799:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****   for(;;)                                                           /* wait until reset */
  78              		.loc 2 1799 3 discriminator 1 view .LVU14
1800:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****   {
1801:c:/project/stm32fx_iolib/stm32fxxx/cmsis\core_cm4.h ****     __NOP();
  79              		.loc 2 1801 5 discriminator 1 view .LVU15
  80              	.LBB12:
  81              	.LBI12:
 375:c:/project/stm32fx_iolib/stm32fxxx/cmsis\cmsis_gcc.h **** {
  82              		.loc 3 375 53 discriminator 1 view .LVU16
  83              	.LBB13:
 377:c:/project/stm32fx_iolib/stm32fxxx/cmsis\cmsis_gcc.h **** }
  84              		.loc 3 377 3 discriminator 1 view .LVU17
  85              		.syntax unified
  86              	@ 377 "c:/project/stm32fx_iolib/stm32fxxx/cmsis/cmsis_gcc.h" 1
  87 0016 00BF     		nop
  88              	@ 0 "" 2
  89              		.thumb
  90              		.syntax unified
  91 0018 FDE7     		b	.L2
  92              	.L4:
  93 001a 00BF     		.align	2
  94              	.L3:
  95 001c 00ED00E0 		.word	-536810240
  96 0020 0400FA05 		.word	100270084
  97              	.LBE13:
  98              	.LBE12:
  99              		.cfi_endproc
 100              	.LFE121:
 102              		.section	.text.flash_read,"ax",%progbits
 103              		.align	1
 104              		.global	flash_read
 105              		.syntax unified
 106              		.thumb
 107              		.thumb_func
 109              	flash_read:
 110              	.LFB126:
   1:serial.c      **** /********************************************************************************/
   2:serial.c      **** /* serial.c                                                                     */
   3:serial.c      **** /* STM32F407ZGT6                                                                */
   4:serial.c      **** /* (Lee ChangWoo HL2IRW  hl2irw@daum.net 010-8573-6860)                 	*/
   5:serial.c      **** /* stm32f4x_test								*/
   6:serial.c      **** /********************************************************************************/
   7:serial.c      **** #include <stdint.h>
   8:serial.c      **** #include <stdio.h>
   9:serial.c      **** #include <stdarg.h>
  10:serial.c      **** #include <stdlib.h>
  11:serial.c      **** #include <string.h>
  12:serial.c      **** #include "hwdefs.h"
  13:serial.c      **** 
  14:serial.c      **** #define SOH				0x01
  15:serial.c      **** #define STX				0x02
  16:serial.c      **** #define ETX				0x03
  17:serial.c      **** #define EOT				0x04
  18:serial.c      **** #define ENQ				0x05
  19:serial.c      **** #define ACK				0x06
  20:serial.c      **** #define NAK				0x15
  21:serial.c      **** 
  22:serial.c      **** volatile unsigned short rxcnt1,txcnt1,maxtx1,rxcnt2,txcnt2,maxtx2,rxcnt3,txcnt3,maxtx3;
  23:serial.c      **** volatile unsigned char rxck1,rxck2,rxck3,rx_led,tx_led,this_id;
  24:serial.c      **** volatile unsigned int flash_address;
  25:serial.c      **** volatile unsigned int flash_para[64];
  26:serial.c      **** 
  27:serial.c      **** 
  28:serial.c      **** char rxbuff1[256],txbuff1[256],rxbuff2[256],txbuff2[256],rxbuff3[256],txbuff3[256];
  29:serial.c      **** unsigned char USART1_PORT,USART3_PORT;
  30:serial.c      **** 
  31:serial.c      **** extern void wm8978_volset (unsigned char vol);
  32:serial.c      **** 
  33:serial.c      **** 
  34:serial.c      **** 
  35:serial.c      **** void flash_read (void)
  36:serial.c      **** {
 111              		.loc 1 36 1 view -0
 112              		.cfi_startproc
 113              		@ args = 0, pretend = 0, frame = 0
 114              		@ frame_needed = 0, uses_anonymous_args = 0
  37:serial.c      ****       unsigned int idx;
 115              		.loc 1 37 7 view .LVU19
  38:serial.c      ****       FLASH_Unlock();
 116              		.loc 1 38 7 view .LVU20
  36:serial.c      ****       unsigned int idx;
 117              		.loc 1 36 1 is_stmt 0 view .LVU21
 118 0000 08B5     		push	{r3, lr}
 119              		.cfi_def_cfa_offset 8
 120              		.cfi_offset 3, -8
 121              		.cfi_offset 14, -4
 122              		.loc 1 38 7 view .LVU22
 123 0002 FFF7FEFF 		bl	FLASH_Unlock
 124              	.LVL0:
  39:serial.c      ****       flash_address = (unsigned int)0x08004000;
 125              		.loc 1 39 7 is_stmt 1 view .LVU23
 126              		.loc 1 39 21 is_stmt 0 view .LVU24
 127 0006 084A     		ldr	r2, .L8
 128 0008 084B     		ldr	r3, .L8+4
  40:serial.c      ****       for (idx=0;idx<64;idx++) {
  41:serial.c      ****           flash_para[idx] = (*(volatile unsigned int *)(flash_address + (idx * 4)));
 129              		.loc 1 41 27 view .LVU25
 130 000a 0949     		ldr	r1, .L8+8
  39:serial.c      ****       flash_address = (unsigned int)0x08004000;
 131              		.loc 1 39 21 view .LVU26
 132 000c 1360     		str	r3, [r2]
  40:serial.c      ****       for (idx=0;idx<64;idx++) {
 133              		.loc 1 40 7 is_stmt 1 view .LVU27
 134              	.LVL1:
  40:serial.c      ****       for (idx=0;idx<64;idx++) {
 135              		.loc 1 40 21 view .LVU28
  40:serial.c      ****       for (idx=0;idx<64;idx++) {
 136              		.loc 1 40 15 is_stmt 0 view .LVU29
 137 000e 0023     		movs	r3, #0
 138              	.LVL2:
 139              	.L6:
 140              		.loc 1 41 11 is_stmt 1 discriminator 3 view .LVU30
 141              		.loc 1 41 71 is_stmt 0 discriminator 3 view .LVU31
 142 0010 1068     		ldr	r0, [r2]
 143              		.loc 1 41 30 discriminator 3 view .LVU32
 144 0012 50F82300 		ldr	r0, [r0, r3, lsl #2]
 145              		.loc 1 41 27 discriminator 3 view .LVU33
 146 0016 41F82300 		str	r0, [r1, r3, lsl #2]
  40:serial.c      ****       for (idx=0;idx<64;idx++) {
 147              		.loc 1 40 28 is_stmt 1 discriminator 3 view .LVU34
 148 001a 0133     		adds	r3, r3, #1
 149              	.LVL3:
  40:serial.c      ****       for (idx=0;idx<64;idx++) {
 150              		.loc 1 40 21 discriminator 3 view .LVU35
 151 001c 402B     		cmp	r3, #64
 152 001e F7D1     		bne	.L6
  42:serial.c      ****       }
  43:serial.c      ****       FLASH_Lock();
 153              		.loc 1 43 7 view .LVU36
  44:serial.c      **** }
 154              		.loc 1 44 1 is_stmt 0 view .LVU37
 155 0020 BDE80840 		pop	{r3, lr}
 156              		.cfi_restore 14
 157              		.cfi_restore 3
 158              		.cfi_def_cfa_offset 0
 159              	.LVL4:
  43:serial.c      **** }
 160              		.loc 1 43 7 view .LVU38
 161 0024 FFF7FEBF 		b	FLASH_Lock
 162              	.LVL5:
 163              	.L9:
 164              		.align	2
 165              	.L8:
 166 0028 00000000 		.word	flash_address
 167 002c 00400008 		.word	134234112
 168 0030 00000000 		.word	flash_para
 169              		.cfi_endproc
 170              	.LFE126:
 172              		.section	.text.USART1_IRQHandler,"ax",%progbits
 173              		.align	1
 174              		.global	USART1_IRQHandler
 175              		.syntax unified
 176              		.thumb
 177              		.thumb_func
 179              	USART1_IRQHandler:
 180              	.LFB127:
  45:serial.c      **** 
  46:serial.c      **** 
  47:serial.c      **** void USART1_IRQHandler (void)
  48:serial.c      **** {
 181              		.loc 1 48 1 is_stmt 1 view -0
 182              		.cfi_startproc
 183              		@ args = 0, pretend = 0, frame = 0
 184              		@ frame_needed = 0, uses_anonymous_args = 0
  49:serial.c      ****       if (USART_GetITStatus(USART1, USART_IT_RXNE) != RESET) {
 185              		.loc 1 49 7 view .LVU40
  48:serial.c      ****       if (USART_GetITStatus(USART1, USART_IT_RXNE) != RESET) {
 186              		.loc 1 48 1 is_stmt 0 view .LVU41
 187 0000 10B5     		push	{r4, lr}
 188              		.cfi_def_cfa_offset 8
 189              		.cfi_offset 4, -8
 190              		.cfi_offset 14, -4
 191              		.loc 1 49 11 view .LVU42
 192 0002 3148     		ldr	r0, .L27
 193 0004 40F22551 		movw	r1, #1317
 194 0008 FFF7FEFF 		bl	USART_GetITStatus
 195              	.LVL6:
 196              		.loc 1 49 10 view .LVU43
 197 000c C8B1     		cbz	r0, .L11
  50:serial.c      ****          /* Read one byte from the receive data register */
  51:serial.c      ****          rxbuff1[rxcnt1] = USART_ReceiveData(USART1);
 198              		.loc 1 51 10 is_stmt 1 view .LVU44
 199              		.loc 1 51 28 is_stmt 0 view .LVU45
 200 000e 2E48     		ldr	r0, .L27
 201 0010 FFF7FEFF 		bl	USART_ReceiveData
 202              	.LVL7:
 203              		.loc 1 51 17 view .LVU46
 204 0014 2D4A     		ldr	r2, .L27+4
 205              		.loc 1 51 26 view .LVU47
 206 0016 2E49     		ldr	r1, .L27+8
 207              		.loc 1 51 17 view .LVU48
 208 0018 1388     		ldrh	r3, [r2]
 209 001a 9BB2     		uxth	r3, r3
 210              		.loc 1 51 26 view .LVU49
 211 001c C854     		strb	r0, [r1, r3]
  52:serial.c      ****          if (rxbuff1[0] == STX) {
 212              		.loc 1 52 10 is_stmt 1 view .LVU50
 213              		.loc 1 52 13 is_stmt 0 view .LVU51
 214 001e 0B78     		ldrb	r3, [r1]	@ zero_extendqisi2
 215 0020 022B     		cmp	r3, #2
 216 0022 41D1     		bne	.L12
  53:serial.c      ****             rxcnt1++;
 217              		.loc 1 53 13 is_stmt 1 view .LVU52
 218              		.loc 1 53 19 is_stmt 0 view .LVU53
 219 0024 1388     		ldrh	r3, [r2]
 220 0026 0133     		adds	r3, r3, #1
 221 0028 9BB2     		uxth	r3, r3
 222 002a 1380     		strh	r3, [r2]	@ movhi
  54:serial.c      ****             rx_led = 1;
 223              		.loc 1 54 13 is_stmt 1 view .LVU54
 224              		.loc 1 54 20 is_stmt 0 view .LVU55
 225 002c 294B     		ldr	r3, .L27+12
 226 002e 0122     		movs	r2, #1
 227 0030 1A70     		strb	r2, [r3]
 228              	.L13:
  55:serial.c      ****          } else {
  56:serial.c      ****             rxcnt1 = 0;
  57:serial.c      ****          }
  58:serial.c      ****          rxck1 = 0;
 229              		.loc 1 58 10 is_stmt 1 view .LVU56
 230              		.loc 1 58 16 is_stmt 0 view .LVU57
 231 0032 294B     		ldr	r3, .L27+16
  59:serial.c      ****          USART_ClearITPendingBit(USART1, USART_IT_RXNE);
 232              		.loc 1 59 10 view .LVU58
 233 0034 2448     		ldr	r0, .L27
  58:serial.c      ****          USART_ClearITPendingBit(USART1, USART_IT_RXNE);
 234              		.loc 1 58 16 view .LVU59
 235 0036 0022     		movs	r2, #0
 236              		.loc 1 59 10 view .LVU60
 237 0038 40F22551 		movw	r1, #1317
  58:serial.c      ****          USART_ClearITPendingBit(USART1, USART_IT_RXNE);
 238              		.loc 1 58 16 view .LVU61
 239 003c 1A70     		strb	r2, [r3]
 240              		.loc 1 59 10 is_stmt 1 view .LVU62
 241 003e FFF7FEFF 		bl	USART_ClearITPendingBit
 242              	.LVL8:
 243              	.L11:
  60:serial.c      ****       }
  61:serial.c      ****       if (USART_GetITStatus(USART1, USART_IT_TXE) != RESET) {
 244              		.loc 1 61 7 view .LVU63
 245              		.loc 1 61 11 is_stmt 0 view .LVU64
 246 0042 2148     		ldr	r0, .L27
 247 0044 40F22771 		movw	r1, #1831
 248 0048 FFF7FEFF 		bl	USART_GetITStatus
 249              	.LVL9:
 250              		.loc 1 61 10 view .LVU65
 251 004c B8B1     		cbz	r0, .L14
  62:serial.c      ****          /* Write one byte to the transmit data register */
  63:serial.c      ****       	 if (txcnt1 < maxtx1) {
 252              		.loc 1 63 9 is_stmt 1 view .LVU66
 253              		.loc 1 63 20 is_stmt 0 view .LVU67
 254 004e 234C     		ldr	r4, .L27+20
 255 0050 234B     		ldr	r3, .L27+24
 256 0052 2288     		ldrh	r2, [r4]
 257 0054 1B88     		ldrh	r3, [r3]
 258 0056 92B2     		uxth	r2, r2
 259 0058 9BB2     		uxth	r3, r3
 260              		.loc 1 63 12 view .LVU68
 261 005a 9A42     		cmp	r2, r3
 262 005c 27D2     		bcs	.L15
  64:serial.c      ****             USART_SendData(USART1, txbuff1[txcnt1]);
 263              		.loc 1 64 13 is_stmt 1 view .LVU69
 264              		.loc 1 64 43 is_stmt 0 view .LVU70
 265 005e 2388     		ldrh	r3, [r4]
 266              		.loc 1 64 13 view .LVU71
 267 0060 204A     		ldr	r2, .L27+28
 268 0062 1948     		ldr	r0, .L27
 269              		.loc 1 64 43 view .LVU72
 270 0064 9BB2     		uxth	r3, r3
 271              		.loc 1 64 13 view .LVU73
 272 0066 D15C     		ldrb	r1, [r2, r3]	@ zero_extendqisi2
 273 0068 FFF7FEFF 		bl	USART_SendData
 274              	.LVL10:
  65:serial.c      ****       	    txcnt1++;
 275              		.loc 1 65 12 is_stmt 1 view .LVU74
 276              		.loc 1 65 18 is_stmt 0 view .LVU75
 277 006c 2388     		ldrh	r3, [r4]
 278 006e 0133     		adds	r3, r3, #1
 279 0070 9BB2     		uxth	r3, r3
 280 0072 2380     		strh	r3, [r4]	@ movhi
 281              	.L16:
  66:serial.c      ****       	 } else {
  67:serial.c      ****       	    /* Disable the USART1 Transmit interrupt */
  68:serial.c      ****       	    USART_ITConfig(USART1, USART_IT_TXE, DISABLE);
  69:serial.c      ****       	    USART_ITConfig(USART1, USART_IT_TC, ENABLE);
  70:serial.c      ****       	 }
  71:serial.c      ****       	 USART_ClearITPendingBit(USART1, USART_IT_TXE);
 282              		.loc 1 71 9 is_stmt 1 view .LVU76
 283 0074 1448     		ldr	r0, .L27
 284 0076 40F22771 		movw	r1, #1831
 285 007a FFF7FEFF 		bl	USART_ClearITPendingBit
 286              	.LVL11:
 287              	.L14:
  72:serial.c      ****       }
  73:serial.c      ****       if (USART_GetITStatus(USART1, USART_IT_TC) != RESET) {
 288              		.loc 1 73 7 view .LVU77
 289              		.loc 1 73 11 is_stmt 0 view .LVU78
 290 007e 1248     		ldr	r0, .L27
 291 0080 40F22661 		movw	r1, #1574
 292 0084 FFF7FEFF 		bl	USART_GetITStatus
 293              	.LVL12:
 294              		.loc 1 73 10 view .LVU79
 295 0088 68B1     		cbz	r0, .L10
  74:serial.c      ****       	 USART_ITConfig(USART1, USART_IT_TC, DISABLE);
 296              		.loc 1 74 9 is_stmt 1 view .LVU80
 297 008a 0022     		movs	r2, #0
 298 008c 0E48     		ldr	r0, .L27
 299 008e 40F22661 		movw	r1, #1574
 300 0092 FFF7FEFF 		bl	USART_ITConfig
 301              	.LVL13:
  75:serial.c      ****       	 USART_ClearITPendingBit(USART1, USART_IT_TC);
 302              		.loc 1 75 9 view .LVU81
 303 0096 0C48     		ldr	r0, .L27
 304 0098 40F22661 		movw	r1, #1574
 305 009c FFF7FEFF 		bl	USART_ClearITPendingBit
 306              	.LVL14:
  76:serial.c      ****          tx_led = 0;
 307              		.loc 1 76 10 view .LVU82
 308              		.loc 1 76 17 is_stmt 0 view .LVU83
 309 00a0 114B     		ldr	r3, .L27+32
 310 00a2 0022     		movs	r2, #0
 311 00a4 1A70     		strb	r2, [r3]
 312              	.L10:
  77:serial.c      ****       }
  78:serial.c      **** }
 313              		.loc 1 78 1 view .LVU84
 314 00a6 10BD     		pop	{r4, pc}
 315              	.L12:
  56:serial.c      ****          }
 316              		.loc 1 56 13 is_stmt 1 view .LVU85
  56:serial.c      ****          }
 317              		.loc 1 56 20 is_stmt 0 view .LVU86
 318 00a8 0023     		movs	r3, #0
 319 00aa 1380     		strh	r3, [r2]	@ movhi
 320 00ac C1E7     		b	.L13
 321              	.L15:
  68:serial.c      ****       	    USART_ITConfig(USART1, USART_IT_TC, ENABLE);
 322              		.loc 1 68 12 is_stmt 1 view .LVU87
 323 00ae 0648     		ldr	r0, .L27
 324 00b0 0022     		movs	r2, #0
 325 00b2 40F22771 		movw	r1, #1831
 326 00b6 FFF7FEFF 		bl	USART_ITConfig
 327              	.LVL15:
  69:serial.c      ****       	 }
 328              		.loc 1 69 12 view .LVU88
 329 00ba 0348     		ldr	r0, .L27
 330 00bc 0122     		movs	r2, #1
 331 00be 40F22661 		movw	r1, #1574
 332 00c2 FFF7FEFF 		bl	USART_ITConfig
 333              	.LVL16:
 334 00c6 D5E7     		b	.L16
 335              	.L28:
 336              		.align	2
 337              	.L27:
 338 00c8 00100140 		.word	1073811456
 339 00cc 00000000 		.word	rxcnt1
 340 00d0 00000000 		.word	rxbuff1
 341 00d4 00000000 		.word	rx_led
 342 00d8 00000000 		.word	rxck1
 343 00dc 00000000 		.word	txcnt1
 344 00e0 00000000 		.word	maxtx1
 345 00e4 00000000 		.word	txbuff1
 346 00e8 00000000 		.word	tx_led
 347              		.cfi_endproc
 348              	.LFE127:
 350              		.section	.text.USART2_IRQHandler,"ax",%progbits
 351              		.align	1
 352              		.global	USART2_IRQHandler
 353              		.syntax unified
 354              		.thumb
 355              		.thumb_func
 357              	USART2_IRQHandler:
 358              	.LFB128:
  79:serial.c      **** 
  80:serial.c      **** 
  81:serial.c      **** void USART2_IRQHandler (void)
  82:serial.c      **** {
 359              		.loc 1 82 1 view -0
 360              		.cfi_startproc
 361              		@ args = 0, pretend = 0, frame = 0
 362              		@ frame_needed = 0, uses_anonymous_args = 0
  83:serial.c      ****       if (USART_GetITStatus(USART2, USART_IT_RXNE) != RESET) {
 363              		.loc 1 83 7 view .LVU90
  82:serial.c      ****       if (USART_GetITStatus(USART2, USART_IT_RXNE) != RESET) {
 364              		.loc 1 82 1 is_stmt 0 view .LVU91
 365 0000 10B5     		push	{r4, lr}
 366              		.cfi_def_cfa_offset 8
 367              		.cfi_offset 4, -8
 368              		.cfi_offset 14, -4
 369              		.loc 1 83 11 view .LVU92
 370 0002 3348     		ldr	r0, .L46
 371 0004 40F22551 		movw	r1, #1317
 372 0008 FFF7FEFF 		bl	USART_GetITStatus
 373              	.LVL17:
 374              		.loc 1 83 10 view .LVU93
 375 000c C8B1     		cbz	r0, .L30
  84:serial.c      ****          /* Read one byte from the receive data register */
  85:serial.c      ****          rxbuff2[rxcnt2] = USART_ReceiveData(USART2);
 376              		.loc 1 85 10 is_stmt 1 view .LVU94
 377              		.loc 1 85 28 is_stmt 0 view .LVU95
 378 000e 3048     		ldr	r0, .L46
 379 0010 FFF7FEFF 		bl	USART_ReceiveData
 380              	.LVL18:
 381              		.loc 1 85 17 view .LVU96
 382 0014 2F4A     		ldr	r2, .L46+4
 383              		.loc 1 85 26 view .LVU97
 384 0016 3049     		ldr	r1, .L46+8
 385              		.loc 1 85 17 view .LVU98
 386 0018 1388     		ldrh	r3, [r2]
 387 001a 9BB2     		uxth	r3, r3
 388              		.loc 1 85 26 view .LVU99
 389 001c C854     		strb	r0, [r1, r3]
  86:serial.c      ****          if (rxbuff2[0] == STX) {
 390              		.loc 1 86 10 is_stmt 1 view .LVU100
 391              		.loc 1 86 13 is_stmt 0 view .LVU101
 392 001e 0B78     		ldrb	r3, [r1]	@ zero_extendqisi2
 393 0020 022B     		cmp	r3, #2
 394 0022 44D1     		bne	.L31
  87:serial.c      ****             rxcnt2++;
 395              		.loc 1 87 13 is_stmt 1 view .LVU102
 396              		.loc 1 87 19 is_stmt 0 view .LVU103
 397 0024 1388     		ldrh	r3, [r2]
 398 0026 0133     		adds	r3, r3, #1
 399 0028 9BB2     		uxth	r3, r3
 400 002a 1380     		strh	r3, [r2]	@ movhi
  88:serial.c      ****             rx_led = 1;
 401              		.loc 1 88 13 is_stmt 1 view .LVU104
 402              		.loc 1 88 20 is_stmt 0 view .LVU105
 403 002c 2B4B     		ldr	r3, .L46+12
 404 002e 0122     		movs	r2, #1
 405 0030 1A70     		strb	r2, [r3]
 406              	.L32:
  89:serial.c      ****          } else {
  90:serial.c      ****             rxcnt2 = 0;
  91:serial.c      ****          }
  92:serial.c      ****          rxck2 = 0;
 407              		.loc 1 92 10 is_stmt 1 view .LVU106
 408              		.loc 1 92 16 is_stmt 0 view .LVU107
 409 0032 2B4B     		ldr	r3, .L46+16
  93:serial.c      ****          USART_ClearITPendingBit(USART2, USART_IT_RXNE);
 410              		.loc 1 93 10 view .LVU108
 411 0034 2648     		ldr	r0, .L46
  92:serial.c      ****          USART_ClearITPendingBit(USART2, USART_IT_RXNE);
 412              		.loc 1 92 16 view .LVU109
 413 0036 0022     		movs	r2, #0
 414              		.loc 1 93 10 view .LVU110
 415 0038 40F22551 		movw	r1, #1317
  92:serial.c      ****          USART_ClearITPendingBit(USART2, USART_IT_RXNE);
 416              		.loc 1 92 16 view .LVU111
 417 003c 1A70     		strb	r2, [r3]
 418              		.loc 1 93 10 is_stmt 1 view .LVU112
 419 003e FFF7FEFF 		bl	USART_ClearITPendingBit
 420              	.LVL19:
 421              	.L30:
  94:serial.c      ****       }
  95:serial.c      ****       if (USART_GetITStatus(USART2, USART_IT_TXE) != RESET) {
 422              		.loc 1 95 7 view .LVU113
 423              		.loc 1 95 11 is_stmt 0 view .LVU114
 424 0042 2348     		ldr	r0, .L46
 425 0044 40F22771 		movw	r1, #1831
 426 0048 FFF7FEFF 		bl	USART_GetITStatus
 427              	.LVL20:
 428              		.loc 1 95 10 view .LVU115
 429 004c B8B1     		cbz	r0, .L33
  96:serial.c      ****          /* Write one byte to the transmit data register */
  97:serial.c      ****       	 if (txcnt2 < maxtx2) {
 430              		.loc 1 97 9 is_stmt 1 view .LVU116
 431              		.loc 1 97 20 is_stmt 0 view .LVU117
 432 004e 254C     		ldr	r4, .L46+20
 433 0050 254B     		ldr	r3, .L46+24
 434 0052 2288     		ldrh	r2, [r4]
 435 0054 1B88     		ldrh	r3, [r3]
 436 0056 92B2     		uxth	r2, r2
 437 0058 9BB2     		uxth	r3, r3
 438              		.loc 1 97 12 view .LVU118
 439 005a 9A42     		cmp	r2, r3
 440 005c 2AD2     		bcs	.L34
  98:serial.c      ****             USART_SendData(USART2, txbuff2[txcnt2]);
 441              		.loc 1 98 13 is_stmt 1 view .LVU119
 442              		.loc 1 98 43 is_stmt 0 view .LVU120
 443 005e 2388     		ldrh	r3, [r4]
 444              		.loc 1 98 13 view .LVU121
 445 0060 224A     		ldr	r2, .L46+28
 446 0062 1B48     		ldr	r0, .L46
 447              		.loc 1 98 43 view .LVU122
 448 0064 9BB2     		uxth	r3, r3
 449              		.loc 1 98 13 view .LVU123
 450 0066 D15C     		ldrb	r1, [r2, r3]	@ zero_extendqisi2
 451 0068 FFF7FEFF 		bl	USART_SendData
 452              	.LVL21:
  99:serial.c      ****       	    txcnt2++;
 453              		.loc 1 99 12 is_stmt 1 view .LVU124
 454              		.loc 1 99 18 is_stmt 0 view .LVU125
 455 006c 2388     		ldrh	r3, [r4]
 456 006e 0133     		adds	r3, r3, #1
 457 0070 9BB2     		uxth	r3, r3
 458 0072 2380     		strh	r3, [r4]	@ movhi
 459              	.L35:
 100:serial.c      ****       	 } else {
 101:serial.c      ****       	    /* Disable the USART2 Transmit interrupt */
 102:serial.c      ****       	    USART_ITConfig(USART2, USART_IT_TXE, DISABLE);
 103:serial.c      ****       	    USART_ITConfig(USART2, USART_IT_TC, ENABLE);
 104:serial.c      ****       	 }
 105:serial.c      ****       	 USART_ClearITPendingBit(USART2, USART_IT_TXE);
 460              		.loc 1 105 9 is_stmt 1 view .LVU126
 461 0074 1648     		ldr	r0, .L46
 462 0076 40F22771 		movw	r1, #1831
 463 007a FFF7FEFF 		bl	USART_ClearITPendingBit
 464              	.LVL22:
 465              	.L33:
 106:serial.c      ****       }
 107:serial.c      ****       if (USART_GetITStatus(USART2, USART_IT_TC) != RESET) {
 466              		.loc 1 107 7 view .LVU127
 467              		.loc 1 107 11 is_stmt 0 view .LVU128
 468 007e 1448     		ldr	r0, .L46
 469 0080 40F22661 		movw	r1, #1574
 470 0084 FFF7FEFF 		bl	USART_GetITStatus
 471              	.LVL23:
 472              		.loc 1 107 10 view .LVU129
 473 0088 80B1     		cbz	r0, .L29
 108:serial.c      ****       	 USART_ITConfig(USART2, USART_IT_TC, DISABLE);
 474              		.loc 1 108 9 is_stmt 1 view .LVU130
 475 008a 0022     		movs	r2, #0
 476 008c 1048     		ldr	r0, .L46
 477 008e 40F22661 		movw	r1, #1574
 478 0092 FFF7FEFF 		bl	USART_ITConfig
 479              	.LVL24:
 109:serial.c      ****       	 USART_ClearITPendingBit(USART2, USART_IT_TC);
 480              		.loc 1 109 9 view .LVU131
 481 0096 0E48     		ldr	r0, .L46
 482 0098 40F22661 		movw	r1, #1574
 483 009c FFF7FEFF 		bl	USART_ClearITPendingBit
 484              	.LVL25:
 110:serial.c      ****          tx_led = 0;
 485              		.loc 1 110 10 view .LVU132
 486              		.loc 1 110 17 is_stmt 0 view .LVU133
 487 00a0 134A     		ldr	r2, .L46+32
 488 00a2 0023     		movs	r3, #0
 489 00a4 1370     		strb	r3, [r2]
 111:serial.c      ****          TXEN_485 = 0;
 490              		.loc 1 111 10 is_stmt 1 view .LVU134
 491              		.loc 1 111 19 is_stmt 0 view .LVU135
 492 00a6 134A     		ldr	r2, .L46+36
 493 00a8 C2F8A032 		str	r3, [r2, #672]
 494              	.L29:
 112:serial.c      ****       }
 113:serial.c      **** }
 495              		.loc 1 113 1 view .LVU136
 496 00ac 10BD     		pop	{r4, pc}
 497              	.L31:
  90:serial.c      ****          }
 498              		.loc 1 90 13 is_stmt 1 view .LVU137
  90:serial.c      ****          }
 499              		.loc 1 90 20 is_stmt 0 view .LVU138
 500 00ae 0023     		movs	r3, #0
 501 00b0 1380     		strh	r3, [r2]	@ movhi
 502 00b2 BEE7     		b	.L32
 503              	.L34:
 102:serial.c      ****       	    USART_ITConfig(USART2, USART_IT_TC, ENABLE);
 504              		.loc 1 102 12 is_stmt 1 view .LVU139
 505 00b4 0648     		ldr	r0, .L46
 506 00b6 0022     		movs	r2, #0
 507 00b8 40F22771 		movw	r1, #1831
 508 00bc FFF7FEFF 		bl	USART_ITConfig
 509              	.LVL26:
 103:serial.c      ****       	 }
 510              		.loc 1 103 12 view .LVU140
 511 00c0 0348     		ldr	r0, .L46
 512 00c2 0122     		movs	r2, #1
 513 00c4 40F22661 		movw	r1, #1574
 514 00c8 FFF7FEFF 		bl	USART_ITConfig
 515              	.LVL27:
 516 00cc D2E7     		b	.L35
 517              	.L47:
 518 00ce 00BF     		.align	2
 519              	.L46:
 520 00d0 00440040 		.word	1073759232
 521 00d4 00000000 		.word	rxcnt2
 522 00d8 00000000 		.word	rxbuff2
 523 00dc 00000000 		.word	rx_led
 524 00e0 00000000 		.word	rxck2
 525 00e4 00000000 		.word	txcnt2
 526 00e8 00000000 		.word	maxtx2
 527 00ec 00000000 		.word	txbuff2
 528 00f0 00000000 		.word	tx_led
 529 00f4 00004342 		.word	1111687168
 530              		.cfi_endproc
 531              	.LFE128:
 533              		.section	.text.USART3_IRQHandler,"ax",%progbits
 534              		.align	1
 535              		.global	USART3_IRQHandler
 536              		.syntax unified
 537              		.thumb
 538              		.thumb_func
 540              	USART3_IRQHandler:
 541              	.LFB129:
 114:serial.c      **** 
 115:serial.c      **** 
 116:serial.c      **** void USART3_IRQHandler (void)
 117:serial.c      **** {
 542              		.loc 1 117 1 view -0
 543              		.cfi_startproc
 544              		@ args = 0, pretend = 0, frame = 0
 545              		@ frame_needed = 0, uses_anonymous_args = 0
 118:serial.c      ****       if (USART_GetITStatus(USART3, USART_IT_RXNE) != RESET) {
 546              		.loc 1 118 7 view .LVU142
 117:serial.c      ****       if (USART_GetITStatus(USART3, USART_IT_RXNE) != RESET) {
 547              		.loc 1 117 1 is_stmt 0 view .LVU143
 548 0000 10B5     		push	{r4, lr}
 549              		.cfi_def_cfa_offset 8
 550              		.cfi_offset 4, -8
 551              		.cfi_offset 14, -4
 552              		.loc 1 118 11 view .LVU144
 553 0002 3148     		ldr	r0, .L65
 554 0004 40F22551 		movw	r1, #1317
 555 0008 FFF7FEFF 		bl	USART_GetITStatus
 556              	.LVL28:
 557              		.loc 1 118 10 view .LVU145
 558 000c C8B1     		cbz	r0, .L49
 119:serial.c      ****          /* Read one byte from the receive data register */
 120:serial.c      ****          rxbuff3[rxcnt3] = USART_ReceiveData(USART3);
 559              		.loc 1 120 10 is_stmt 1 view .LVU146
 560              		.loc 1 120 28 is_stmt 0 view .LVU147
 561 000e 2E48     		ldr	r0, .L65
 562 0010 FFF7FEFF 		bl	USART_ReceiveData
 563              	.LVL29:
 564              		.loc 1 120 17 view .LVU148
 565 0014 2D4A     		ldr	r2, .L65+4
 566              		.loc 1 120 26 view .LVU149
 567 0016 2E49     		ldr	r1, .L65+8
 568              		.loc 1 120 17 view .LVU150
 569 0018 1388     		ldrh	r3, [r2]
 570 001a 9BB2     		uxth	r3, r3
 571              		.loc 1 120 26 view .LVU151
 572 001c C854     		strb	r0, [r1, r3]
 121:serial.c      ****          if (rxbuff3[0] == STX) {
 573              		.loc 1 121 10 is_stmt 1 view .LVU152
 574              		.loc 1 121 13 is_stmt 0 view .LVU153
 575 001e 0B78     		ldrb	r3, [r1]	@ zero_extendqisi2
 576 0020 022B     		cmp	r3, #2
 577 0022 41D1     		bne	.L50
 122:serial.c      ****             rxcnt3++;
 578              		.loc 1 122 13 is_stmt 1 view .LVU154
 579              		.loc 1 122 19 is_stmt 0 view .LVU155
 580 0024 1388     		ldrh	r3, [r2]
 581 0026 0133     		adds	r3, r3, #1
 582 0028 9BB2     		uxth	r3, r3
 583 002a 1380     		strh	r3, [r2]	@ movhi
 123:serial.c      ****             rx_led = 1;
 584              		.loc 1 123 13 is_stmt 1 view .LVU156
 585              		.loc 1 123 20 is_stmt 0 view .LVU157
 586 002c 294B     		ldr	r3, .L65+12
 587 002e 0122     		movs	r2, #1
 588 0030 1A70     		strb	r2, [r3]
 589              	.L51:
 124:serial.c      ****          } else {
 125:serial.c      ****             rxcnt3 = 0;
 126:serial.c      ****          }
 127:serial.c      ****          rxck3 = 0;
 590              		.loc 1 127 10 is_stmt 1 view .LVU158
 591              		.loc 1 127 16 is_stmt 0 view .LVU159
 592 0032 294B     		ldr	r3, .L65+16
 128:serial.c      ****          USART_ClearITPendingBit(USART3, USART_IT_RXNE);
 593              		.loc 1 128 10 view .LVU160
 594 0034 2448     		ldr	r0, .L65
 127:serial.c      ****          USART_ClearITPendingBit(USART3, USART_IT_RXNE);
 595              		.loc 1 127 16 view .LVU161
 596 0036 0022     		movs	r2, #0
 597              		.loc 1 128 10 view .LVU162
 598 0038 40F22551 		movw	r1, #1317
 127:serial.c      ****          USART_ClearITPendingBit(USART3, USART_IT_RXNE);
 599              		.loc 1 127 16 view .LVU163
 600 003c 1A70     		strb	r2, [r3]
 601              		.loc 1 128 10 is_stmt 1 view .LVU164
 602 003e FFF7FEFF 		bl	USART_ClearITPendingBit
 603              	.LVL30:
 604              	.L49:
 129:serial.c      ****       }
 130:serial.c      ****       if (USART_GetITStatus(USART3, USART_IT_TXE) != RESET) {
 605              		.loc 1 130 7 view .LVU165
 606              		.loc 1 130 11 is_stmt 0 view .LVU166
 607 0042 2148     		ldr	r0, .L65
 608 0044 40F22771 		movw	r1, #1831
 609 0048 FFF7FEFF 		bl	USART_GetITStatus
 610              	.LVL31:
 611              		.loc 1 130 10 view .LVU167
 612 004c B8B1     		cbz	r0, .L52
 131:serial.c      ****          /* Write one byte to the transmit data register */
 132:serial.c      ****       	 if (txcnt3 < maxtx3) {
 613              		.loc 1 132 9 is_stmt 1 view .LVU168
 614              		.loc 1 132 20 is_stmt 0 view .LVU169
 615 004e 234C     		ldr	r4, .L65+20
 616 0050 234B     		ldr	r3, .L65+24
 617 0052 2288     		ldrh	r2, [r4]
 618 0054 1B88     		ldrh	r3, [r3]
 619 0056 92B2     		uxth	r2, r2
 620 0058 9BB2     		uxth	r3, r3
 621              		.loc 1 132 12 view .LVU170
 622 005a 9A42     		cmp	r2, r3
 623 005c 27D2     		bcs	.L53
 133:serial.c      ****             USART_SendData(USART3, txbuff3[txcnt3]);
 624              		.loc 1 133 13 is_stmt 1 view .LVU171
 625              		.loc 1 133 43 is_stmt 0 view .LVU172
 626 005e 2388     		ldrh	r3, [r4]
 627              		.loc 1 133 13 view .LVU173
 628 0060 204A     		ldr	r2, .L65+28
 629 0062 1948     		ldr	r0, .L65
 630              		.loc 1 133 43 view .LVU174
 631 0064 9BB2     		uxth	r3, r3
 632              		.loc 1 133 13 view .LVU175
 633 0066 D15C     		ldrb	r1, [r2, r3]	@ zero_extendqisi2
 634 0068 FFF7FEFF 		bl	USART_SendData
 635              	.LVL32:
 134:serial.c      ****       	    txcnt3++;
 636              		.loc 1 134 12 is_stmt 1 view .LVU176
 637              		.loc 1 134 18 is_stmt 0 view .LVU177
 638 006c 2388     		ldrh	r3, [r4]
 639 006e 0133     		adds	r3, r3, #1
 640 0070 9BB2     		uxth	r3, r3
 641 0072 2380     		strh	r3, [r4]	@ movhi
 642              	.L54:
 135:serial.c      ****       	 } else {
 136:serial.c      ****       	    /* Disable the USART3 Transmit interrupt */
 137:serial.c      ****       	    USART_ITConfig(USART3, USART_IT_TXE, DISABLE);
 138:serial.c      ****       	    USART_ITConfig(USART3, USART_IT_TC, ENABLE);
 139:serial.c      ****       	 }
 140:serial.c      ****       	 USART_ClearITPendingBit(USART3, USART_IT_TXE);
 643              		.loc 1 140 9 is_stmt 1 view .LVU178
 644 0074 1448     		ldr	r0, .L65
 645 0076 40F22771 		movw	r1, #1831
 646 007a FFF7FEFF 		bl	USART_ClearITPendingBit
 647              	.LVL33:
 648              	.L52:
 141:serial.c      ****       }
 142:serial.c      ****       if (USART_GetITStatus(USART3, USART_IT_TC) != RESET) {
 649              		.loc 1 142 7 view .LVU179
 650              		.loc 1 142 11 is_stmt 0 view .LVU180
 651 007e 1248     		ldr	r0, .L65
 652 0080 40F22661 		movw	r1, #1574
 653 0084 FFF7FEFF 		bl	USART_GetITStatus
 654              	.LVL34:
 655              		.loc 1 142 10 view .LVU181
 656 0088 68B1     		cbz	r0, .L48
 143:serial.c      ****       	 USART_ITConfig(USART3, USART_IT_TC, DISABLE);
 657              		.loc 1 143 9 is_stmt 1 view .LVU182
 658 008a 0022     		movs	r2, #0
 659 008c 0E48     		ldr	r0, .L65
 660 008e 40F22661 		movw	r1, #1574
 661 0092 FFF7FEFF 		bl	USART_ITConfig
 662              	.LVL35:
 144:serial.c      ****       	 USART_ClearITPendingBit(USART3, USART_IT_TC);
 663              		.loc 1 144 9 view .LVU183
 664 0096 0C48     		ldr	r0, .L65
 665 0098 40F22661 		movw	r1, #1574
 666 009c FFF7FEFF 		bl	USART_ClearITPendingBit
 667              	.LVL36:
 145:serial.c      ****          tx_led = 0;
 668              		.loc 1 145 10 view .LVU184
 669              		.loc 1 145 17 is_stmt 0 view .LVU185
 670 00a0 114B     		ldr	r3, .L65+32
 671 00a2 0022     		movs	r2, #0
 672 00a4 1A70     		strb	r2, [r3]
 673              	.L48:
 146:serial.c      ****       }
 147:serial.c      **** }
 674              		.loc 1 147 1 view .LVU186
 675 00a6 10BD     		pop	{r4, pc}
 676              	.L50:
 125:serial.c      ****          }
 677              		.loc 1 125 13 is_stmt 1 view .LVU187
 125:serial.c      ****          }
 678              		.loc 1 125 20 is_stmt 0 view .LVU188
 679 00a8 0023     		movs	r3, #0
 680 00aa 1380     		strh	r3, [r2]	@ movhi
 681 00ac C1E7     		b	.L51
 682              	.L53:
 137:serial.c      ****       	    USART_ITConfig(USART3, USART_IT_TC, ENABLE);
 683              		.loc 1 137 12 is_stmt 1 view .LVU189
 684 00ae 0648     		ldr	r0, .L65
 685 00b0 0022     		movs	r2, #0
 686 00b2 40F22771 		movw	r1, #1831
 687 00b6 FFF7FEFF 		bl	USART_ITConfig
 688              	.LVL37:
 138:serial.c      ****       	 }
 689              		.loc 1 138 12 view .LVU190
 690 00ba 0348     		ldr	r0, .L65
 691 00bc 0122     		movs	r2, #1
 692 00be 40F22661 		movw	r1, #1574
 693 00c2 FFF7FEFF 		bl	USART_ITConfig
 694              	.LVL38:
 695 00c6 D5E7     		b	.L54
 696              	.L66:
 697              		.align	2
 698              	.L65:
 699 00c8 00480040 		.word	1073760256
 700 00cc 00000000 		.word	rxcnt3
 701 00d0 00000000 		.word	rxbuff3
 702 00d4 00000000 		.word	rx_led
 703 00d8 00000000 		.word	rxck3
 704 00dc 00000000 		.word	txcnt3
 705 00e0 00000000 		.word	maxtx3
 706 00e4 00000000 		.word	txbuff3
 707 00e8 00000000 		.word	tx_led
 708              		.cfi_endproc
 709              	.LFE129:
 711              		.section	.text.tx_enable1,"ax",%progbits
 712              		.align	1
 713              		.global	tx_enable1
 714              		.syntax unified
 715              		.thumb
 716              		.thumb_func
 718              	tx_enable1:
 719              	.LVL39:
 720              	.LFB130:
 148:serial.c      **** 
 149:serial.c      **** 
 150:serial.c      **** void tx_enable1 (unsigned char max)
 151:serial.c      **** {
 721              		.loc 1 151 1 view -0
 722              		.cfi_startproc
 723              		@ args = 0, pretend = 0, frame = 0
 724              		@ frame_needed = 0, uses_anonymous_args = 0
 152:serial.c      ****       maxtx1 = max;
 725              		.loc 1 152 7 view .LVU192
 151:serial.c      ****       maxtx1 = max;
 726              		.loc 1 151 1 is_stmt 0 view .LVU193
 727 0000 08B5     		push	{r3, lr}
 728              		.cfi_def_cfa_offset 8
 729              		.cfi_offset 3, -8
 730              		.cfi_offset 14, -4
 731              		.loc 1 152 14 view .LVU194
 732 0002 074B     		ldr	r3, .L68
 733 0004 1880     		strh	r0, [r3]	@ movhi
 153:serial.c      ****       txcnt1 = 0;
 734              		.loc 1 153 7 is_stmt 1 view .LVU195
 735              		.loc 1 153 14 is_stmt 0 view .LVU196
 736 0006 074B     		ldr	r3, .L68+4
 154:serial.c      ****       USART_ITConfig(USART1, USART_IT_TXE, ENABLE);
 737              		.loc 1 154 7 view .LVU197
 738 0008 0748     		ldr	r0, .L68+8
 739              	.LVL40:
 153:serial.c      ****       txcnt1 = 0;
 740              		.loc 1 153 14 view .LVU198
 741 000a 0022     		movs	r2, #0
 742 000c 1A80     		strh	r2, [r3]	@ movhi
 743              		.loc 1 154 7 is_stmt 1 view .LVU199
 744 000e 40F22771 		movw	r1, #1831
 745 0012 0122     		movs	r2, #1
 746 0014 FFF7FEFF 		bl	USART_ITConfig
 747              	.LVL41:
 155:serial.c      ****       tx_led = 1;
 748              		.loc 1 155 7 view .LVU200
 749              		.loc 1 155 14 is_stmt 0 view .LVU201
 750 0018 044B     		ldr	r3, .L68+12
 751 001a 0122     		movs	r2, #1
 752 001c 1A70     		strb	r2, [r3]
 156:serial.c      **** }
 753              		.loc 1 156 1 view .LVU202
 754 001e 08BD     		pop	{r3, pc}
 755              	.L69:
 756              		.align	2
 757              	.L68:
 758 0020 00000000 		.word	maxtx1
 759 0024 00000000 		.word	txcnt1
 760 0028 00100140 		.word	1073811456
 761 002c 00000000 		.word	tx_led
 762              		.cfi_endproc
 763              	.LFE130:
 765              		.section	.text.tx_enable2,"ax",%progbits
 766              		.align	1
 767              		.global	tx_enable2
 768              		.syntax unified
 769              		.thumb
 770              		.thumb_func
 772              	tx_enable2:
 773              	.LVL42:
 774              	.LFB131:
 157:serial.c      **** 
 158:serial.c      **** 
 159:serial.c      **** void tx_enable2 (unsigned char max)
 160:serial.c      **** {
 775              		.loc 1 160 1 is_stmt 1 view -0
 776              		.cfi_startproc
 777              		@ args = 0, pretend = 0, frame = 0
 778              		@ frame_needed = 0, uses_anonymous_args = 0
 161:serial.c      ****       TXEN_485 = 1;
 779              		.loc 1 161 7 view .LVU204
 780              		.loc 1 161 16 is_stmt 0 view .LVU205
 781 0000 094B     		ldr	r3, .L71
 160:serial.c      ****       TXEN_485 = 1;
 782              		.loc 1 160 1 view .LVU206
 783 0002 10B5     		push	{r4, lr}
 784              		.cfi_def_cfa_offset 8
 785              		.cfi_offset 4, -8
 786              		.cfi_offset 14, -4
 787              		.loc 1 161 16 view .LVU207
 788 0004 0124     		movs	r4, #1
 789 0006 C3F8A042 		str	r4, [r3, #672]
 162:serial.c      ****       maxtx2 = max;
 790              		.loc 1 162 7 is_stmt 1 view .LVU208
 791              		.loc 1 162 14 is_stmt 0 view .LVU209
 792 000a 084B     		ldr	r3, .L71+4
 793 000c 1880     		strh	r0, [r3]	@ movhi
 163:serial.c      ****       txcnt2 = 0;
 794              		.loc 1 163 7 is_stmt 1 view .LVU210
 795              		.loc 1 163 14 is_stmt 0 view .LVU211
 796 000e 084B     		ldr	r3, .L71+8
 164:serial.c      ****       USART_ITConfig(USART2, USART_IT_TXE, ENABLE);
 797              		.loc 1 164 7 view .LVU212
 798 0010 0848     		ldr	r0, .L71+12
 799              	.LVL43:
 163:serial.c      ****       txcnt2 = 0;
 800              		.loc 1 163 14 view .LVU213
 801 0012 0022     		movs	r2, #0
 802 0014 1A80     		strh	r2, [r3]	@ movhi
 803              		.loc 1 164 7 is_stmt 1 view .LVU214
 804 0016 40F22771 		movw	r1, #1831
 805 001a 2246     		mov	r2, r4
 806 001c FFF7FEFF 		bl	USART_ITConfig
 807              	.LVL44:
 165:serial.c      ****       tx_led = 1;
 808              		.loc 1 165 7 view .LVU215
 809              		.loc 1 165 14 is_stmt 0 view .LVU216
 810 0020 054B     		ldr	r3, .L71+16
 811 0022 1C70     		strb	r4, [r3]
 166:serial.c      **** }
 812              		.loc 1 166 1 view .LVU217
 813 0024 10BD     		pop	{r4, pc}
 814              	.L72:
 815 0026 00BF     		.align	2
 816              	.L71:
 817 0028 00004342 		.word	1111687168
 818 002c 00000000 		.word	maxtx2
 819 0030 00000000 		.word	txcnt2
 820 0034 00440040 		.word	1073759232
 821 0038 00000000 		.word	tx_led
 822              		.cfi_endproc
 823              	.LFE131:
 825              		.section	.text.tx_enable3,"ax",%progbits
 826              		.align	1
 827              		.global	tx_enable3
 828              		.syntax unified
 829              		.thumb
 830              		.thumb_func
 832              	tx_enable3:
 833              	.LVL45:
 834              	.LFB132:
 167:serial.c      **** 
 168:serial.c      **** 
 169:serial.c      **** void tx_enable3 (unsigned char max)
 170:serial.c      **** {
 835              		.loc 1 170 1 is_stmt 1 view -0
 836              		.cfi_startproc
 837              		@ args = 0, pretend = 0, frame = 0
 838              		@ frame_needed = 0, uses_anonymous_args = 0
 171:serial.c      ****       maxtx3 = max;
 839              		.loc 1 171 7 view .LVU219
 170:serial.c      ****       maxtx3 = max;
 840              		.loc 1 170 1 is_stmt 0 view .LVU220
 841 0000 08B5     		push	{r3, lr}
 842              		.cfi_def_cfa_offset 8
 843              		.cfi_offset 3, -8
 844              		.cfi_offset 14, -4
 845              		.loc 1 171 14 view .LVU221
 846 0002 074B     		ldr	r3, .L74
 847 0004 1880     		strh	r0, [r3]	@ movhi
 172:serial.c      ****       txcnt3 = 0;
 848              		.loc 1 172 7 is_stmt 1 view .LVU222
 849              		.loc 1 172 14 is_stmt 0 view .LVU223
 850 0006 074B     		ldr	r3, .L74+4
 173:serial.c      ****       USART_ITConfig(USART3, USART_IT_TXE, ENABLE);
 851              		.loc 1 173 7 view .LVU224
 852 0008 0748     		ldr	r0, .L74+8
 853              	.LVL46:
 172:serial.c      ****       txcnt3 = 0;
 854              		.loc 1 172 14 view .LVU225
 855 000a 0022     		movs	r2, #0
 856 000c 1A80     		strh	r2, [r3]	@ movhi
 857              		.loc 1 173 7 is_stmt 1 view .LVU226
 858 000e 40F22771 		movw	r1, #1831
 859 0012 0122     		movs	r2, #1
 860 0014 FFF7FEFF 		bl	USART_ITConfig
 861              	.LVL47:
 174:serial.c      ****       tx_led = 1;
 862              		.loc 1 174 7 view .LVU227
 863              		.loc 1 174 14 is_stmt 0 view .LVU228
 864 0018 044B     		ldr	r3, .L74+12
 865 001a 0122     		movs	r2, #1
 866 001c 1A70     		strb	r2, [r3]
 175:serial.c      **** }
 867              		.loc 1 175 1 view .LVU229
 868 001e 08BD     		pop	{r3, pc}
 869              	.L75:
 870              		.align	2
 871              	.L74:
 872 0020 00000000 		.word	maxtx3
 873 0024 00000000 		.word	txcnt3
 874 0028 00480040 		.word	1073760256
 875 002c 00000000 		.word	tx_led
 876              		.cfi_endproc
 877              	.LFE132:
 879              		.section	.text.receive_check1,"ax",%progbits
 880              		.align	1
 881              		.global	receive_check1
 882              		.syntax unified
 883              		.thumb
 884              		.thumb_func
 886              	receive_check1:
 887              	.LFB133:
 176:serial.c      **** 
 177:serial.c      **** 
 178:serial.c      **** void receive_check1 (void)
 179:serial.c      **** {
 888              		.loc 1 179 1 is_stmt 1 view -0
 889              		.cfi_startproc
 890              		@ args = 0, pretend = 0, frame = 0
 891              		@ frame_needed = 0, uses_anonymous_args = 0
 180:serial.c      ****       unsigned char bcc,idx;
 892              		.loc 1 180 7 view .LVU231
 181:serial.c      ****       if (rxcnt1) {
 893              		.loc 1 181 7 view .LVU232
 179:serial.c      ****       unsigned char bcc,idx;
 894              		.loc 1 179 1 is_stmt 0 view .LVU233
 895 0000 38B5     		push	{r3, r4, r5, lr}
 896              		.cfi_def_cfa_offset 16
 897              		.cfi_offset 3, -16
 898              		.cfi_offset 4, -12
 899              		.cfi_offset 5, -8
 900              		.cfi_offset 14, -4
 901              		.loc 1 181 11 view .LVU234
 902 0002 1A4C     		ldr	r4, .L83
 903 0004 2388     		ldrh	r3, [r4]
 904 0006 9BB2     		uxth	r3, r3
 905              		.loc 1 181 10 view .LVU235
 906 0008 5BB3     		cbz	r3, .L77
 182:serial.c      ****          if ((rxbuff1[0] == STX) && (rxbuff1[5] == ETX) && ((rxbuff1[1] == this_id) || (rxbuff1[1] 
 907              		.loc 1 182 10 is_stmt 1 view .LVU236
 908              		.loc 1 182 22 is_stmt 0 view .LVU237
 909 000a 194A     		ldr	r2, .L83+4
 910              		.loc 1 182 13 view .LVU238
 911 000c 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 912 000e 022B     		cmp	r3, #2
 913 0010 1FD1     		bne	.L78
 914              		.loc 1 182 34 discriminator 1 view .LVU239
 915 0012 5379     		ldrb	r3, [r2, #5]	@ zero_extendqisi2
 916 0014 032B     		cmp	r3, #3
 917 0016 1CD1     		bne	.L78
 918              		.loc 1 182 73 discriminator 2 view .LVU240
 919 0018 1649     		ldr	r1, .L83+8
 920              		.loc 1 182 69 discriminator 2 view .LVU241
 921 001a 5378     		ldrb	r3, [r2, #1]	@ zero_extendqisi2
 922              		.loc 1 182 73 discriminator 2 view .LVU242
 923 001c 0978     		ldrb	r1, [r1]	@ zero_extendqisi2
 924              		.loc 1 182 57 discriminator 2 view .LVU243
 925 001e 8B42     		cmp	r3, r1
 926 0020 01D0     		beq	.L79
 927              		.loc 1 182 85 discriminator 3 view .LVU244
 928 0022 212B     		cmp	r3, #33
 929 0024 15D1     		bne	.L78
 930              	.L79:
 931              	.LVL48:
 183:serial.c      **** 	    bcc = rxbuff1[0];
 184:serial.c      **** 	    for (idx=1;idx<6;idx++) bcc = bcc ^ rxbuff1[idx];
 932              		.loc 1 184 30 is_stmt 1 view .LVU245
 933              		.loc 1 184 49 is_stmt 0 view .LVU246
 934 0026 9078     		ldrb	r0, [r2, #2]	@ zero_extendqisi2
 935 0028 D578     		ldrb	r5, [r2, #3]	@ zero_extendqisi2
 936 002a 1179     		ldrb	r1, [r2, #4]	@ zero_extendqisi2
 185:serial.c      ****             if (bcc == rxbuff1[6]) {
 937              		.loc 1 185 16 view .LVU247
 938 002c 9279     		ldrb	r2, [r2, #6]	@ zero_extendqisi2
 184:serial.c      ****             if (bcc == rxbuff1[6]) {
 939              		.loc 1 184 34 view .LVU248
 940 002e 83F00203 		eor	r3, r3, #2
 941              	.LVL49:
 184:serial.c      ****             if (bcc == rxbuff1[6]) {
 942              		.loc 1 184 26 is_stmt 1 view .LVU249
 184:serial.c      ****             if (bcc == rxbuff1[6]) {
 943              		.loc 1 184 20 view .LVU250
 184:serial.c      ****             if (bcc == rxbuff1[6]) {
 944              		.loc 1 184 30 view .LVU251
 184:serial.c      ****             if (bcc == rxbuff1[6]) {
 945              		.loc 1 184 34 is_stmt 0 view .LVU252
 946 0032 4340     		eors	r3, r3, r0
 947              	.LVL50:
 184:serial.c      ****             if (bcc == rxbuff1[6]) {
 948              		.loc 1 184 26 is_stmt 1 view .LVU253
 184:serial.c      ****             if (bcc == rxbuff1[6]) {
 949              		.loc 1 184 20 view .LVU254
 184:serial.c      ****             if (bcc == rxbuff1[6]) {
 950              		.loc 1 184 30 view .LVU255
 184:serial.c      ****             if (bcc == rxbuff1[6]) {
 951              		.loc 1 184 34 is_stmt 0 view .LVU256
 952 0034 6B40     		eors	r3, r3, r5
 953              	.LVL51:
 184:serial.c      ****             if (bcc == rxbuff1[6]) {
 954              		.loc 1 184 26 is_stmt 1 view .LVU257
 184:serial.c      ****             if (bcc == rxbuff1[6]) {
 955              		.loc 1 184 20 view .LVU258
 184:serial.c      ****             if (bcc == rxbuff1[6]) {
 956              		.loc 1 184 30 view .LVU259
 184:serial.c      ****             if (bcc == rxbuff1[6]) {
 957              		.loc 1 184 34 is_stmt 0 view .LVU260
 958 0036 4B40     		eors	r3, r3, r1
 959              	.LVL52:
 184:serial.c      ****             if (bcc == rxbuff1[6]) {
 960              		.loc 1 184 26 is_stmt 1 view .LVU261
 184:serial.c      ****             if (bcc == rxbuff1[6]) {
 961              		.loc 1 184 20 view .LVU262
 184:serial.c      ****             if (bcc == rxbuff1[6]) {
 962              		.loc 1 184 30 view .LVU263
 184:serial.c      ****             if (bcc == rxbuff1[6]) {
 963              		.loc 1 184 26 view .LVU264
 184:serial.c      ****             if (bcc == rxbuff1[6]) {
 964              		.loc 1 184 20 view .LVU265
 965              		.loc 1 185 13 view .LVU266
 966              		.loc 1 185 16 is_stmt 0 view .LVU267
 967 0038 83F00303 		eor	r3, r3, #3
 968              	.LVL53:
 969              		.loc 1 185 16 view .LVU268
 970 003c 9A42     		cmp	r2, r3
 971 003e 08D1     		bne	.L78
 186:serial.c      **** 	       if ((rxbuff1[2] == 0xFF) && (rxbuff1[3] == 0xFF) && (rxbuff1[4] == 0xFF)) {
 972              		.loc 1 186 9 is_stmt 1 view .LVU269
 973              		.loc 1 186 58 is_stmt 0 view .LVU270
 974 0040 2840     		ands	r0, r0, r5
 975 0042 0140     		ands	r1, r1, r0
 976 0044 FF29     		cmp	r1, #255
 977 0046 04D1     		bne	.L78
 187:serial.c      **** 	       	  wm8978_volset(0);
 978              		.loc 1 187 12 is_stmt 1 view .LVU271
 979 0048 0020     		movs	r0, #0
 980 004a FFF7FEFF 		bl	wm8978_volset
 981              	.LVL54:
 188:serial.c      **** 	       	  NVIC_SystemReset();
 982              		.loc 1 188 12 view .LVU272
 983 004e FFF7FEFF 		bl	NVIC_SystemReset
 984              	.LVL55:
 985              	.L78:
 189:serial.c      **** 	       }
 190:serial.c      **** 	    }
 191:serial.c      ****          }
 192:serial.c      ****          bzero(rxbuff1,rxcnt1);
 986              		.loc 1 192 10 view .LVU273
 987 0052 2288     		ldrh	r2, [r4]
 988 0054 0648     		ldr	r0, .L83+4
 989 0056 92B2     		uxth	r2, r2
 990 0058 0021     		movs	r1, #0
 991 005a FFF7FEFF 		bl	memset
 992              	.LVL56:
 193:serial.c      ****          rxcnt1 = 0;
 993              		.loc 1 193 10 view .LVU274
 994              		.loc 1 193 17 is_stmt 0 view .LVU275
 995 005e 0023     		movs	r3, #0
 996 0060 2380     		strh	r3, [r4]	@ movhi
 997              	.L77:
 194:serial.c      ****       }
 195:serial.c      ****       rx_led = 0;
 998              		.loc 1 195 7 is_stmt 1 view .LVU276
 999              		.loc 1 195 14 is_stmt 0 view .LVU277
 1000 0062 054B     		ldr	r3, .L83+12
 1001 0064 0022     		movs	r2, #0
 1002 0066 1A70     		strb	r2, [r3]
 196:serial.c      **** }
 1003              		.loc 1 196 1 view .LVU278
 1004 0068 38BD     		pop	{r3, r4, r5, pc}
 1005              	.L84:
 1006 006a 00BF     		.align	2
 1007              	.L83:
 1008 006c 00000000 		.word	rxcnt1
 1009 0070 00000000 		.word	rxbuff1
 1010 0074 00000000 		.word	this_id
 1011 0078 00000000 		.word	rx_led
 1012              		.cfi_endproc
 1013              	.LFE133:
 1015              		.section	.text.receive_check2,"ax",%progbits
 1016              		.align	1
 1017              		.global	receive_check2
 1018              		.syntax unified
 1019              		.thumb
 1020              		.thumb_func
 1022              	receive_check2:
 1023              	.LFB134:
 197:serial.c      **** 
 198:serial.c      **** 
 199:serial.c      **** void receive_check2 (void)
 200:serial.c      **** {
 1024              		.loc 1 200 1 is_stmt 1 view -0
 1025              		.cfi_startproc
 1026              		@ args = 0, pretend = 0, frame = 0
 1027              		@ frame_needed = 0, uses_anonymous_args = 0
 201:serial.c      ****       unsigned char bcc,idx;
 1028              		.loc 1 201 7 view .LVU280
 202:serial.c      ****       if (rxcnt2) {
 1029              		.loc 1 202 7 view .LVU281
 200:serial.c      ****       unsigned char bcc,idx;
 1030              		.loc 1 200 1 is_stmt 0 view .LVU282
 1031 0000 38B5     		push	{r3, r4, r5, lr}
 1032              		.cfi_def_cfa_offset 16
 1033              		.cfi_offset 3, -16
 1034              		.cfi_offset 4, -12
 1035              		.cfi_offset 5, -8
 1036              		.cfi_offset 14, -4
 1037              		.loc 1 202 11 view .LVU283
 1038 0002 1A4C     		ldr	r4, .L92
 1039 0004 2388     		ldrh	r3, [r4]
 1040 0006 9BB2     		uxth	r3, r3
 1041              		.loc 1 202 10 view .LVU284
 1042 0008 5BB3     		cbz	r3, .L86
 203:serial.c      ****          if ((rxbuff2[0] == STX) && (rxbuff2[5] == ETX) && ((rxbuff2[1] == this_id) || (rxbuff2[1] 
 1043              		.loc 1 203 10 is_stmt 1 view .LVU285
 1044              		.loc 1 203 22 is_stmt 0 view .LVU286
 1045 000a 194A     		ldr	r2, .L92+4
 1046              		.loc 1 203 13 view .LVU287
 1047 000c 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 1048 000e 022B     		cmp	r3, #2
 1049 0010 1FD1     		bne	.L87
 1050              		.loc 1 203 34 discriminator 1 view .LVU288
 1051 0012 5379     		ldrb	r3, [r2, #5]	@ zero_extendqisi2
 1052 0014 032B     		cmp	r3, #3
 1053 0016 1CD1     		bne	.L87
 1054              		.loc 1 203 73 discriminator 2 view .LVU289
 1055 0018 1649     		ldr	r1, .L92+8
 1056              		.loc 1 203 69 discriminator 2 view .LVU290
 1057 001a 5378     		ldrb	r3, [r2, #1]	@ zero_extendqisi2
 1058              		.loc 1 203 73 discriminator 2 view .LVU291
 1059 001c 0978     		ldrb	r1, [r1]	@ zero_extendqisi2
 1060              		.loc 1 203 57 discriminator 2 view .LVU292
 1061 001e 8B42     		cmp	r3, r1
 1062 0020 01D0     		beq	.L88
 1063              		.loc 1 203 85 discriminator 3 view .LVU293
 1064 0022 212B     		cmp	r3, #33
 1065 0024 15D1     		bne	.L87
 1066              	.L88:
 1067              	.LVL57:
 204:serial.c      **** 	    bcc = rxbuff2[0];
 205:serial.c      **** 	    for (idx=1;idx<6;idx++) bcc = bcc ^ rxbuff2[idx];
 1068              		.loc 1 205 30 is_stmt 1 view .LVU294
 1069              		.loc 1 205 49 is_stmt 0 view .LVU295
 1070 0026 9078     		ldrb	r0, [r2, #2]	@ zero_extendqisi2
 1071 0028 D578     		ldrb	r5, [r2, #3]	@ zero_extendqisi2
 1072 002a 1179     		ldrb	r1, [r2, #4]	@ zero_extendqisi2
 206:serial.c      ****             if (bcc == rxbuff2[6]) {
 1073              		.loc 1 206 16 view .LVU296
 1074 002c 9279     		ldrb	r2, [r2, #6]	@ zero_extendqisi2
 205:serial.c      ****             if (bcc == rxbuff2[6]) {
 1075              		.loc 1 205 34 view .LVU297
 1076 002e 83F00203 		eor	r3, r3, #2
 1077              	.LVL58:
 205:serial.c      ****             if (bcc == rxbuff2[6]) {
 1078              		.loc 1 205 26 is_stmt 1 view .LVU298
 205:serial.c      ****             if (bcc == rxbuff2[6]) {
 1079              		.loc 1 205 20 view .LVU299
 205:serial.c      ****             if (bcc == rxbuff2[6]) {
 1080              		.loc 1 205 30 view .LVU300
 205:serial.c      ****             if (bcc == rxbuff2[6]) {
 1081              		.loc 1 205 34 is_stmt 0 view .LVU301
 1082 0032 4340     		eors	r3, r3, r0
 1083              	.LVL59:
 205:serial.c      ****             if (bcc == rxbuff2[6]) {
 1084              		.loc 1 205 26 is_stmt 1 view .LVU302
 205:serial.c      ****             if (bcc == rxbuff2[6]) {
 1085              		.loc 1 205 20 view .LVU303
 205:serial.c      ****             if (bcc == rxbuff2[6]) {
 1086              		.loc 1 205 30 view .LVU304
 205:serial.c      ****             if (bcc == rxbuff2[6]) {
 1087              		.loc 1 205 34 is_stmt 0 view .LVU305
 1088 0034 6B40     		eors	r3, r3, r5
 1089              	.LVL60:
 205:serial.c      ****             if (bcc == rxbuff2[6]) {
 1090              		.loc 1 205 26 is_stmt 1 view .LVU306
 205:serial.c      ****             if (bcc == rxbuff2[6]) {
 1091              		.loc 1 205 20 view .LVU307
 205:serial.c      ****             if (bcc == rxbuff2[6]) {
 1092              		.loc 1 205 30 view .LVU308
 205:serial.c      ****             if (bcc == rxbuff2[6]) {
 1093              		.loc 1 205 34 is_stmt 0 view .LVU309
 1094 0036 4B40     		eors	r3, r3, r1
 1095              	.LVL61:
 205:serial.c      ****             if (bcc == rxbuff2[6]) {
 1096              		.loc 1 205 26 is_stmt 1 view .LVU310
 205:serial.c      ****             if (bcc == rxbuff2[6]) {
 1097              		.loc 1 205 20 view .LVU311
 205:serial.c      ****             if (bcc == rxbuff2[6]) {
 1098              		.loc 1 205 30 view .LVU312
 205:serial.c      ****             if (bcc == rxbuff2[6]) {
 1099              		.loc 1 205 26 view .LVU313
 205:serial.c      ****             if (bcc == rxbuff2[6]) {
 1100              		.loc 1 205 20 view .LVU314
 1101              		.loc 1 206 13 view .LVU315
 1102              		.loc 1 206 16 is_stmt 0 view .LVU316
 1103 0038 83F00303 		eor	r3, r3, #3
 1104              	.LVL62:
 1105              		.loc 1 206 16 view .LVU317
 1106 003c 9A42     		cmp	r2, r3
 1107 003e 08D1     		bne	.L87
 207:serial.c      **** 	       if ((rxbuff2[2] == 0xFF) && (rxbuff2[3] == 0xFF) && (rxbuff2[4] == 0xFF)) {
 1108              		.loc 1 207 9 is_stmt 1 view .LVU318
 1109              		.loc 1 207 58 is_stmt 0 view .LVU319
 1110 0040 2840     		ands	r0, r0, r5
 1111 0042 0140     		ands	r1, r1, r0
 1112 0044 FF29     		cmp	r1, #255
 1113 0046 04D1     		bne	.L87
 208:serial.c      **** 	       	  wm8978_volset(0);
 1114              		.loc 1 208 12 is_stmt 1 view .LVU320
 1115 0048 0020     		movs	r0, #0
 1116 004a FFF7FEFF 		bl	wm8978_volset
 1117              	.LVL63:
 209:serial.c      **** 	       	  NVIC_SystemReset();
 1118              		.loc 1 209 12 view .LVU321
 1119 004e FFF7FEFF 		bl	NVIC_SystemReset
 1120              	.LVL64:
 1121              	.L87:
 210:serial.c      **** 	       }
 211:serial.c      **** 	    }
 212:serial.c      ****          }
 213:serial.c      ****          bzero(rxbuff2,rxcnt2);
 1122              		.loc 1 213 10 view .LVU322
 1123 0052 2288     		ldrh	r2, [r4]
 1124 0054 0648     		ldr	r0, .L92+4
 1125 0056 92B2     		uxth	r2, r2
 1126 0058 0021     		movs	r1, #0
 1127 005a FFF7FEFF 		bl	memset
 1128              	.LVL65:
 214:serial.c      ****          rxcnt2 = 0;
 1129              		.loc 1 214 10 view .LVU323
 1130              		.loc 1 214 17 is_stmt 0 view .LVU324
 1131 005e 0023     		movs	r3, #0
 1132 0060 2380     		strh	r3, [r4]	@ movhi
 1133              	.L86:
 215:serial.c      ****       }
 216:serial.c      ****       rx_led = 0;
 1134              		.loc 1 216 7 is_stmt 1 view .LVU325
 1135              		.loc 1 216 14 is_stmt 0 view .LVU326
 1136 0062 054B     		ldr	r3, .L92+12
 1137 0064 0022     		movs	r2, #0
 1138 0066 1A70     		strb	r2, [r3]
 217:serial.c      **** }
 1139              		.loc 1 217 1 view .LVU327
 1140 0068 38BD     		pop	{r3, r4, r5, pc}
 1141              	.L93:
 1142 006a 00BF     		.align	2
 1143              	.L92:
 1144 006c 00000000 		.word	rxcnt2
 1145 0070 00000000 		.word	rxbuff2
 1146 0074 00000000 		.word	this_id
 1147 0078 00000000 		.word	rx_led
 1148              		.cfi_endproc
 1149              	.LFE134:
 1151              		.section	.text.receive_check3,"ax",%progbits
 1152              		.align	1
 1153              		.global	receive_check3
 1154              		.syntax unified
 1155              		.thumb
 1156              		.thumb_func
 1158              	receive_check3:
 1159              	.LFB135:
 218:serial.c      **** 
 219:serial.c      **** 
 220:serial.c      **** void receive_check3 (void)
 221:serial.c      **** {
 1160              		.loc 1 221 1 is_stmt 1 view -0
 1161              		.cfi_startproc
 1162              		@ args = 0, pretend = 0, frame = 0
 1163              		@ frame_needed = 0, uses_anonymous_args = 0
 222:serial.c      ****       unsigned char bcc,idx;
 1164              		.loc 1 222 7 view .LVU329
 223:serial.c      ****       if (rxcnt3) {
 1165              		.loc 1 223 7 view .LVU330
 221:serial.c      ****       unsigned char bcc,idx;
 1166              		.loc 1 221 1 is_stmt 0 view .LVU331
 1167 0000 38B5     		push	{r3, r4, r5, lr}
 1168              		.cfi_def_cfa_offset 16
 1169              		.cfi_offset 3, -16
 1170              		.cfi_offset 4, -12
 1171              		.cfi_offset 5, -8
 1172              		.cfi_offset 14, -4
 1173              		.loc 1 223 11 view .LVU332
 1174 0002 1A4C     		ldr	r4, .L101
 1175 0004 2388     		ldrh	r3, [r4]
 1176 0006 9BB2     		uxth	r3, r3
 1177              		.loc 1 223 10 view .LVU333
 1178 0008 5BB3     		cbz	r3, .L95
 224:serial.c      ****          if ((rxbuff3[0] == STX) && (rxbuff3[5] == ETX) && ((rxbuff3[1] == this_id) || (rxbuff3[1] 
 1179              		.loc 1 224 10 is_stmt 1 view .LVU334
 1180              		.loc 1 224 22 is_stmt 0 view .LVU335
 1181 000a 194A     		ldr	r2, .L101+4
 1182              		.loc 1 224 13 view .LVU336
 1183 000c 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 1184 000e 022B     		cmp	r3, #2
 1185 0010 1FD1     		bne	.L96
 1186              		.loc 1 224 34 discriminator 1 view .LVU337
 1187 0012 5379     		ldrb	r3, [r2, #5]	@ zero_extendqisi2
 1188 0014 032B     		cmp	r3, #3
 1189 0016 1CD1     		bne	.L96
 1190              		.loc 1 224 73 discriminator 2 view .LVU338
 1191 0018 1649     		ldr	r1, .L101+8
 1192              		.loc 1 224 69 discriminator 2 view .LVU339
 1193 001a 5378     		ldrb	r3, [r2, #1]	@ zero_extendqisi2
 1194              		.loc 1 224 73 discriminator 2 view .LVU340
 1195 001c 0978     		ldrb	r1, [r1]	@ zero_extendqisi2
 1196              		.loc 1 224 57 discriminator 2 view .LVU341
 1197 001e 8B42     		cmp	r3, r1
 1198 0020 01D0     		beq	.L97
 1199              		.loc 1 224 85 discriminator 3 view .LVU342
 1200 0022 212B     		cmp	r3, #33
 1201 0024 15D1     		bne	.L96
 1202              	.L97:
 1203              	.LVL66:
 225:serial.c      **** 	    bcc = rxbuff3[0];
 226:serial.c      **** 	    for (idx=1;idx<6;idx++) bcc = bcc ^ rxbuff3[idx];
 1204              		.loc 1 226 30 is_stmt 1 view .LVU343
 1205              		.loc 1 226 49 is_stmt 0 view .LVU344
 1206 0026 9078     		ldrb	r0, [r2, #2]	@ zero_extendqisi2
 1207 0028 D578     		ldrb	r5, [r2, #3]	@ zero_extendqisi2
 1208 002a 1179     		ldrb	r1, [r2, #4]	@ zero_extendqisi2
 227:serial.c      ****             if (bcc == rxbuff3[6]) {
 1209              		.loc 1 227 16 view .LVU345
 1210 002c 9279     		ldrb	r2, [r2, #6]	@ zero_extendqisi2
 226:serial.c      ****             if (bcc == rxbuff3[6]) {
 1211              		.loc 1 226 34 view .LVU346
 1212 002e 83F00203 		eor	r3, r3, #2
 1213              	.LVL67:
 226:serial.c      ****             if (bcc == rxbuff3[6]) {
 1214              		.loc 1 226 26 is_stmt 1 view .LVU347
 226:serial.c      ****             if (bcc == rxbuff3[6]) {
 1215              		.loc 1 226 20 view .LVU348
 226:serial.c      ****             if (bcc == rxbuff3[6]) {
 1216              		.loc 1 226 30 view .LVU349
 226:serial.c      ****             if (bcc == rxbuff3[6]) {
 1217              		.loc 1 226 34 is_stmt 0 view .LVU350
 1218 0032 4340     		eors	r3, r3, r0
 1219              	.LVL68:
 226:serial.c      ****             if (bcc == rxbuff3[6]) {
 1220              		.loc 1 226 26 is_stmt 1 view .LVU351
 226:serial.c      ****             if (bcc == rxbuff3[6]) {
 1221              		.loc 1 226 20 view .LVU352
 226:serial.c      ****             if (bcc == rxbuff3[6]) {
 1222              		.loc 1 226 30 view .LVU353
 226:serial.c      ****             if (bcc == rxbuff3[6]) {
 1223              		.loc 1 226 34 is_stmt 0 view .LVU354
 1224 0034 6B40     		eors	r3, r3, r5
 1225              	.LVL69:
 226:serial.c      ****             if (bcc == rxbuff3[6]) {
 1226              		.loc 1 226 26 is_stmt 1 view .LVU355
 226:serial.c      ****             if (bcc == rxbuff3[6]) {
 1227              		.loc 1 226 20 view .LVU356
 226:serial.c      ****             if (bcc == rxbuff3[6]) {
 1228              		.loc 1 226 30 view .LVU357
 226:serial.c      ****             if (bcc == rxbuff3[6]) {
 1229              		.loc 1 226 34 is_stmt 0 view .LVU358
 1230 0036 4B40     		eors	r3, r3, r1
 1231              	.LVL70:
 226:serial.c      ****             if (bcc == rxbuff3[6]) {
 1232              		.loc 1 226 26 is_stmt 1 view .LVU359
 226:serial.c      ****             if (bcc == rxbuff3[6]) {
 1233              		.loc 1 226 20 view .LVU360
 226:serial.c      ****             if (bcc == rxbuff3[6]) {
 1234              		.loc 1 226 30 view .LVU361
 226:serial.c      ****             if (bcc == rxbuff3[6]) {
 1235              		.loc 1 226 26 view .LVU362
 226:serial.c      ****             if (bcc == rxbuff3[6]) {
 1236              		.loc 1 226 20 view .LVU363
 1237              		.loc 1 227 13 view .LVU364
 1238              		.loc 1 227 16 is_stmt 0 view .LVU365
 1239 0038 83F00303 		eor	r3, r3, #3
 1240              	.LVL71:
 1241              		.loc 1 227 16 view .LVU366
 1242 003c 9A42     		cmp	r2, r3
 1243 003e 08D1     		bne	.L96
 228:serial.c      **** 	       if ((rxbuff3[2] == 0xFF) && (rxbuff3[3] == 0xFF) && (rxbuff3[4] == 0xFF)) {
 1244              		.loc 1 228 9 is_stmt 1 view .LVU367
 1245              		.loc 1 228 58 is_stmt 0 view .LVU368
 1246 0040 2840     		ands	r0, r0, r5
 1247 0042 0140     		ands	r1, r1, r0
 1248 0044 FF29     		cmp	r1, #255
 1249 0046 04D1     		bne	.L96
 229:serial.c      **** 	       	  wm8978_volset(0);
 1250              		.loc 1 229 12 is_stmt 1 view .LVU369
 1251 0048 0020     		movs	r0, #0
 1252 004a FFF7FEFF 		bl	wm8978_volset
 1253              	.LVL72:
 230:serial.c      **** 	       	  NVIC_SystemReset();
 1254              		.loc 1 230 12 view .LVU370
 1255 004e FFF7FEFF 		bl	NVIC_SystemReset
 1256              	.LVL73:
 1257              	.L96:
 231:serial.c      **** 	       }
 232:serial.c      **** 	    }
 233:serial.c      ****          }
 234:serial.c      ****          bzero(rxbuff3,rxcnt3);
 1258              		.loc 1 234 10 view .LVU371
 1259 0052 2288     		ldrh	r2, [r4]
 1260 0054 0648     		ldr	r0, .L101+4
 1261 0056 92B2     		uxth	r2, r2
 1262 0058 0021     		movs	r1, #0
 1263 005a FFF7FEFF 		bl	memset
 1264              	.LVL74:
 235:serial.c      ****          rxcnt3 = 0;
 1265              		.loc 1 235 10 view .LVU372
 1266              		.loc 1 235 17 is_stmt 0 view .LVU373
 1267 005e 0023     		movs	r3, #0
 1268 0060 2380     		strh	r3, [r4]	@ movhi
 1269              	.L95:
 236:serial.c      ****       }
 237:serial.c      ****       rx_led = 0;
 1270              		.loc 1 237 7 is_stmt 1 view .LVU374
 1271              		.loc 1 237 14 is_stmt 0 view .LVU375
 1272 0062 054B     		ldr	r3, .L101+12
 1273 0064 0022     		movs	r2, #0
 1274 0066 1A70     		strb	r2, [r3]
 238:serial.c      **** }
 1275              		.loc 1 238 1 view .LVU376
 1276 0068 38BD     		pop	{r3, r4, r5, pc}
 1277              	.L102:
 1278 006a 00BF     		.align	2
 1279              	.L101:
 1280 006c 00000000 		.word	rxcnt3
 1281 0070 00000000 		.word	rxbuff3
 1282 0074 00000000 		.word	this_id
 1283 0078 00000000 		.word	rx_led
 1284              		.cfi_endproc
 1285              	.LFE135:
 1287              		.section	.text.serial_check,"ax",%progbits
 1288              		.align	1
 1289              		.global	serial_check
 1290              		.syntax unified
 1291              		.thumb
 1292              		.thumb_func
 1294              	serial_check:
 1295              	.LFB136:
 239:serial.c      **** 
 240:serial.c      **** 
 241:serial.c      **** void serial_check (void)
 242:serial.c      **** {
 1296              		.loc 1 242 1 is_stmt 1 view -0
 1297              		.cfi_startproc
 1298              		@ args = 0, pretend = 0, frame = 0
 1299              		@ frame_needed = 0, uses_anonymous_args = 0
 243:serial.c      ****       if ((rxcnt1 != 0) && (rxck1 >= 3)) {
 1300              		.loc 1 243 7 view .LVU378
 242:serial.c      ****       if ((rxcnt1 != 0) && (rxck1 >= 3)) {
 1301              		.loc 1 242 1 is_stmt 0 view .LVU379
 1302 0000 08B5     		push	{r3, lr}
 1303              		.cfi_def_cfa_offset 8
 1304              		.cfi_offset 3, -8
 1305              		.cfi_offset 14, -4
 1306              		.loc 1 243 19 view .LVU380
 1307 0002 134B     		ldr	r3, .L116
 1308 0004 1B88     		ldrh	r3, [r3]
 1309 0006 9BB2     		uxth	r3, r3
 1310              		.loc 1 243 10 view .LVU381
 1311 0008 3BB1     		cbz	r3, .L104
 1312              		.loc 1 243 35 discriminator 1 view .LVU382
 1313 000a 124B     		ldr	r3, .L116+4
 1314 000c 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1315              		.loc 1 243 25 discriminator 1 view .LVU383
 1316 000e 022A     		cmp	r2, #2
 1317 0010 03D9     		bls	.L104
 244:serial.c      ****          rxck1 = 0;
 1318              		.loc 1 244 10 is_stmt 1 view .LVU384
 1319              		.loc 1 244 16 is_stmt 0 view .LVU385
 1320 0012 0022     		movs	r2, #0
 1321 0014 1A70     		strb	r2, [r3]
 245:serial.c      ****          receive_check1();
 1322              		.loc 1 245 10 is_stmt 1 view .LVU386
 1323 0016 FFF7FEFF 		bl	receive_check1
 1324              	.LVL75:
 1325              	.L104:
 246:serial.c      ****       }
 247:serial.c      ****       if ((rxcnt2 != 0) && (rxck2 >= 3)) {
 1326              		.loc 1 247 7 view .LVU387
 1327              		.loc 1 247 19 is_stmt 0 view .LVU388
 1328 001a 0F4B     		ldr	r3, .L116+8
 1329 001c 1B88     		ldrh	r3, [r3]
 1330 001e 9BB2     		uxth	r3, r3
 1331              		.loc 1 247 10 view .LVU389
 1332 0020 3BB1     		cbz	r3, .L105
 1333              		.loc 1 247 35 discriminator 1 view .LVU390
 1334 0022 0E4B     		ldr	r3, .L116+12
 1335 0024 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1336              		.loc 1 247 25 discriminator 1 view .LVU391
 1337 0026 022A     		cmp	r2, #2
 1338 0028 03D9     		bls	.L105
 248:serial.c      ****          rxck2 = 0;
 1339              		.loc 1 248 10 is_stmt 1 view .LVU392
 1340              		.loc 1 248 16 is_stmt 0 view .LVU393
 1341 002a 0022     		movs	r2, #0
 1342 002c 1A70     		strb	r2, [r3]
 249:serial.c      ****          receive_check2();
 1343              		.loc 1 249 10 is_stmt 1 view .LVU394
 1344 002e FFF7FEFF 		bl	receive_check2
 1345              	.LVL76:
 1346              	.L105:
 250:serial.c      ****       }
 251:serial.c      ****       if ((rxcnt3 != 0) && (rxck3 >= 3)) {
 1347              		.loc 1 251 7 view .LVU395
 1348              		.loc 1 251 19 is_stmt 0 view .LVU396
 1349 0032 0B4B     		ldr	r3, .L116+16
 1350 0034 1B88     		ldrh	r3, [r3]
 1351 0036 9BB2     		uxth	r3, r3
 1352              		.loc 1 251 10 view .LVU397
 1353 0038 4BB1     		cbz	r3, .L103
 1354              		.loc 1 251 35 discriminator 1 view .LVU398
 1355 003a 0A4B     		ldr	r3, .L116+20
 1356 003c 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1357              		.loc 1 251 25 discriminator 1 view .LVU399
 1358 003e 022A     		cmp	r2, #2
 1359 0040 05D9     		bls	.L103
 252:serial.c      ****          rxck3 = 0;
 1360              		.loc 1 252 10 is_stmt 1 view .LVU400
 1361              		.loc 1 252 16 is_stmt 0 view .LVU401
 1362 0042 0022     		movs	r2, #0
 1363 0044 1A70     		strb	r2, [r3]
 253:serial.c      ****          receive_check3();
 1364              		.loc 1 253 10 is_stmt 1 view .LVU402
 254:serial.c      ****       }
 255:serial.c      **** }
 1365              		.loc 1 255 1 is_stmt 0 view .LVU403
 1366 0046 BDE80840 		pop	{r3, lr}
 1367              		.cfi_remember_state
 1368              		.cfi_restore 14
 1369              		.cfi_restore 3
 1370              		.cfi_def_cfa_offset 0
 253:serial.c      ****          receive_check3();
 1371              		.loc 1 253 10 view .LVU404
 1372 004a FFF7FEBF 		b	receive_check3
 1373              	.LVL77:
 1374              	.L103:
 1375              		.cfi_restore_state
 1376              		.loc 1 255 1 view .LVU405
 1377 004e 08BD     		pop	{r3, pc}
 1378              	.L117:
 1379              		.align	2
 1380              	.L116:
 1381 0050 00000000 		.word	rxcnt1
 1382 0054 00000000 		.word	rxck1
 1383 0058 00000000 		.word	rxcnt2
 1384 005c 00000000 		.word	rxck2
 1385 0060 00000000 		.word	rxcnt3
 1386 0064 00000000 		.word	rxck3
 1387              		.cfi_endproc
 1388              	.LFE136:
 1390              		.section	.text.serial_init,"ax",%progbits
 1391              		.align	1
 1392              		.global	serial_init
 1393              		.syntax unified
 1394              		.thumb
 1395              		.thumb_func
 1397              	serial_init:
 1398              	.LFB137:
 256:serial.c      **** 
 257:serial.c      **** 
 258:serial.c      **** void serial_init (void)
 259:serial.c      **** {
 1399              		.loc 1 259 1 is_stmt 1 view -0
 1400              		.cfi_startproc
 1401              		@ args = 0, pretend = 0, frame = 24
 1402              		@ frame_needed = 0, uses_anonymous_args = 0
 260:serial.c      ****       USART_InitTypeDef	USART_InitStructure;
 1403              		.loc 1 260 7 view .LVU407
 261:serial.c      ****       NVIC_InitTypeDef NVIC_InitStructure;
 1404              		.loc 1 261 7 view .LVU408
 262:serial.c      ****       USART1_PORT = 0;
 1405              		.loc 1 262 7 view .LVU409
 263:serial.c      ****       USART3_PORT = 0;
 264:serial.c      ****       rxcnt1 = 0;
 1406              		.loc 1 264 14 is_stmt 0 view .LVU410
 1407 0000 874A     		ldr	r2, .L127
 262:serial.c      ****       USART1_PORT = 0;
 1408              		.loc 1 262 19 view .LVU411
 1409 0002 0023     		movs	r3, #0
 259:serial.c      ****       USART_InitTypeDef	USART_InitStructure;
 1410              		.loc 1 259 1 view .LVU412
 1411 0004 30B5     		push	{r4, r5, lr}
 1412              		.cfi_def_cfa_offset 12
 1413              		.cfi_offset 4, -12
 1414              		.cfi_offset 5, -8
 1415              		.cfi_offset 14, -4
 1416              		.loc 1 264 14 view .LVU413
 1417 0006 1380     		strh	r3, [r2]	@ movhi
 265:serial.c      ****       txcnt1 = 0;
 1418              		.loc 1 265 14 view .LVU414
 1419 0008 864A     		ldr	r2, .L127+4
 262:serial.c      ****       USART3_PORT = 0;
 1420              		.loc 1 262 19 view .LVU415
 1421 000a 874D     		ldr	r5, .L127+8
 1422              		.loc 1 265 14 view .LVU416
 1423 000c 1380     		strh	r3, [r2]	@ movhi
 266:serial.c      ****       maxtx1 = 0;
 1424              		.loc 1 266 14 view .LVU417
 1425 000e 874A     		ldr	r2, .L127+12
 263:serial.c      ****       rxcnt1 = 0;
 1426              		.loc 1 263 19 view .LVU418
 1427 0010 874C     		ldr	r4, .L127+16
 1428              		.loc 1 266 14 view .LVU419
 1429 0012 1380     		strh	r3, [r2]	@ movhi
 267:serial.c      ****       rxcnt2 = 0;
 1430              		.loc 1 267 14 view .LVU420
 1431 0014 874A     		ldr	r2, .L127+20
 262:serial.c      ****       USART3_PORT = 0;
 1432              		.loc 1 262 19 view .LVU421
 1433 0016 2B70     		strb	r3, [r5]
 263:serial.c      ****       rxcnt1 = 0;
 1434              		.loc 1 263 7 is_stmt 1 view .LVU422
 1435              		.loc 1 267 14 is_stmt 0 view .LVU423
 1436 0018 1380     		strh	r3, [r2]	@ movhi
 268:serial.c      ****       txcnt2 = 0;
 1437              		.loc 1 268 14 view .LVU424
 1438 001a 874A     		ldr	r2, .L127+24
 263:serial.c      ****       rxcnt1 = 0;
 1439              		.loc 1 263 19 view .LVU425
 1440 001c 2370     		strb	r3, [r4]
 264:serial.c      ****       txcnt1 = 0;
 1441              		.loc 1 264 7 is_stmt 1 view .LVU426
 265:serial.c      ****       maxtx1 = 0;
 1442              		.loc 1 265 7 view .LVU427
 266:serial.c      ****       rxcnt2 = 0;
 1443              		.loc 1 266 7 view .LVU428
 267:serial.c      ****       txcnt2 = 0;
 1444              		.loc 1 267 7 view .LVU429
 1445              		.loc 1 268 7 view .LVU430
 1446              		.loc 1 268 14 is_stmt 0 view .LVU431
 1447 001e 1380     		strh	r3, [r2]	@ movhi
 269:serial.c      ****       maxtx2 = 0;
 1448              		.loc 1 269 7 is_stmt 1 view .LVU432
 1449              		.loc 1 269 14 is_stmt 0 view .LVU433
 1450 0020 864A     		ldr	r2, .L127+28
 1451 0022 1380     		strh	r3, [r2]	@ movhi
 270:serial.c      ****       rxcnt3 = 0;
 1452              		.loc 1 270 7 is_stmt 1 view .LVU434
 1453              		.loc 1 270 14 is_stmt 0 view .LVU435
 1454 0024 864A     		ldr	r2, .L127+32
 1455 0026 1380     		strh	r3, [r2]	@ movhi
 271:serial.c      ****       txcnt3 = 0;
 1456              		.loc 1 271 7 is_stmt 1 view .LVU436
 1457              		.loc 1 271 14 is_stmt 0 view .LVU437
 1458 0028 864A     		ldr	r2, .L127+36
 1459 002a 1380     		strh	r3, [r2]	@ movhi
 272:serial.c      ****       maxtx3 = 0;
 1460              		.loc 1 272 7 is_stmt 1 view .LVU438
 1461              		.loc 1 272 14 is_stmt 0 view .LVU439
 1462 002c 864A     		ldr	r2, .L127+40
 259:serial.c      ****       USART_InitTypeDef	USART_InitStructure;
 1463              		.loc 1 259 1 view .LVU440
 1464 002e 87B0     		sub	sp, sp, #28
 1465              		.cfi_def_cfa_offset 40
 1466              		.loc 1 272 14 view .LVU441
 1467 0030 1380     		strh	r3, [r2]	@ movhi
 273:serial.c      ****       /* Enable the USART1 Interrupt */
 274:serial.c      ****       NVIC_InitStructure.NVIC_IRQChannel = USART1_IRQn;
 1468              		.loc 1 274 7 is_stmt 1 view .LVU442
 275:serial.c      ****       NVIC_InitStructure.NVIC_IRQChannelPreemptionPriority = 2;
 1469              		.loc 1 275 7 view .LVU443
 276:serial.c      ****       NVIC_InitStructure.NVIC_IRQChannelSubPriority = 0;
 1470              		.loc 1 276 7 view .LVU444
 277:serial.c      ****       NVIC_InitStructure.NVIC_IRQChannelCmd = ENABLE;
 1471              		.loc 1 277 7 view .LVU445
 278:serial.c      ****       NVIC_Init(&NVIC_InitStructure);
 1472              		.loc 1 278 7 is_stmt 0 view .LVU446
 1473 0032 01A8     		add	r0, sp, #4
 274:serial.c      ****       NVIC_InitStructure.NVIC_IRQChannelPreemptionPriority = 2;
 1474              		.loc 1 274 42 view .LVU447
 1475 0034 854B     		ldr	r3, .L127+44
 1476 0036 0193     		str	r3, [sp, #4]
 1477              		.loc 1 278 7 is_stmt 1 view .LVU448
 1478 0038 FFF7FEFF 		bl	NVIC_Init
 1479              	.LVL78:
 279:serial.c      ****       switch (USART1_PORT) {
 1480              		.loc 1 279 7 view .LVU449
 1481 003c 2B78     		ldrb	r3, [r5]	@ zero_extendqisi2
 1482 003e 002B     		cmp	r3, #0
 1483 0040 00F09280 		beq	.L119
 1484 0044 012B     		cmp	r3, #1
 1485 0046 00F0A880 		beq	.L120
 1486              	.L121:
 280:serial.c      ****          case 0:
 281:serial.c      ****            GPIO_PinAFConfig(GPIOA,GPIO_PinSource9,GPIO_AF_USART1);
 282:serial.c      ****            GPIO_PinAFConfig(GPIOA,GPIO_PinSource10,GPIO_AF_USART1);
 283:serial.c      ****            GPIO_Init_Pin(GPIOA,TXD1,GPIO_Speed_100MHz,GPIO_Mode_AF_PP_PU);
 284:serial.c      ****            GPIO_Init_Pin(GPIOA,RXD1,GPIO_Speed_100MHz,GPIO_Mode_AF_PP_PU);
 285:serial.c      ****            break;
 286:serial.c      ****          case 1:
 287:serial.c      ****            GPIO_PinAFConfig(GPIOB,GPIO_PinSource6,GPIO_AF_USART1);
 288:serial.c      ****            GPIO_PinAFConfig(GPIOB,GPIO_PinSource7,GPIO_AF_USART1);
 289:serial.c      ****            GPIO_Init_Pin(GPIOB,GPIO_Pin_6,GPIO_Speed_100MHz,GPIO_Mode_AF_PP_PU);
 290:serial.c      ****            GPIO_Init_Pin(GPIOB,GPIO_Pin_7,GPIO_Speed_100MHz,GPIO_Mode_AF_PP_PU);
 291:serial.c      ****            break;
 292:serial.c      ****       }
 293:serial.c      ****       /* Enable the USART2 Interrupt */
 294:serial.c      ****       NVIC_InitStructure.NVIC_IRQChannel = USART2_IRQn;
 1487              		.loc 1 294 7 view .LVU450
 295:serial.c      ****       NVIC_InitStructure.NVIC_IRQChannelPreemptionPriority = 2;
 1488              		.loc 1 295 7 view .LVU451
 296:serial.c      ****       NVIC_InitStructure.NVIC_IRQChannelSubPriority = 0;
 1489              		.loc 1 296 7 view .LVU452
 297:serial.c      ****       NVIC_InitStructure.NVIC_IRQChannelCmd = ENABLE;
 1490              		.loc 1 297 7 view .LVU453
 294:serial.c      ****       NVIC_InitStructure.NVIC_IRQChannelPreemptionPriority = 2;
 1491              		.loc 1 294 42 is_stmt 0 view .LVU454
 1492 004a 814B     		ldr	r3, .L127+48
 1493 004c 0193     		str	r3, [sp, #4]
 298:serial.c      ****       NVIC_Init(&NVIC_InitStructure);
 1494              		.loc 1 298 7 is_stmt 1 view .LVU455
 1495 004e 01A8     		add	r0, sp, #4
 1496 0050 FFF7FEFF 		bl	NVIC_Init
 1497              	.LVL79:
 299:serial.c      ****       GPIO_PinAFConfig(GPIOA,GPIO_PinSource2,GPIO_AF_USART2);
 1498              		.loc 1 299 7 view .LVU456
 1499 0054 7F48     		ldr	r0, .L127+52
 1500 0056 0722     		movs	r2, #7
 1501 0058 0221     		movs	r1, #2
 1502 005a FFF7FEFF 		bl	GPIO_PinAFConfig
 1503              	.LVL80:
 300:serial.c      ****       GPIO_PinAFConfig(GPIOA,GPIO_PinSource3,GPIO_AF_USART2);
 1504              		.loc 1 300 7 view .LVU457
 1505 005e 7D48     		ldr	r0, .L127+52
 1506 0060 0722     		movs	r2, #7
 1507 0062 0321     		movs	r1, #3
 1508 0064 FFF7FEFF 		bl	GPIO_PinAFConfig
 1509              	.LVL81:
 301:serial.c      ****       GPIO_Init_Pin(GPIOA,TXD2,GPIO_Speed_100MHz,GPIO_Mode_AF_PP_PU);
 1510              		.loc 1 301 7 view .LVU458
 1511 0068 7A48     		ldr	r0, .L127+52
 1512 006a 1223     		movs	r3, #18
 1513 006c 0322     		movs	r2, #3
 1514 006e 0421     		movs	r1, #4
 1515 0070 FFF7FEFF 		bl	GPIO_Init_Pin
 1516              	.LVL82:
 302:serial.c      ****       GPIO_Init_Pin(GPIOA,RXD2,GPIO_Speed_100MHz,GPIO_Mode_AF_PP_PU);
 1517              		.loc 1 302 7 view .LVU459
 1518 0074 7748     		ldr	r0, .L127+52
 1519 0076 1223     		movs	r3, #18
 1520 0078 0322     		movs	r2, #3
 1521 007a 0821     		movs	r1, #8
 1522 007c FFF7FEFF 		bl	GPIO_Init_Pin
 1523              	.LVL83:
 303:serial.c      ****       /* Enable the USART3 Interrupt */
 304:serial.c      ****       NVIC_InitStructure.NVIC_IRQChannel = USART3_IRQn;
 1524              		.loc 1 304 7 view .LVU460
 305:serial.c      ****       NVIC_InitStructure.NVIC_IRQChannelPreemptionPriority = 2;
 1525              		.loc 1 305 7 view .LVU461
 306:serial.c      ****       NVIC_InitStructure.NVIC_IRQChannelSubPriority = 0;
 1526              		.loc 1 306 7 view .LVU462
 307:serial.c      ****       NVIC_InitStructure.NVIC_IRQChannelCmd = ENABLE;
 1527              		.loc 1 307 7 view .LVU463
 304:serial.c      ****       NVIC_InitStructure.NVIC_IRQChannelPreemptionPriority = 2;
 1528              		.loc 1 304 42 is_stmt 0 view .LVU464
 1529 0080 754B     		ldr	r3, .L127+56
 1530 0082 0193     		str	r3, [sp, #4]
 308:serial.c      ****       NVIC_Init(&NVIC_InitStructure);
 1531              		.loc 1 308 7 is_stmt 1 view .LVU465
 1532 0084 01A8     		add	r0, sp, #4
 1533 0086 FFF7FEFF 		bl	NVIC_Init
 1534              	.LVL84:
 309:serial.c      ****       switch (USART3_PORT) {
 1535              		.loc 1 309 7 view .LVU466
 1536 008a 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 1537 008c 012B     		cmp	r3, #1
 1538 008e 00F09980 		beq	.L122
 1539 0092 022B     		cmp	r3, #2
 1540 0094 00F0AD80 		beq	.L123
 1541 0098 BBB9     		cbnz	r3, .L124
 310:serial.c      ****       	 case 0:
 311:serial.c      ****            GPIO_PinAFConfig(GPIOB,GPIO_PinSource10,GPIO_AF_USART3);
 1542              		.loc 1 311 12 view .LVU467
 1543 009a 7048     		ldr	r0, .L127+60
 1544 009c 0722     		movs	r2, #7
 1545 009e 0A21     		movs	r1, #10
 1546 00a0 FFF7FEFF 		bl	GPIO_PinAFConfig
 1547              	.LVL85:
 312:serial.c      ****            GPIO_PinAFConfig(GPIOB,GPIO_PinSource11,GPIO_AF_USART3);
 1548              		.loc 1 312 12 view .LVU468
 1549 00a4 6D48     		ldr	r0, .L127+60
 1550 00a6 0722     		movs	r2, #7
 1551 00a8 0B21     		movs	r1, #11
 1552 00aa FFF7FEFF 		bl	GPIO_PinAFConfig
 1553              	.LVL86:
 313:serial.c      ****            /* Configure USART3 TX (PB10) */
 314:serial.c      ****            GPIO_Init_Pin(GPIOB,TXD3,GPIO_Speed_100MHz,GPIO_Mode_AF_PP_PU);
 1554              		.loc 1 314 12 view .LVU469
 1555 00ae 6B48     		ldr	r0, .L127+60
 1556 00b0 1223     		movs	r3, #18
 1557 00b2 0322     		movs	r2, #3
 1558 00b4 4FF48061 		mov	r1, #1024
 1559 00b8 FFF7FEFF 		bl	GPIO_Init_Pin
 1560              	.LVL87:
 315:serial.c      ****            /* Configure USART3 TX (PB10) */
 316:serial.c      ****            GPIO_Init_Pin(GPIOB,RXD3,GPIO_Speed_100MHz,GPIO_Mode_AF_PP_PU);
 1561              		.loc 1 316 12 view .LVU470
 1562 00bc 6748     		ldr	r0, .L127+60
 1563 00be 1223     		movs	r3, #18
 1564 00c0 0322     		movs	r2, #3
 1565 00c2 4FF40061 		mov	r1, #2048
 1566              	.L126:
 317:serial.c      ****            break;
 318:serial.c      ****          case 1:
 319:serial.c      ****            GPIO_PinAFConfig(GPIOC,GPIO_PinSource10,GPIO_AF_USART3);
 320:serial.c      ****            GPIO_PinAFConfig(GPIOC,GPIO_PinSource11,GPIO_AF_USART3);
 321:serial.c      ****            /* Configure USART3 TX (PC10) */
 322:serial.c      ****            GPIO_Init_Pin(GPIOC,GPIO_Pin_10,GPIO_Speed_100MHz,GPIO_Mode_AF_PP_PU);
 323:serial.c      ****            /* Configure USART3 RX (PC11) */
 324:serial.c      ****            GPIO_Init_Pin(GPIOC,GPIO_Pin_11,GPIO_Speed_100MHz,GPIO_Mode_AF_PP_PU);
 325:serial.c      ****            break;
 326:serial.c      ****          case 2:
 327:serial.c      ****            GPIO_PinAFConfig(GPIOD,GPIO_PinSource8,GPIO_AF_USART3);
 328:serial.c      ****            GPIO_PinAFConfig(GPIOD,GPIO_PinSource9,GPIO_AF_USART3);
 329:serial.c      ****            /* Configure USART3 TX (PD8) */
 330:serial.c      ****            GPIO_Init_Pin(GPIOD,GPIO_Pin_8,GPIO_Speed_100MHz,GPIO_Mode_AF_PP_PU);
 331:serial.c      ****            /* Configure USART3 RX (PD9) */
 332:serial.c      ****            GPIO_Init_Pin(GPIOD,GPIO_Pin_9,GPIO_Speed_100MHz,GPIO_Mode_AF_PP_PU);
 1567              		.loc 1 332 12 is_stmt 0 view .LVU471
 1568 00c6 FFF7FEFF 		bl	GPIO_Init_Pin
 1569              	.LVL88:
 333:serial.c      ****            break;
 1570              		.loc 1 333 12 is_stmt 1 view .LVU472
 1571              	.L124:
 334:serial.c      ****       }
 335:serial.c      ****       USART_InitStructure.USART_BaudRate = 2000000;
 1572              		.loc 1 335 7 view .LVU473
 336:serial.c      ****       USART_InitStructure.USART_WordLength = USART_WordLength_8b;
 1573              		.loc 1 336 7 view .LVU474
 337:serial.c      ****       USART_InitStructure.USART_StopBits = USART_StopBits_1;
 1574              		.loc 1 337 7 view .LVU475
 338:serial.c      ****       USART_InitStructure.USART_Parity = USART_Parity_No;
 1575              		.loc 1 338 7 view .LVU476
 339:serial.c      ****       USART_InitStructure.USART_HardwareFlowControl = USART_HardwareFlowControl_None;
 1576              		.loc 1 339 7 view .LVU477
 340:serial.c      ****       USART_InitStructure.USART_Mode = USART_Mode_Rx | USART_Mode_Tx;
 1577              		.loc 1 340 7 view .LVU478
 336:serial.c      ****       USART_InitStructure.USART_StopBits = USART_StopBits_1;
 1578              		.loc 1 336 44 is_stmt 0 view .LVU479
 1579 00ca 654A     		ldr	r2, .L127+64
 341:serial.c      ****       USART_DeInit(USART1);
 1580              		.loc 1 341 7 view .LVU480
 1581 00cc 6548     		ldr	r0, .L127+68
 336:serial.c      ****       USART_InitStructure.USART_StopBits = USART_StopBits_1;
 1582              		.loc 1 336 44 view .LVU481
 1583 00ce 0023     		movs	r3, #0
 1584 00d0 CDE90223 		strd	r2, r3, [sp, #8]
 338:serial.c      ****       USART_InitStructure.USART_HardwareFlowControl = USART_HardwareFlowControl_None;
 1585              		.loc 1 338 40 view .LVU482
 1586 00d4 4FF44022 		mov	r2, #786432
 339:serial.c      ****       USART_InitStructure.USART_Mode = USART_Mode_Rx | USART_Mode_Tx;
 1587              		.loc 1 339 53 view .LVU483
 1588 00d8 ADF81430 		strh	r3, [sp, #20]	@ movhi
 1589              		.loc 1 341 7 is_stmt 1 view .LVU484
 338:serial.c      ****       USART_InitStructure.USART_HardwareFlowControl = USART_HardwareFlowControl_None;
 1590              		.loc 1 338 40 is_stmt 0 view .LVU485
 1591 00dc 0492     		str	r2, [sp, #16]
 1592              		.loc 1 341 7 view .LVU486
 1593 00de FFF7FEFF 		bl	USART_DeInit
 1594              	.LVL89:
 342:serial.c      ****       /* Enable USART1 clock */
 343:serial.c      ****       RCC_APB2PeriphClockCmd(RCC_APB2Periph_USART1, ENABLE);
 1595              		.loc 1 343 7 is_stmt 1 view .LVU487
 1596 00e2 0121     		movs	r1, #1
 1597 00e4 1020     		movs	r0, #16
 1598 00e6 FFF7FEFF 		bl	RCC_APB2PeriphClockCmd
 1599              	.LVL90:
 344:serial.c      ****       /* Configure USART1 */
 345:serial.c      ****       USART_Init(USART1, &USART_InitStructure);
 1600              		.loc 1 345 7 view .LVU488
 1601 00ea 02A9     		add	r1, sp, #8
 1602 00ec 5D48     		ldr	r0, .L127+68
 1603 00ee FFF7FEFF 		bl	USART_Init
 1604              	.LVL91:
 346:serial.c      ****       /* Enable USART1 Receive and Transmit interrupts */
 347:serial.c      ****       USART_ITConfig(USART1, USART_IT_RXNE, ENABLE);
 1605              		.loc 1 347 7 view .LVU489
 1606 00f2 0122     		movs	r2, #1
 1607 00f4 5B48     		ldr	r0, .L127+68
 1608 00f6 40F22551 		movw	r1, #1317
 1609 00fa FFF7FEFF 		bl	USART_ITConfig
 1610              	.LVL92:
 348:serial.c      ****       /* Enable the USART1 */
 349:serial.c      ****       USART_Cmd(USART1, ENABLE);
 1611              		.loc 1 349 7 view .LVU490
 1612 00fe 0121     		movs	r1, #1
 1613 0100 5848     		ldr	r0, .L127+68
 1614 0102 FFF7FEFF 		bl	USART_Cmd
 1615              	.LVL93:
 350:serial.c      ****       USART_DeInit(USART2);
 1616              		.loc 1 350 7 view .LVU491
 1617 0106 5848     		ldr	r0, .L127+72
 1618 0108 FFF7FEFF 		bl	USART_DeInit
 1619              	.LVL94:
 351:serial.c      ****       /* Enable USART2 clock */
 352:serial.c      ****       RCC_APB1PeriphClockCmd(RCC_APB1Periph_USART2, ENABLE);
 1620              		.loc 1 352 7 view .LVU492
 1621 010c 0121     		movs	r1, #1
 1622 010e 4FF40030 		mov	r0, #131072
 1623 0112 FFF7FEFF 		bl	RCC_APB1PeriphClockCmd
 1624              	.LVL95:
 353:serial.c      ****       /* Configure USART2 */
 354:serial.c      ****       USART_Init(USART2, &USART_InitStructure);
 1625              		.loc 1 354 7 view .LVU493
 1626 0116 02A9     		add	r1, sp, #8
 1627 0118 5348     		ldr	r0, .L127+72
 1628 011a FFF7FEFF 		bl	USART_Init
 1629              	.LVL96:
 355:serial.c      ****       /* Enable USART2 Receive and Transmit interrupts */
 356:serial.c      ****       USART_ITConfig(USART2, USART_IT_RXNE, ENABLE);
 1630              		.loc 1 356 7 view .LVU494
 1631 011e 0122     		movs	r2, #1
 1632 0120 5148     		ldr	r0, .L127+72
 1633 0122 40F22551 		movw	r1, #1317
 1634 0126 FFF7FEFF 		bl	USART_ITConfig
 1635              	.LVL97:
 357:serial.c      ****       /* Enable the USART2 */
 358:serial.c      ****       USART_Cmd(USART2, ENABLE);
 1636              		.loc 1 358 7 view .LVU495
 1637 012a 0121     		movs	r1, #1
 1638 012c 4E48     		ldr	r0, .L127+72
 1639 012e FFF7FEFF 		bl	USART_Cmd
 1640              	.LVL98:
 359:serial.c      ****       USART_DeInit(USART3);
 1641              		.loc 1 359 7 view .LVU496
 1642 0132 4E48     		ldr	r0, .L127+76
 1643 0134 FFF7FEFF 		bl	USART_DeInit
 1644              	.LVL99:
 360:serial.c      ****       /* Enable USART3 clock */
 361:serial.c      ****       RCC_APB1PeriphClockCmd(RCC_APB1Periph_USART3, ENABLE);
 1645              		.loc 1 361 7 view .LVU497
 1646 0138 0121     		movs	r1, #1
 1647 013a 4FF48020 		mov	r0, #262144
 1648 013e FFF7FEFF 		bl	RCC_APB1PeriphClockCmd
 1649              	.LVL100:
 362:serial.c      ****       /* Configure USART3 */
 363:serial.c      ****       USART_Init(USART3, &USART_InitStructure);
 1650              		.loc 1 363 7 view .LVU498
 1651 0142 02A9     		add	r1, sp, #8
 1652 0144 4948     		ldr	r0, .L127+76
 1653 0146 FFF7FEFF 		bl	USART_Init
 1654              	.LVL101:
 364:serial.c      ****       /* Enable USART3 Receive and Transmit interrupts */
 365:serial.c      ****       USART_ITConfig(USART3, USART_IT_RXNE, ENABLE);
 1655              		.loc 1 365 7 view .LVU499
 1656 014a 0122     		movs	r2, #1
 1657 014c 4748     		ldr	r0, .L127+76
 1658 014e 40F22551 		movw	r1, #1317
 1659 0152 FFF7FEFF 		bl	USART_ITConfig
 1660              	.LVL102:
 366:serial.c      ****       /* Enable the USART3 */
 367:serial.c      ****       USART_Cmd(USART3, ENABLE);
 1661              		.loc 1 367 7 view .LVU500
 1662 0156 4548     		ldr	r0, .L127+76
 1663 0158 0121     		movs	r1, #1
 1664 015a FFF7FEFF 		bl	USART_Cmd
 1665              	.LVL103:
 368:serial.c      ****       this_id = 1;
 1666              		.loc 1 368 7 view .LVU501
 1667              		.loc 1 368 15 is_stmt 0 view .LVU502
 1668 015e 444B     		ldr	r3, .L127+80
 1669 0160 0122     		movs	r2, #1
 1670 0162 1A70     		strb	r2, [r3]
 369:serial.c      **** }...
 1671              		.loc 1 369 1 view .LVU503
 1672 0164 07B0     		add	sp, sp, #28
 1673              		.cfi_remember_state
 1674              		.cfi_def_cfa_offset 12
 1675              		@ sp needed
 1676 0166 30BD     		pop	{r4, r5, pc}
 1677              	.L119:
 1678              		.cfi_restore_state
 281:serial.c      ****            GPIO_PinAFConfig(GPIOA,GPIO_PinSource9,GPIO_AF_USART1);
 1679              		.loc 1 281 12 is_stmt 1 view .LVU504
 1680 0168 3A48     		ldr	r0, .L127+52
 1681 016a 0722     		movs	r2, #7
 1682 016c 0921     		movs	r1, #9
 1683 016e FFF7FEFF 		bl	GPIO_PinAFConfig
 1684              	.LVL104:
 282:serial.c      ****            GPIO_PinAFConfig(GPIOA,GPIO_PinSource10,GPIO_AF_USART1);
 1685              		.loc 1 282 12 view .LVU505
 1686 0172 3848     		ldr	r0, .L127+52
 1687 0174 0722     		movs	r2, #7
 1688 0176 0A21     		movs	r1, #10
 1689 0178 FFF7FEFF 		bl	GPIO_PinAFConfig
 1690              	.LVL105:
 283:serial.c      ****            GPIO_Init_Pin(GPIOA,TXD1,GPIO_Speed_100MHz,GPIO_Mode_AF_PP_PU);
 1691              		.loc 1 283 12 view .LVU506
 1692 017c 3548     		ldr	r0, .L127+52
 1693 017e 1223     		movs	r3, #18
 1694 0180 0322     		movs	r2, #3
 1695 0182 4FF40071 		mov	r1, #512
 1696 0186 FFF7FEFF 		bl	GPIO_Init_Pin
 1697              	.LVL106:
 284:serial.c      ****            GPIO_Init_Pin(GPIOA,RXD1,GPIO_Speed_100MHz,GPIO_Mode_AF_PP_PU);
 1698              		.loc 1 284 12 view .LVU507
 1699 018a 3248     		ldr	r0, .L127+52
 1700 018c 1223     		movs	r3, #18
 1701 018e 0322     		movs	r2, #3
 1702 0190 4FF48061 		mov	r1, #1024
 1703              	.L125:
 290:serial.c      ****            GPIO_Init_Pin(GPIOB,GPIO_Pin_7,GPIO_Speed_100MHz,GPIO_Mode_AF_PP_PU);
 1704              		.loc 1 290 12 is_stmt 0 view .LVU508
 1705 0194 FFF7FEFF 		bl	GPIO_Init_Pin
 1706              	.LVL107:
 291:serial.c      ****            break;
 1707              		.loc 1 291 12 is_stmt 1 view .LVU509
 1708 0198 57E7     		b	.L121
 1709              	.L120:
 287:serial.c      ****            GPIO_PinAFConfig(GPIOB,GPIO_PinSource6,GPIO_AF_USART1);
 1710              		.loc 1 287 12 view .LVU510
 1711 019a 3048     		ldr	r0, .L127+60
 1712 019c 0722     		movs	r2, #7
 1713 019e 0621     		movs	r1, #6
 1714 01a0 FFF7FEFF 		bl	GPIO_PinAFConfig
 1715              	.LVL108:
 288:serial.c      ****            GPIO_PinAFConfig(GPIOB,GPIO_PinSource7,GPIO_AF_USART1);
 1716              		.loc 1 288 12 view .LVU511
 1717 01a4 0722     		movs	r2, #7
 1718 01a6 1146     		mov	r1, r2
 1719 01a8 2C48     		ldr	r0, .L127+60
 1720 01aa FFF7FEFF 		bl	GPIO_PinAFConfig
 1721              	.LVL109:
 289:serial.c      ****            GPIO_Init_Pin(GPIOB,GPIO_Pin_6,GPIO_Speed_100MHz,GPIO_Mode_AF_PP_PU);
 1722              		.loc 1 289 12 view .LVU512
 1723 01ae 2B48     		ldr	r0, .L127+60
 1724 01b0 1223     		movs	r3, #18
 1725 01b2 0322     		movs	r2, #3
 1726 01b4 4021     		movs	r1, #64
 1727 01b6 FFF7FEFF 		bl	GPIO_Init_Pin
 1728              	.LVL110:
 290:serial.c      ****            GPIO_Init_Pin(GPIOB,GPIO_Pin_7,GPIO_Speed_100MHz,GPIO_Mode_AF_PP_PU);
 1729              		.loc 1 290 12 view .LVU513
 1730 01ba 2848     		ldr	r0, .L127+60
 1731 01bc 1223     		movs	r3, #18
 1732 01be 0322     		movs	r2, #3
 1733 01c0 8021     		movs	r1, #128
 1734 01c2 E7E7     		b	.L125
 1735              	.L122:
 319:serial.c      ****            GPIO_PinAFConfig(GPIOC,GPIO_PinSource10,GPIO_AF_USART3);
 1736              		.loc 1 319 12 view .LVU514
 1737 01c4 2B48     		ldr	r0, .L127+84
 1738 01c6 0722     		movs	r2, #7
 1739 01c8 0A21     		movs	r1, #10
 1740 01ca FFF7FEFF 		bl	GPIO_PinAFConfig
 1741              	.LVL111:
 320:serial.c      ****            GPIO_PinAFConfig(GPIOC,GPIO_PinSource11,GPIO_AF_USART3);
 1742              		.loc 1 320 12 view .LVU515
 1743 01ce 2948     		ldr	r0, .L127+84
 1744 01d0 0722     		movs	r2, #7
 1745 01d2 0B21     		movs	r1, #11
 1746 01d4 FFF7FEFF 		bl	GPIO_PinAFConfig
 1747              	.LVL112:
 322:serial.c      ****            GPIO_Init_Pin(GPIOC,GPIO_Pin_10,GPIO_Speed_100MHz,GPIO_Mode_AF_PP_PU);
 1748              		.loc 1 322 12 view .LVU516
 1749 01d8 2648     		ldr	r0, .L127+84
 1750 01da 1223     		movs	r3, #18
 1751 01dc 0322     		movs	r2, #3
 1752 01de 4FF48061 		mov	r1, #1024
 1753 01e2 FFF7FEFF 		bl	GPIO_Init_Pin
 1754              	.LVL113:
 324:serial.c      ****            GPIO_Init_Pin(GPIOC,GPIO_Pin_11,GPIO_Speed_100MHz,GPIO_Mode_AF_PP_PU);
 1755              		.loc 1 324 12 view .LVU517
 1756 01e6 2348     		ldr	r0, .L127+84
 1757 01e8 1223     		movs	r3, #18
 1758 01ea 0322     		movs	r2, #3
 1759 01ec 4FF40061 		mov	r1, #2048
 1760 01f0 69E7     		b	.L126
 1761              	.L123:
 327:serial.c      ****            GPIO_PinAFConfig(GPIOD,GPIO_PinSource8,GPIO_AF_USART3);
 1762              		.loc 1 327 12 view .LVU518
 1763 01f2 2148     		ldr	r0, .L127+88
 1764 01f4 0722     		movs	r2, #7
 1765 01f6 0821     		movs	r1, #8
 1766 01f8 FFF7FEFF 		bl	GPIO_PinAFConfig
 1767              	.LVL114:
 328:serial.c      ****            GPIO_PinAFConfig(GPIOD,GPIO_PinSource9,GPIO_AF_USART3);
 1768              		.loc 1 328 12 view .LVU519
 1769 01fc 1E48     		ldr	r0, .L127+88
 1770 01fe 0722     		movs	r2, #7
 1771 0200 0921     		movs	r1, #9
 1772 0202 FFF7FEFF 		bl	GPIO_PinAFConfig
 1773              	.LVL115:
 330:serial.c      ****            GPIO_Init_Pin(GPIOD,GPIO_Pin_8,GPIO_Speed_100MHz,GPIO_Mode_AF_PP_PU);
 1774              		.loc 1 330 12 view .LVU520
 1775 0206 1C48     		ldr	r0, .L127+88
 1776 0208 1223     		movs	r3, #18
 1777 020a 0322     		movs	r2, #3
 1778 020c 4FF48071 		mov	r1, #256
 1779 0210 FFF7FEFF 		bl	GPIO_Init_Pin
 1780              	.LVL116:
 332:serial.c      ****            GPIO_Init_Pin(GPIOD,GPIO_Pin_9,GPIO_Speed_100MHz,GPIO_Mode_AF_PP_PU);
 1781              		.loc 1 332 12 view .LVU521
 1782 0214 1848     		ldr	r0, .L127+88
 1783 0216 1223     		movs	r3, #18
 1784 0218 0322     		movs	r2, #3
 1785 021a 4FF40071 		mov	r1, #512
 1786 021e 52E7     		b	.L126
 1787              	.L128:
 1788              		.align	2
 1789              	.L127:
 1790 0220 00000000 		.word	rxcnt1
 1791 0224 00000000 		.word	txcnt1
 1792 0228 00000000 		.word	USART1_PORT
 1793 022c 00000000 		.word	maxtx1
 1794 0230 00000000 		.word	USART3_PORT
 1795 0234 00000000 		.word	rxcnt2
 1796 0238 00000000 		.word	txcnt2
 1797 023c 00000000 		.word	maxtx2
 1798 0240 00000000 		.word	rxcnt3
 1799 0244 00000000 		.word	txcnt3
 1800 0248 00000000 		.word	maxtx3
 1801 024c 25020001 		.word	16777765
 1802 0250 26020001 		.word	16777766
 1803 0254 00000240 		.word	1073872896
 1804 0258 27020001 		.word	16777767
 1805 025c 00040240 		.word	1073873920
 1806 0260 80841E00 		.word	2000000
 1807 0264 00100140 		.word	1073811456
 1808 0268 00440040 		.word	1073759232
 1809 026c 00480040 		.word	1073760256
 1810 0270 00000000 		.word	this_id
 1811 0274 00080240 		.word	1073874944
 1812 0278 000C0240 		.word	1073875968
 1813              		.cfi_endproc
 1814              	.LFE137:
 1816              		.global	USART3_PORT
 1817              		.section	.bss.USART3_PORT,"aw",%nobits
 1820              	USART3_PORT:
 1821 0000 00       		.space	1
 1822              		.global	USART1_PORT
 1823              		.section	.bss.USART1_PORT,"aw",%nobits
 1826              	USART1_PORT:
 1827 0000 00       		.space	1
 1828              		.global	txbuff3
 1829              		.section	.bss.txbuff3,"aw",%nobits
 1832              	txbuff3:
 1833 0000 00000000 		.space	256
 1833      00000000 
 1833      00000000 
 1833      00000000 
 1833      00000000 
 1834              		.global	rxbuff3
 1835              		.section	.bss.rxbuff3,"aw",%nobits
 1838              	rxbuff3:
 1839 0000 00000000 		.space	256
 1839      00000000 
 1839      00000000 
 1839      00000000 
 1839      00000000 
 1840              		.global	txbuff2
 1841              		.section	.bss.txbuff2,"aw",%nobits
 1844              	txbuff2:
 1845 0000 00000000 		.space	256
 1845      00000000 
 1845      00000000 
 1845      00000000 
 1845      00000000 
 1846              		.global	rxbuff2
 1847              		.section	.bss.rxbuff2,"aw",%nobits
 1850              	rxbuff2:
 1851 0000 00000000 		.space	256
 1851      00000000 
 1851      00000000 
 1851      00000000 
 1851      00000000 
 1852              		.global	txbuff1
 1853              		.section	.bss.txbuff1,"aw",%nobits
 1856              	txbuff1:
 1857 0000 00000000 		.space	256
 1857      00000000 
 1857      00000000 
 1857      00000000 
 1857      00000000 
 1858              		.global	rxbuff1
 1859              		.section	.bss.rxbuff1,"aw",%nobits
 1862              	rxbuff1:
 1863 0000 00000000 		.space	256
 1863      00000000 
 1863      00000000 
 1863      00000000 
 1863      00000000 
 1864              		.global	flash_para
 1865              		.section	.bss.flash_para,"aw",%nobits
 1866              		.align	2
 1869              	flash_para:
 1870 0000 00000000 		.space	256
 1870      00000000 
 1870      00000000 
 1870      00000000 
 1870      00000000 
 1871              		.global	flash_address
 1872              		.section	.bss.flash_address,"aw",%nobits
 1873              		.align	2
 1876              	flash_address:
 1877 0000 00000000 		.space	4
 1878              		.global	this_id
 1879              		.section	.bss.this_id,"aw",%nobits
 1882              	this_id:
 1883 0000 00       		.space	1
 1884              		.global	tx_led
 1885              		.section	.bss.tx_led,"aw",%nobits
 1888              	tx_led:
 1889 0000 00       		.space	1
 1890              		.global	rx_led
 1891              		.section	.bss.rx_led,"aw",%nobits
 1894              	rx_led:
 1895 0000 00       		.space	1
 1896              		.global	rxck3
 1897              		.section	.bss.rxck3,"aw",%nobits
 1900              	rxck3:
 1901 0000 00       		.space	1
 1902              		.global	rxck2
 1903              		.section	.bss.rxck2,"aw",%nobits
 1906              	rxck2:
 1907 0000 00       		.space	1
 1908              		.global	rxck1
 1909              		.section	.bss.rxck1,"aw",%nobits
 1912              	rxck1:
 1913 0000 00       		.space	1
 1914              		.global	maxtx3
 1915              		.section	.bss.maxtx3,"aw",%nobits
 1916              		.align	1
 1919              	maxtx3:
 1920 0000 0000     		.space	2
 1921              		.global	txcnt3
 1922              		.section	.bss.txcnt3,"aw",%nobits
 1923              		.align	1
 1926              	txcnt3:
 1927 0000 0000     		.space	2
 1928              		.global	rxcnt3
 1929              		.section	.bss.rxcnt3,"aw",%nobits
 1930              		.align	1
 1933              	rxcnt3:
 1934 0000 0000     		.space	2
 1935              		.global	maxtx2
 1936              		.section	.bss.maxtx2,"aw",%nobits
 1937              		.align	1
 1940              	maxtx2:
 1941 0000 0000     		.space	2
 1942              		.global	txcnt2
 1943              		.section	.bss.txcnt2,"aw",%nobits
 1944              		.align	1
 1947              	txcnt2:
 1948 0000 0000     		.space	2
 1949              		.global	rxcnt2
 1950              		.section	.bss.rxcnt2,"aw",%nobits
 1951              		.align	1
 1954              	rxcnt2:
 1955 0000 0000     		.space	2
 1956              		.global	maxtx1
 1957              		.section	.bss.maxtx1,"aw",%nobits
 1958              		.align	1
 1961              	maxtx1:
 1962 0000 0000     		.space	2
 1963              		.global	txcnt1
 1964              		.section	.bss.txcnt1,"aw",%nobits
 1965              		.align	1
 1968              	txcnt1:
 1969 0000 0000     		.space	2
 1970              		.global	rxcnt1
 1971              		.section	.bss.rxcnt1,"aw",%nobits
 1972              		.align	1
 1975              	rxcnt1:
 1976 0000 0000     		.space	2
 1977              		.text
 1978              	.Letext0:
 1979              		.file 4 "c:\\program files (x86)\\arm gnu toolchain arm-none-eabi\\12.2 mpacbti-rel1\\arm-none-eab
 1980              		.file 5 "c:\\program files (x86)\\arm gnu toolchain arm-none-eabi\\12.2 mpacbti-rel1\\arm-none-eab
 1981              		.file 6 "c:/project/stm32fx_iolib/stm32fxxx/stm32f4xx/stm32f4xx.h"
 1982              		.file 7 "c:/project/stm32fx_iolib/stm32f4x_iolib/include/misc.h"
 1983              		.file 8 "c:/project/stm32fx_iolib/stm32f4x_iolib/include/stm32f4xx_gpio.h"
 1984              		.file 9 "c:/project/stm32fx_iolib/stm32f4x_iolib/include/stm32f4xx_usart.h"
 1985              		.file 10 "c:/project/stm32fx_iolib/stm32f4x_iolib/include/stm32f4xx_rcc.h"
 1986              		.file 11 "c:/project/stm32fx_iolib/stm32f4x_iolib/include/stm32f4xx_flash.h"
 1987              		.file 12 "<built-in>"
DEFINED SYMBOLS
                            *ABS*:00000000 serial.c
C:\Users\37593\AppData\Local\Temp\ccUFs0Bb.s:21     .text.NVIC_SystemReset:00000000 $t
C:\Users\37593\AppData\Local\Temp\ccUFs0Bb.s:26     .text.NVIC_SystemReset:00000000 NVIC_SystemReset
C:\Users\37593\AppData\Local\Temp\ccUFs0Bb.s:95     .text.NVIC_SystemReset:0000001c $d
C:\Users\37593\AppData\Local\Temp\ccUFs0Bb.s:103    .text.flash_read:00000000 $t
C:\Users\37593\AppData\Local\Temp\ccUFs0Bb.s:109    .text.flash_read:00000000 flash_read
C:\Users\37593\AppData\Local\Temp\ccUFs0Bb.s:166    .text.flash_read:00000028 $d
C:\Users\37593\AppData\Local\Temp\ccUFs0Bb.s:1876   .bss.flash_address:00000000 flash_address
C:\Users\37593\AppData\Local\Temp\ccUFs0Bb.s:1869   .bss.flash_para:00000000 flash_para
C:\Users\37593\AppData\Local\Temp\ccUFs0Bb.s:173    .text.USART1_IRQHandler:00000000 $t
C:\Users\37593\AppData\Local\Temp\ccUFs0Bb.s:179    .text.USART1_IRQHandler:00000000 USART1_IRQHandler
C:\Users\37593\AppData\Local\Temp\ccUFs0Bb.s:338    .text.USART1_IRQHandler:000000c8 $d
C:\Users\37593\AppData\Local\Temp\ccUFs0Bb.s:1975   .bss.rxcnt1:00000000 rxcnt1
C:\Users\37593\AppData\Local\Temp\ccUFs0Bb.s:1862   .bss.rxbuff1:00000000 rxbuff1
C:\Users\37593\AppData\Local\Temp\ccUFs0Bb.s:1894   .bss.rx_led:00000000 rx_led
C:\Users\37593\AppData\Local\Temp\ccUFs0Bb.s:1912   .bss.rxck1:00000000 rxck1
C:\Users\37593\AppData\Local\Temp\ccUFs0Bb.s:1968   .bss.txcnt1:00000000 txcnt1
C:\Users\37593\AppData\Local\Temp\ccUFs0Bb.s:1961   .bss.maxtx1:00000000 maxtx1
C:\Users\37593\AppData\Local\Temp\ccUFs0Bb.s:1856   .bss.txbuff1:00000000 txbuff1
C:\Users\37593\AppData\Local\Temp\ccUFs0Bb.s:1888   .bss.tx_led:00000000 tx_led
C:\Users\37593\AppData\Local\Temp\ccUFs0Bb.s:351    .text.USART2_IRQHandler:00000000 $t
C:\Users\37593\AppData\Local\Temp\ccUFs0Bb.s:357    .text.USART2_IRQHandler:00000000 USART2_IRQHandler
C:\Users\37593\AppData\Local\Temp\ccUFs0Bb.s:520    .text.USART2_IRQHandler:000000d0 $d
C:\Users\37593\AppData\Local\Temp\ccUFs0Bb.s:1954   .bss.rxcnt2:00000000 rxcnt2
C:\Users\37593\AppData\Local\Temp\ccUFs0Bb.s:1850   .bss.rxbuff2:00000000 rxbuff2
C:\Users\37593\AppData\Local\Temp\ccUFs0Bb.s:1906   .bss.rxck2:00000000 rxck2
C:\Users\37593\AppData\Local\Temp\ccUFs0Bb.s:1947   .bss.txcnt2:00000000 txcnt2
C:\Users\37593\AppData\Local\Temp\ccUFs0Bb.s:1940   .bss.maxtx2:00000000 maxtx2
C:\Users\37593\AppData\Local\Temp\ccUFs0Bb.s:1844   .bss.txbuff2:00000000 txbuff2
C:\Users\37593\AppData\Local\Temp\ccUFs0Bb.s:534    .text.USART3_IRQHandler:00000000 $t
C:\Users\37593\AppData\Local\Temp\ccUFs0Bb.s:540    .text.USART3_IRQHandler:00000000 USART3_IRQHandler
C:\Users\37593\AppData\Local\Temp\ccUFs0Bb.s:699    .text.USART3_IRQHandler:000000c8 $d
C:\Users\37593\AppData\Local\Temp\ccUFs0Bb.s:1933   .bss.rxcnt3:00000000 rxcnt3
C:\Users\37593\AppData\Local\Temp\ccUFs0Bb.s:1838   .bss.rxbuff3:00000000 rxbuff3
C:\Users\37593\AppData\Local\Temp\ccUFs0Bb.s:1900   .bss.rxck3:00000000 rxck3
C:\Users\37593\AppData\Local\Temp\ccUFs0Bb.s:1926   .bss.txcnt3:00000000 txcnt3
C:\Users\37593\AppData\Local\Temp\ccUFs0Bb.s:1919   .bss.maxtx3:00000000 maxtx3
C:\Users\37593\AppData\Local\Temp\ccUFs0Bb.s:1832   .bss.txbuff3:00000000 txbuff3
C:\Users\37593\AppData\Local\Temp\ccUFs0Bb.s:712    .text.tx_enable1:00000000 $t
C:\Users\37593\AppData\Local\Temp\ccUFs0Bb.s:718    .text.tx_enable1:00000000 tx_enable1
C:\Users\37593\AppData\Local\Temp\ccUFs0Bb.s:758    .text.tx_enable1:00000020 $d
C:\Users\37593\AppData\Local\Temp\ccUFs0Bb.s:766    .text.tx_enable2:00000000 $t
C:\Users\37593\AppData\Local\Temp\ccUFs0Bb.s:772    .text.tx_enable2:00000000 tx_enable2
C:\Users\37593\AppData\Local\Temp\ccUFs0Bb.s:817    .text.tx_enable2:00000028 $d
C:\Users\37593\AppData\Local\Temp\ccUFs0Bb.s:826    .text.tx_enable3:00000000 $t
C:\Users\37593\AppData\Local\Temp\ccUFs0Bb.s:832    .text.tx_enable3:00000000 tx_enable3
C:\Users\37593\AppData\Local\Temp\ccUFs0Bb.s:872    .text.tx_enable3:00000020 $d
C:\Users\37593\AppData\Local\Temp\ccUFs0Bb.s:880    .text.receive_check1:00000000 $t
C:\Users\37593\AppData\Local\Temp\ccUFs0Bb.s:886    .text.receive_check1:00000000 receive_check1
C:\Users\37593\AppData\Local\Temp\ccUFs0Bb.s:1008   .text.receive_check1:0000006c $d
C:\Users\37593\AppData\Local\Temp\ccUFs0Bb.s:1882   .bss.this_id:00000000 this_id
C:\Users\37593\AppData\Local\Temp\ccUFs0Bb.s:1016   .text.receive_check2:00000000 $t
C:\Users\37593\AppData\Local\Temp\ccUFs0Bb.s:1022   .text.receive_check2:00000000 receive_check2
C:\Users\37593\AppData\Local\Temp\ccUFs0Bb.s:1144   .text.receive_check2:0000006c $d
C:\Users\37593\AppData\Local\Temp\ccUFs0Bb.s:1152   .text.receive_check3:00000000 $t
C:\Users\37593\AppData\Local\Temp\ccUFs0Bb.s:1158   .text.receive_check3:00000000 receive_check3
C:\Users\37593\AppData\Local\Temp\ccUFs0Bb.s:1280   .text.receive_check3:0000006c $d
C:\Users\37593\AppData\Local\Temp\ccUFs0Bb.s:1288   .text.serial_check:00000000 $t
C:\Users\37593\AppData\Local\Temp\ccUFs0Bb.s:1294   .text.serial_check:00000000 serial_check
C:\Users\37593\AppData\Local\Temp\ccUFs0Bb.s:1381   .text.serial_check:00000050 $d
C:\Users\37593\AppData\Local\Temp\ccUFs0Bb.s:1391   .text.serial_init:00000000 $t
C:\Users\37593\AppData\Local\Temp\ccUFs0Bb.s:1397   .text.serial_init:00000000 serial_init
C:\Users\37593\AppData\Local\Temp\ccUFs0Bb.s:1790   .text.serial_init:00000220 $d
C:\Users\37593\AppData\Local\Temp\ccUFs0Bb.s:1826   .bss.USART1_PORT:00000000 USART1_PORT
C:\Users\37593\AppData\Local\Temp\ccUFs0Bb.s:1820   .bss.USART3_PORT:00000000 USART3_PORT
C:\Users\37593\AppData\Local\Temp\ccUFs0Bb.s:1821   .bss.USART3_PORT:00000000 $d
C:\Users\37593\AppData\Local\Temp\ccUFs0Bb.s:1827   .bss.USART1_PORT:00000000 $d
C:\Users\37593\AppData\Local\Temp\ccUFs0Bb.s:1833   .bss.txbuff3:00000000 $d
C:\Users\37593\AppData\Local\Temp\ccUFs0Bb.s:1839   .bss.rxbuff3:00000000 $d
C:\Users\37593\AppData\Local\Temp\ccUFs0Bb.s:1845   .bss.txbuff2:00000000 $d
C:\Users\37593\AppData\Local\Temp\ccUFs0Bb.s:1851   .bss.rxbuff2:00000000 $d
C:\Users\37593\AppData\Local\Temp\ccUFs0Bb.s:1857   .bss.txbuff1:00000000 $d
C:\Users\37593\AppData\Local\Temp\ccUFs0Bb.s:1863   .bss.rxbuff1:00000000 $d
C:\Users\37593\AppData\Local\Temp\ccUFs0Bb.s:1866   .bss.flash_para:00000000 $d
C:\Users\37593\AppData\Local\Temp\ccUFs0Bb.s:1873   .bss.flash_address:00000000 $d
C:\Users\37593\AppData\Local\Temp\ccUFs0Bb.s:1883   .bss.this_id:00000000 $d
C:\Users\37593\AppData\Local\Temp\ccUFs0Bb.s:1889   .bss.tx_led:00000000 $d
C:\Users\37593\AppData\Local\Temp\ccUFs0Bb.s:1895   .bss.rx_led:00000000 $d
C:\Users\37593\AppData\Local\Temp\ccUFs0Bb.s:1901   .bss.rxck3:00000000 $d
C:\Users\37593\AppData\Local\Temp\ccUFs0Bb.s:1907   .bss.rxck2:00000000 $d
C:\Users\37593\AppData\Local\Temp\ccUFs0Bb.s:1913   .bss.rxck1:00000000 $d
C:\Users\37593\AppData\Local\Temp\ccUFs0Bb.s:1916   .bss.maxtx3:00000000 $d
C:\Users\37593\AppData\Local\Temp\ccUFs0Bb.s:1923   .bss.txcnt3:00000000 $d
C:\Users\37593\AppData\Local\Temp\ccUFs0Bb.s:1930   .bss.rxcnt3:00000000 $d
C:\Users\37593\AppData\Local\Temp\ccUFs0Bb.s:1937   .bss.maxtx2:00000000 $d
C:\Users\37593\AppData\Local\Temp\ccUFs0Bb.s:1944   .bss.txcnt2:00000000 $d
C:\Users\37593\AppData\Local\Temp\ccUFs0Bb.s:1951   .bss.rxcnt2:00000000 $d
C:\Users\37593\AppData\Local\Temp\ccUFs0Bb.s:1958   .bss.maxtx1:00000000 $d
C:\Users\37593\AppData\Local\Temp\ccUFs0Bb.s:1965   .bss.txcnt1:00000000 $d
C:\Users\37593\AppData\Local\Temp\ccUFs0Bb.s:1972   .bss.rxcnt1:00000000 $d

UNDEFINED SYMBOLS
FLASH_Unlock
FLASH_Lock
USART_GetITStatus
USART_ReceiveData
USART_ClearITPendingBit
USART_SendData
USART_ITConfig
wm8978_volset
memset
NVIC_Init
GPIO_PinAFConfig
GPIO_Init_Pin
USART_DeInit
RCC_APB2PeriphClockCmd
USART_Init
USART_Cmd
RCC_APB1PeriphClockCmd
