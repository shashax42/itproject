   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 4
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"adc.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.file 1 "source\\adc_dac\\adc.c"
  20              		.section	.text.convert_voltage,"ax",%progbits
  21              		.align	1
  22              		.global	convert_voltage
  23              		.syntax unified
  24              		.thumb
  25              		.thumb_func
  27              	convert_voltage:
  28              	.LVL0:
  29              	.LFB123:
   1:source\adc_dac/adc.c **** /********************************************************************************/
   2:source\adc_dac/adc.c **** /* adc.c                                                                        */
   3:source\adc_dac/adc.c **** /* STM32F407ZGT6                                                                */
   4:source\adc_dac/adc.c **** /* (Lee ChangWoo HL2IRW  hl2irw@daum.net 010-8573-6860)                 	*/
   5:source\adc_dac/adc.c **** /* stm32f4x_test								*/
   6:source\adc_dac/adc.c **** /********************************************************************************/
   7:source\adc_dac/adc.c **** #include "../../hwdefs.h"
   8:source\adc_dac/adc.c **** #include "../prototype.h"
   9:source\adc_dac/adc.c **** 
  10:source\adc_dac/adc.c **** #define T_OFFSET			-10
  11:source\adc_dac/adc.c **** 
  12:source\adc_dac/adc.c **** volatile unsigned short adc_count,adc_tcount;
  13:source\adc_dac/adc.c **** volatile unsigned int adc_vsum,adc_tsum;
  14:source\adc_dac/adc.c **** short adc_voltage,adc_temperature;
  15:source\adc_dac/adc.c **** 
  16:source\adc_dac/adc.c **** 
  17:source\adc_dac/adc.c **** unsigned short convert_voltage (unsigned short adc_data)
  18:source\adc_dac/adc.c **** {
  30              		.loc 1 18 1 view -0
  31              		.cfi_startproc
  32              		@ args = 0, pretend = 0, frame = 0
  33              		@ frame_needed = 0, uses_anonymous_args = 0
  34              		@ link register save eliminated.
  19:source\adc_dac/adc.c ****       unsigned int value;
  35              		.loc 1 19 7 view .LVU1
  20:source\adc_dac/adc.c ****       value = (unsigned int)((adc_data * 26406) >> 15);
  36              		.loc 1 20 7 view .LVU2
  21:source\adc_dac/adc.c ****       return (unsigned short)value;
  37              		.loc 1 21 7 view .LVU3
  20:source\adc_dac/adc.c ****       value = (unsigned int)((adc_data * 26406) >> 15);
  38              		.loc 1 20 40 is_stmt 0 view .LVU4
  39 0000 46F22673 		movw	r3, #26406
  40 0004 5843     		muls	r0, r3, r0
  41              	.LVL1:
  22:source\adc_dac/adc.c **** 
  23:source\adc_dac/adc.c **** }
  42              		.loc 1 23 1 view .LVU5
  43 0006 C00B     		lsrs	r0, r0, #15
  44 0008 7047     		bx	lr
  45              		.cfi_endproc
  46              	.LFE123:
  48              		.global	__aeabi_f2d
  49              		.global	__aeabi_dmul
  50              		.global	__aeabi_dsub
  51              		.global	__aeabi_ddiv
  52              		.global	__aeabi_dadd
  53              		.global	__aeabi_d2iz
  54              		.section	.text.cal_temperature,"ax",%progbits
  55              		.align	1
  56              		.global	cal_temperature
  57              		.syntax unified
  58              		.thumb
  59              		.thumb_func
  61              	cal_temperature:
  62              	.LVL2:
  63              	.LFB124:
  24:source\adc_dac/adc.c **** 
  25:source\adc_dac/adc.c **** 
  26:source\adc_dac/adc.c **** short cal_temperature (unsigned short adc_data)
  27:source\adc_dac/adc.c **** {
  64              		.loc 1 27 1 is_stmt 1 view -0
  65              		.cfi_startproc
  66              		@ args = 0, pretend = 0, frame = 0
  67              		@ frame_needed = 0, uses_anonymous_args = 0
  28:source\adc_dac/adc.c ****       unsigned int adcx;
  68              		.loc 1 28 7 view .LVU7
  29:source\adc_dac/adc.c ****       short result;
  69              		.loc 1 29 7 view .LVU8
  30:source\adc_dac/adc.c ****       double temperate;
  70              		.loc 1 30 7 view .LVU9
  31:source\adc_dac/adc.c ****       adcx = adc_data;
  71              		.loc 1 31 7 view .LVU10
  27:source\adc_dac/adc.c ****       unsigned int adcx;
  72              		.loc 1 27 1 is_stmt 0 view .LVU11
  73 0000 07EE900A 		vmov	s15, r0	@ int
  74              	.LVL3:
  32:source\adc_dac/adc.c ****       temperate = (float)adcx * (3.3 / 4096);
  75              		.loc 1 32 7 is_stmt 1 view .LVU12
  33:source\adc_dac/adc.c ****       temperate = (temperate - 0.76) / 0.0025 + (25 + T_OFFSET);
  76              		.loc 1 33 7 view .LVU13
  32:source\adc_dac/adc.c ****       temperate = (float)adcx * (3.3 / 4096);
  77              		.loc 1 32 19 is_stmt 0 view .LVU14
  78 0004 F8EE677A 		vcvt.f32.u32	s15, s15
  79              	.LVL4:
  27:source\adc_dac/adc.c ****       unsigned int adcx;
  80              		.loc 1 27 1 view .LVU15
  81 0008 08B5     		push	{r3, lr}
  82              		.cfi_def_cfa_offset 8
  83              		.cfi_offset 3, -8
  84              		.cfi_offset 14, -4
  32:source\adc_dac/adc.c ****       temperate = (float)adcx * (3.3 / 4096);
  85              		.loc 1 32 19 view .LVU16
  86 000a 17EE900A 		vmov	r0, s15
  87              	.LVL5:
  32:source\adc_dac/adc.c ****       temperate = (float)adcx * (3.3 / 4096);
  88              		.loc 1 32 19 view .LVU17
  89 000e FFF7FEFF 		bl	__aeabi_f2d
  90              	.LVL6:
  32:source\adc_dac/adc.c ****       temperate = (float)adcx * (3.3 / 4096);
  91              		.loc 1 32 17 view .LVU18
  92 0012 0FA3     		adr	r3, .L3+8
  93 0014 D3E90023 		ldrd	r2, [r3]
  94 0018 FFF7FEFF 		bl	__aeabi_dmul
  95              	.LVL7:
  96              		.loc 1 33 30 view .LVU19
  97 001c 0EA3     		adr	r3, .L3+16
  98 001e D3E90023 		ldrd	r2, [r3]
  99 0022 FFF7FEFF 		bl	__aeabi_dsub
 100              	.LVL8:
 101              		.loc 1 33 38 view .LVU20
 102 0026 0EA3     		adr	r3, .L3+24
 103 0028 D3E90023 		ldrd	r2, [r3]
 104 002c FFF7FEFF 		bl	__aeabi_ddiv
 105              	.LVL9:
  34:source\adc_dac/adc.c ****       result = temperate * 100;
 106              		.loc 1 34 7 is_stmt 1 view .LVU21
  35:source\adc_dac/adc.c ****       return result;
 107              		.loc 1 35 7 view .LVU22
  33:source\adc_dac/adc.c ****       temperate = (temperate - 0.76) / 0.0025 + (25 + T_OFFSET);
 108              		.loc 1 33 17 is_stmt 0 view .LVU23
 109 0030 054B     		ldr	r3, .L3
 110 0032 0022     		movs	r2, #0
 111 0034 FFF7FEFF 		bl	__aeabi_dadd
 112              	.LVL10:
  34:source\adc_dac/adc.c ****       result = temperate * 100;
 113              		.loc 1 34 26 view .LVU24
 114 0038 044B     		ldr	r3, .L3+4
 115 003a 0022     		movs	r2, #0
 116 003c FFF7FEFF 		bl	__aeabi_dmul
 117              	.LVL11:
  34:source\adc_dac/adc.c ****       result = temperate * 100;
 118              		.loc 1 34 14 view .LVU25
 119 0040 FFF7FEFF 		bl	__aeabi_d2iz
 120              	.LVL12:
  36:source\adc_dac/adc.c **** }
 121              		.loc 1 36 1 view .LVU26
 122 0044 00B2     		sxth	r0, r0
 123 0046 08BD     		pop	{r3, pc}
 124              	.L4:
 125              		.align	3
 126              	.L3:
 127 0048 00002E40 		.word	1076756480
 128 004c 00005940 		.word	1079574528
 129 0050 66666666 		.word	1717986918
 130 0054 66664A3F 		.word	1061840486
 131 0058 52B81E85 		.word	-2061584302
 132 005c EB51E83F 		.word	1072189931
 133 0060 7B14AE47 		.word	1202590843
 134 0064 E17A643F 		.word	1063549665
 135              		.cfi_endproc
 136              	.LFE124:
 138              		.section	.text.ADC_Config,"ax",%progbits
 139              		.align	1
 140              		.global	ADC_Config
 141              		.syntax unified
 142              		.thumb
 143              		.thumb_func
 145              	ADC_Config:
 146              	.LFB125:
  37:source\adc_dac/adc.c **** 
  38:source\adc_dac/adc.c **** 
  39:source\adc_dac/adc.c **** void ADC_Config (void)
  40:source\adc_dac/adc.c **** {
 147              		.loc 1 40 1 is_stmt 1 view -0
 148              		.cfi_startproc
 149              		@ args = 0, pretend = 0, frame = 40
 150              		@ frame_needed = 0, uses_anonymous_args = 0
  41:source\adc_dac/adc.c ****       ADC_CommonInitTypeDef ADC_CommonInitStructure;
 151              		.loc 1 41 7 view .LVU28
  42:source\adc_dac/adc.c ****       ADC_InitTypeDef ADC_InitStruct;
 152              		.loc 1 42 7 view .LVU29
  43:source\adc_dac/adc.c ****       RCC_AHB1PeriphClockCmd(RCC_AHB1Periph_GPIOF,ENABLE);
 153              		.loc 1 43 7 view .LVU30
  40:source\adc_dac/adc.c ****       ADC_CommonInitTypeDef ADC_CommonInitStructure;
 154              		.loc 1 40 1 is_stmt 0 view .LVU31
 155 0000 70B5     		push	{r4, r5, r6, lr}
 156              		.cfi_def_cfa_offset 16
 157              		.cfi_offset 4, -16
 158              		.cfi_offset 5, -12
 159              		.cfi_offset 6, -8
 160              		.cfi_offset 14, -4
 161              		.loc 1 43 7 view .LVU32
 162 0002 0121     		movs	r1, #1
  40:source\adc_dac/adc.c ****       ADC_CommonInitTypeDef ADC_CommonInitStructure;
 163              		.loc 1 40 1 view .LVU33
 164 0004 8AB0     		sub	sp, sp, #40
 165              		.cfi_def_cfa_offset 56
 166              		.loc 1 43 7 view .LVU34
 167 0006 2020     		movs	r0, #32
 168 0008 FFF7FEFF 		bl	RCC_AHB1PeriphClockCmd
 169              	.LVL13:
  44:source\adc_dac/adc.c ****       GPIO_Init_Pin(GPIOF,GPIO_Pin_7,GPIO_Speed_100MHz,GPIO_Mode_ADC);
 170              		.loc 1 44 7 is_stmt 1 view .LVU35
 171 000c 0323     		movs	r3, #3
 172 000e 1A46     		mov	r2, r3
 173 0010 2B48     		ldr	r0, .L6
  45:source\adc_dac/adc.c ****       RCC_APB2PeriphClockCmd(RCC_APB2Periph_ADC1 | RCC_APB2Periph_ADC3,ENABLE);
  46:source\adc_dac/adc.c ****       RCC_APB2PeriphResetCmd(RCC_APB2Periph_ADC1,ENABLE);
  47:source\adc_dac/adc.c ****       RCC_APB2PeriphResetCmd(RCC_APB2Periph_ADC1,DISABLE);
  48:source\adc_dac/adc.c ****       RCC_APB2PeriphResetCmd(RCC_APB2Periph_ADC3,ENABLE);
  49:source\adc_dac/adc.c ****       RCC_APB2PeriphResetCmd(RCC_APB2Periph_ADC3,DISABLE);
  50:source\adc_dac/adc.c ****       ADC_CommonInitStructure.ADC_Mode = ADC_Mode_Independent;
  51:source\adc_dac/adc.c ****       ADC_CommonInitStructure.ADC_Prescaler = ADC_Prescaler_Div4;
  52:source\adc_dac/adc.c ****       ADC_CommonInitStructure.ADC_DMAAccessMode = ADC_DMAAccessMode_Disabled;
  53:source\adc_dac/adc.c ****       ADC_CommonInitStructure.ADC_TwoSamplingDelay = ADC_TwoSamplingDelay_5Cycles;
  54:source\adc_dac/adc.c ****       ADC_CommonInit(&ADC_CommonInitStructure);
  55:source\adc_dac/adc.c ****       ADC_InitStruct.ADC_Resolution = ADC_Resolution_12b;
  56:source\adc_dac/adc.c ****       ADC_InitStruct.ADC_ScanConvMode = ENABLE;
  57:source\adc_dac/adc.c ****       ADC_InitStruct.ADC_ContinuousConvMode = DISABLE;
  58:source\adc_dac/adc.c ****       ADC_InitStruct.ADC_ExternalTrigConvEdge = ADC_ExternalTrigConvEdge_None;
  59:source\adc_dac/adc.c ****       ADC_InitStruct.ADC_DataAlign = ADC_DataAlign_Right;
  60:source\adc_dac/adc.c ****       ADC_InitStruct.ADC_NbrOfConversion = 1;
  61:source\adc_dac/adc.c ****       ADC_Init(ADC1,&ADC_InitStruct);
 174              		.loc 1 61 7 is_stmt 0 view .LVU36
 175 0012 2C4E     		ldr	r6, .L6+4
  44:source\adc_dac/adc.c ****       GPIO_Init_Pin(GPIOF,GPIO_Pin_7,GPIO_Speed_100MHz,GPIO_Mode_ADC);
 176              		.loc 1 44 7 view .LVU37
 177 0014 8021     		movs	r1, #128
 178 0016 FFF7FEFF 		bl	GPIO_Init_Pin
 179              	.LVL14:
  45:source\adc_dac/adc.c ****       RCC_APB2PeriphClockCmd(RCC_APB2Periph_ADC1 | RCC_APB2Periph_ADC3,ENABLE);
 180              		.loc 1 45 7 is_stmt 1 view .LVU38
 181 001a 0121     		movs	r1, #1
 182 001c 4FF4A060 		mov	r0, #1280
 183 0020 FFF7FEFF 		bl	RCC_APB2PeriphClockCmd
 184              	.LVL15:
  46:source\adc_dac/adc.c ****       RCC_APB2PeriphResetCmd(RCC_APB2Periph_ADC1,DISABLE);
 185              		.loc 1 46 7 view .LVU39
 186 0024 0121     		movs	r1, #1
 187 0026 4FF48070 		mov	r0, #256
 188 002a FFF7FEFF 		bl	RCC_APB2PeriphResetCmd
 189              	.LVL16:
  47:source\adc_dac/adc.c ****       RCC_APB2PeriphResetCmd(RCC_APB2Periph_ADC3,ENABLE);
 190              		.loc 1 47 7 view .LVU40
 191 002e 0021     		movs	r1, #0
 192 0030 4FF48070 		mov	r0, #256
 193 0034 FFF7FEFF 		bl	RCC_APB2PeriphResetCmd
 194              	.LVL17:
  48:source\adc_dac/adc.c ****       RCC_APB2PeriphResetCmd(RCC_APB2Periph_ADC3,DISABLE);
 195              		.loc 1 48 7 view .LVU41
 196 0038 0121     		movs	r1, #1
 197 003a 4FF48060 		mov	r0, #1024
 198 003e FFF7FEFF 		bl	RCC_APB2PeriphResetCmd
 199              	.LVL18:
  49:source\adc_dac/adc.c ****       ADC_CommonInitStructure.ADC_Mode = ADC_Mode_Independent;
 200              		.loc 1 49 7 view .LVU42
 201 0042 0021     		movs	r1, #0
 202 0044 4FF48060 		mov	r0, #1024
 203 0048 FFF7FEFF 		bl	RCC_APB2PeriphResetCmd
 204              	.LVL19:
  50:source\adc_dac/adc.c ****       ADC_CommonInitStructure.ADC_Prescaler = ADC_Prescaler_Div4;
 205              		.loc 1 50 7 view .LVU43
  51:source\adc_dac/adc.c ****       ADC_CommonInitStructure.ADC_DMAAccessMode = ADC_DMAAccessMode_Disabled;
 206              		.loc 1 51 45 is_stmt 0 view .LVU44
 207 004c 0025     		movs	r5, #0
 208 004e 4FF48033 		mov	r3, #65536
  54:source\adc_dac/adc.c ****       ADC_InitStruct.ADC_Resolution = ADC_Resolution_12b;
 209              		.loc 1 54 7 view .LVU45
 210 0052 6846     		mov	r0, sp
  51:source\adc_dac/adc.c ****       ADC_CommonInitStructure.ADC_DMAAccessMode = ADC_DMAAccessMode_Disabled;
 211              		.loc 1 51 45 view .LVU46
 212 0054 CDE90053 		strd	r5, r3, [sp]
  52:source\adc_dac/adc.c ****       ADC_CommonInitStructure.ADC_TwoSamplingDelay = ADC_TwoSamplingDelay_5Cycles;
 213              		.loc 1 52 7 is_stmt 1 view .LVU47
  53:source\adc_dac/adc.c ****       ADC_CommonInit(&ADC_CommonInitStructure);
 214              		.loc 1 53 52 is_stmt 0 view .LVU48
 215 0058 CDE90255 		strd	r5, r5, [sp, #8]
  54:source\adc_dac/adc.c ****       ADC_InitStruct.ADC_Resolution = ADC_Resolution_12b;
 216              		.loc 1 54 7 is_stmt 1 view .LVU49
 217 005c FFF7FEFF 		bl	ADC_CommonInit
 218              	.LVL20:
  55:source\adc_dac/adc.c ****       ADC_InitStruct.ADC_ScanConvMode = ENABLE;
 219              		.loc 1 55 7 view .LVU50
  56:source\adc_dac/adc.c ****       ADC_InitStruct.ADC_ContinuousConvMode = DISABLE;
 220              		.loc 1 56 7 view .LVU51
  57:source\adc_dac/adc.c ****       ADC_InitStruct.ADC_ExternalTrigConvEdge = ADC_ExternalTrigConvEdge_None;
 221              		.loc 1 57 7 view .LVU52
  55:source\adc_dac/adc.c ****       ADC_InitStruct.ADC_ScanConvMode = ENABLE;
 222              		.loc 1 55 37 is_stmt 0 view .LVU53
 223 0060 0495     		str	r5, [sp, #16]
  58:source\adc_dac/adc.c ****       ADC_InitStruct.ADC_DataAlign = ADC_DataAlign_Right;
 224              		.loc 1 58 47 view .LVU54
 225 0062 0695     		str	r5, [sp, #24]
  59:source\adc_dac/adc.c ****       ADC_InitStruct.ADC_NbrOfConversion = 1;
 226              		.loc 1 59 36 view .LVU55
 227 0064 0895     		str	r5, [sp, #32]
  62:source\adc_dac/adc.c ****       ADC_Init(ADC3,&ADC_InitStruct);
 228              		.loc 1 62 7 view .LVU56
 229 0066 184D     		ldr	r5, .L6+8
  56:source\adc_dac/adc.c ****       ADC_InitStruct.ADC_ContinuousConvMode = DISABLE;
 230              		.loc 1 56 39 view .LVU57
 231 0068 0124     		movs	r4, #1
  61:source\adc_dac/adc.c ****       ADC_Init(ADC3,&ADC_InitStruct);
 232              		.loc 1 61 7 view .LVU58
 233 006a 04A9     		add	r1, sp, #16
 234 006c 3046     		mov	r0, r6
  56:source\adc_dac/adc.c ****       ADC_InitStruct.ADC_ContinuousConvMode = DISABLE;
 235              		.loc 1 56 39 view .LVU59
 236 006e ADF81440 		strh	r4, [sp, #20]	@ movhi
  58:source\adc_dac/adc.c ****       ADC_InitStruct.ADC_DataAlign = ADC_DataAlign_Right;
 237              		.loc 1 58 7 is_stmt 1 view .LVU60
  59:source\adc_dac/adc.c ****       ADC_InitStruct.ADC_NbrOfConversion = 1;
 238              		.loc 1 59 7 view .LVU61
  60:source\adc_dac/adc.c ****       ADC_Init(ADC1,&ADC_InitStruct);
 239              		.loc 1 60 7 view .LVU62
  60:source\adc_dac/adc.c ****       ADC_Init(ADC1,&ADC_InitStruct);
 240              		.loc 1 60 42 is_stmt 0 view .LVU63
 241 0072 8DF82440 		strb	r4, [sp, #36]
  61:source\adc_dac/adc.c ****       ADC_Init(ADC3,&ADC_InitStruct);
 242              		.loc 1 61 7 is_stmt 1 view .LVU64
 243 0076 FFF7FEFF 		bl	ADC_Init
 244              	.LVL21:
 245              		.loc 1 62 7 view .LVU65
 246 007a 04A9     		add	r1, sp, #16
 247 007c 2846     		mov	r0, r5
 248 007e FFF7FEFF 		bl	ADC_Init
 249              	.LVL22:
  63:source\adc_dac/adc.c ****       ADC_TempSensorVrefintCmd(ENABLE);
 250              		.loc 1 63 7 view .LVU66
 251 0082 2046     		mov	r0, r4
 252 0084 FFF7FEFF 		bl	ADC_TempSensorVrefintCmd
 253              	.LVL23:
  64:source\adc_dac/adc.c ****       ADC_Cmd(ADC1,ENABLE);
 254              		.loc 1 64 7 view .LVU67
 255 0088 2146     		mov	r1, r4
 256 008a 3046     		mov	r0, r6
 257 008c FFF7FEFF 		bl	ADC_Cmd
 258              	.LVL24:
  65:source\adc_dac/adc.c ****       ADC_Cmd(ADC3,ENABLE);
 259              		.loc 1 65 7 view .LVU68
 260 0090 2146     		mov	r1, r4
 261 0092 2846     		mov	r0, r5
 262 0094 FFF7FEFF 		bl	ADC_Cmd
 263              	.LVL25:
  66:source\adc_dac/adc.c ****       ADC_RegularChannelConfig(ADC1,ADC_Channel_16,1,ADC_SampleTime_15Cycles);
 264              		.loc 1 66 7 view .LVU69
 265 0098 2346     		mov	r3, r4
 266 009a 2246     		mov	r2, r4
 267 009c 3046     		mov	r0, r6
 268 009e 1021     		movs	r1, #16
 269 00a0 FFF7FEFF 		bl	ADC_RegularChannelConfig
 270              	.LVL26:
  67:source\adc_dac/adc.c ****       ADC_RegularChannelConfig(ADC3,ADC_Channel_5,1,ADC_SampleTime_15Cycles);
 271              		.loc 1 67 7 view .LVU70
 272 00a4 2346     		mov	r3, r4
 273 00a6 2246     		mov	r2, r4
 274 00a8 0521     		movs	r1, #5
 275 00aa 2846     		mov	r0, r5
 276 00ac FFF7FEFF 		bl	ADC_RegularChannelConfig
 277              	.LVL27:
  68:source\adc_dac/adc.c ****       ADC_SoftwareStartConv(ADC1);
 278              		.loc 1 68 7 view .LVU71
 279 00b0 3046     		mov	r0, r6
 280 00b2 FFF7FEFF 		bl	ADC_SoftwareStartConv
 281              	.LVL28:
  69:source\adc_dac/adc.c ****       ADC_SoftwareStartConv(ADC3);
 282              		.loc 1 69 7 view .LVU72
 283 00b6 2846     		mov	r0, r5
 284 00b8 FFF7FEFF 		bl	ADC_SoftwareStartConv
 285              	.LVL29:
  70:source\adc_dac/adc.c **** }
 286              		.loc 1 70 1 is_stmt 0 view .LVU73
 287 00bc 0AB0     		add	sp, sp, #40
 288              		.cfi_def_cfa_offset 16
 289              		@ sp needed
 290 00be 70BD     		pop	{r4, r5, r6, pc}
 291              	.L7:
 292              		.align	2
 293              	.L6:
 294 00c0 00140240 		.word	1073878016
 295 00c4 00200140 		.word	1073815552
 296 00c8 00220140 		.word	1073816064
 297              		.cfi_endproc
 298              	.LFE125:
 300              		.section	.text.adc_process,"ax",%progbits
 301              		.align	1
 302              		.global	adc_process
 303              		.syntax unified
 304              		.thumb
 305              		.thumb_func
 307              	adc_process:
 308              	.LFB126:
  71:source\adc_dac/adc.c **** 
  72:source\adc_dac/adc.c **** 
  73:source\adc_dac/adc.c **** void adc_process (void)
  74:source\adc_dac/adc.c **** {
 309              		.loc 1 74 1 is_stmt 1 view -0
 310              		.cfi_startproc
 311              		@ args = 0, pretend = 0, frame = 0
 312              		@ frame_needed = 0, uses_anonymous_args = 0
  75:source\adc_dac/adc.c ****       if (ADC_GetFlagStatus(ADC3,ADC_FLAG_EOC)) {
 313              		.loc 1 75 7 view .LVU75
  74:source\adc_dac/adc.c ****       if (ADC_GetFlagStatus(ADC3,ADC_FLAG_EOC)) {
 314              		.loc 1 74 1 is_stmt 0 view .LVU76
 315 0000 38B5     		push	{r3, r4, r5, lr}
 316              		.cfi_def_cfa_offset 16
 317              		.cfi_offset 3, -16
 318              		.cfi_offset 4, -12
 319              		.cfi_offset 5, -8
 320              		.cfi_offset 14, -4
 321              		.loc 1 75 11 view .LVU77
 322 0002 2948     		ldr	r0, .L16
 323 0004 0221     		movs	r1, #2
 324 0006 FFF7FEFF 		bl	ADC_GetFlagStatus
 325              	.LVL30:
 326              		.loc 1 75 10 view .LVU78
 327 000a 28B3     		cbz	r0, .L9
  76:source\adc_dac/adc.c ****          adc_vsum += ADC_GetConversionValue(ADC3);
 328              		.loc 1 76 10 is_stmt 1 view .LVU79
 329              		.loc 1 76 19 is_stmt 0 view .LVU80
 330 000c 274C     		ldr	r4, .L16+4
 331              		.loc 1 76 22 view .LVU81
 332 000e 2648     		ldr	r0, .L16
 333 0010 FFF7FEFF 		bl	ADC_GetConversionValue
 334              	.LVL31:
 335              		.loc 1 76 19 view .LVU82
 336 0014 2368     		ldr	r3, [r4]
  77:source\adc_dac/adc.c ****          adc_count++;
 337              		.loc 1 77 19 view .LVU83
 338 0016 264A     		ldr	r2, .L16+8
  76:source\adc_dac/adc.c ****          adc_vsum += ADC_GetConversionValue(ADC3);
 339              		.loc 1 76 19 view .LVU84
 340 0018 1844     		add	r0, r0, r3
 341 001a 2060     		str	r0, [r4]
 342              		.loc 1 77 10 is_stmt 1 view .LVU85
 343              		.loc 1 77 19 is_stmt 0 view .LVU86
 344 001c 1388     		ldrh	r3, [r2]
 345 001e 0133     		adds	r3, r3, #1
 346 0020 9BB2     		uxth	r3, r3
 347 0022 1380     		strh	r3, [r2]	@ movhi
  78:source\adc_dac/adc.c ****          if (adc_count >= 100) {
 348              		.loc 1 78 10 is_stmt 1 view .LVU87
 349              		.loc 1 78 24 is_stmt 0 view .LVU88
 350 0024 1388     		ldrh	r3, [r2]
 351 0026 9BB2     		uxth	r3, r3
 352              		.loc 1 78 13 view .LVU89
 353 0028 632B     		cmp	r3, #99
 354 002a 12D9     		bls	.L10
  79:source\adc_dac/adc.c ****       	    adc_count = 0;
 355              		.loc 1 79 12 is_stmt 1 view .LVU90
 356              		.loc 1 79 22 is_stmt 0 view .LVU91
 357 002c 0025     		movs	r5, #0
 358 002e 1580     		strh	r5, [r2]	@ movhi
  80:source\adc_dac/adc.c ****             adc_voltage = convert_voltage(adc_vsum / 100);
 359              		.loc 1 80 13 is_stmt 1 view .LVU92
 360              		.loc 1 80 52 is_stmt 0 view .LVU93
 361 0030 2068     		ldr	r0, [r4]
 362              	.LVL32:
 363              	.LBB4:
 364              	.LBI4:
  17:source\adc_dac/adc.c **** {
 365              		.loc 1 17 16 is_stmt 1 view .LVU94
 366              	.LBB5:
  19:source\adc_dac/adc.c ****       value = (unsigned int)((adc_data * 26406) >> 15);
 367              		.loc 1 19 7 view .LVU95
  20:source\adc_dac/adc.c ****       return (unsigned short)value;
 368              		.loc 1 20 7 view .LVU96
 369              	.LBE5:
 370              	.LBE4:
 371              		.loc 1 80 52 is_stmt 0 view .LVU97
 372 0032 6423     		movs	r3, #100
 373 0034 B0FBF3F0 		udiv	r0, r0, r3
 374              	.LVL33:
 375              	.LBB8:
 376              	.LBB6:
  20:source\adc_dac/adc.c ****       return (unsigned short)value;
 377              		.loc 1 20 40 view .LVU98
 378 0038 46F22673 		movw	r3, #26406
 379 003c 80B2     		uxth	r0, r0
 380 003e 5843     		muls	r0, r3, r0
 381              	.LBE6:
 382              	.LBE8:
 383              		.loc 1 80 25 view .LVU99
 384 0040 1C4B     		ldr	r3, .L16+12
 385              	.LBB9:
 386              	.LBB7:
  20:source\adc_dac/adc.c ****       return (unsigned short)value;
 387              		.loc 1 20 49 view .LVU100
 388 0042 C013     		asrs	r0, r0, #15
 389              	.LVL34:
  21:source\adc_dac/adc.c **** 
 390              		.loc 1 21 7 is_stmt 1 view .LVU101
  21:source\adc_dac/adc.c **** 
 391              		.loc 1 21 7 is_stmt 0 view .LVU102
 392              	.LBE7:
 393              	.LBE9:
 394              		.loc 1 80 27 view .LVU103
 395 0044 1880     		strh	r0, [r3]	@ movhi
  81:source\adc_dac/adc.c ****             //lcd_printf(1,3,"adc3 %4d mV dac1 %4d mV",adc_voltage,adc_voltage + 1000);
  82:source\adc_dac/adc.c ****             Dac1_Set_Voltage(adc_voltage + 1000);
 396              		.loc 1 82 13 is_stmt 1 view .LVU104
 397 0046 00F57A70 		add	r0, r0, #1000
 398              	.LVL35:
 399              		.loc 1 82 13 is_stmt 0 view .LVU105
 400 004a 80B2     		uxth	r0, r0
 401              	.LVL36:
 402              		.loc 1 82 13 view .LVU106
 403 004c FFF7FEFF 		bl	Dac1_Set_Voltage
 404              	.LVL37:
  83:source\adc_dac/adc.c ****             adc_vsum = 0;
 405              		.loc 1 83 13 is_stmt 1 view .LVU107
 406              		.loc 1 83 22 is_stmt 0 view .LVU108
 407 0050 2560     		str	r5, [r4]
 408              	.LVL38:
 409              	.L10:
  84:source\adc_dac/adc.c ****          }
  85:source\adc_dac/adc.c ****          ADC_SoftwareStartConv(ADC3);
 410              		.loc 1 85 10 is_stmt 1 view .LVU109
 411 0052 1548     		ldr	r0, .L16
 412 0054 FFF7FEFF 		bl	ADC_SoftwareStartConv
 413              	.LVL39:
 414              	.L9:
  86:source\adc_dac/adc.c ****       }
  87:source\adc_dac/adc.c ****       if (ADC_GetFlagStatus(ADC1,ADC_FLAG_EOC)) {
 415              		.loc 1 87 7 view .LVU110
 416              		.loc 1 87 11 is_stmt 0 view .LVU111
 417 0058 1748     		ldr	r0, .L16+16
 418 005a 0221     		movs	r1, #2
 419 005c FFF7FEFF 		bl	ADC_GetFlagStatus
 420              	.LVL40:
 421              		.loc 1 87 10 view .LVU112
 422 0060 00B3     		cbz	r0, .L8
  88:source\adc_dac/adc.c ****          adc_tsum += ADC_GetConversionValue(ADC1);
 423              		.loc 1 88 10 is_stmt 1 view .LVU113
 424              		.loc 1 88 19 is_stmt 0 view .LVU114
 425 0062 164C     		ldr	r4, .L16+20
 426              		.loc 1 88 22 view .LVU115
 427 0064 1448     		ldr	r0, .L16+16
 428 0066 FFF7FEFF 		bl	ADC_GetConversionValue
 429              	.LVL41:
 430              		.loc 1 88 19 view .LVU116
 431 006a 2368     		ldr	r3, [r4]
  89:source\adc_dac/adc.c ****          adc_tcount++;
 432              		.loc 1 89 20 view .LVU117
 433 006c 144A     		ldr	r2, .L16+24
  88:source\adc_dac/adc.c ****          adc_tsum += ADC_GetConversionValue(ADC1);
 434              		.loc 1 88 19 view .LVU118
 435 006e 1844     		add	r0, r0, r3
 436 0070 2060     		str	r0, [r4]
 437              		.loc 1 89 10 is_stmt 1 view .LVU119
 438              		.loc 1 89 20 is_stmt 0 view .LVU120
 439 0072 1388     		ldrh	r3, [r2]
 440 0074 0133     		adds	r3, r3, #1
 441 0076 9BB2     		uxth	r3, r3
 442 0078 1380     		strh	r3, [r2]	@ movhi
  90:source\adc_dac/adc.c ****          if (adc_tcount >= 100) {
 443              		.loc 1 90 10 is_stmt 1 view .LVU121
 444              		.loc 1 90 25 is_stmt 0 view .LVU122
 445 007a 1388     		ldrh	r3, [r2]
 446 007c 9BB2     		uxth	r3, r3
 447              		.loc 1 90 13 view .LVU123
 448 007e 632B     		cmp	r3, #99
 449 0080 0BD9     		bls	.L12
  91:source\adc_dac/adc.c ****       	    adc_tcount = 0;
 450              		.loc 1 91 12 is_stmt 1 view .LVU124
 451              		.loc 1 91 23 is_stmt 0 view .LVU125
 452 0082 0025     		movs	r5, #0
 453 0084 1580     		strh	r5, [r2]	@ movhi
  92:source\adc_dac/adc.c ****             adc_temperature = cal_temperature(adc_tsum / 100);
 454              		.loc 1 92 13 is_stmt 1 view .LVU126
 455              		.loc 1 92 56 is_stmt 0 view .LVU127
 456 0086 6423     		movs	r3, #100
 457 0088 2068     		ldr	r0, [r4]
 458 008a B0FBF3F0 		udiv	r0, r0, r3
 459              		.loc 1 92 31 view .LVU128
 460 008e 80B2     		uxth	r0, r0
 461 0090 FFF7FEFF 		bl	cal_temperature
 462              	.LVL42:
 463              		.loc 1 92 29 view .LVU129
 464 0094 0B4B     		ldr	r3, .L16+28
  93:source\adc_dac/adc.c ****             //lcd_printf(1,4,"Temperature %3d.%.2d ",adc_temperature / 100,adc_temperature % 100);
  94:source\adc_dac/adc.c ****             adc_tsum = 0;
 465              		.loc 1 94 22 view .LVU130
 466 0096 2560     		str	r5, [r4]
  92:source\adc_dac/adc.c ****             adc_temperature = cal_temperature(adc_tsum / 100);
 467              		.loc 1 92 29 view .LVU131
 468 0098 1880     		strh	r0, [r3]	@ movhi
 469              		.loc 1 94 13 is_stmt 1 view .LVU132
 470              	.L12:
  95:source\adc_dac/adc.c ****          }
  96:source\adc_dac/adc.c ****          ADC_SoftwareStartConv(ADC1);
 471              		.loc 1 96 10 view .LVU133
  97:source\adc_dac/adc.c ****       }
  98:source\adc_dac/adc.c **** }...
 472              		.loc 1 98 1 is_stmt 0 view .LVU134
 473 009a BDE83840 		pop	{r3, r4, r5, lr}
 474              		.cfi_remember_state
 475              		.cfi_restore 14
 476              		.cfi_restore 5
 477              		.cfi_restore 4
 478              		.cfi_restore 3
 479              		.cfi_def_cfa_offset 0
  96:source\adc_dac/adc.c ****          ADC_SoftwareStartConv(ADC1);
 480              		.loc 1 96 10 view .LVU135
 481 009e 0648     		ldr	r0, .L16+16
 482 00a0 FFF7FEBF 		b	ADC_SoftwareStartConv
 483              	.LVL43:
 484              	.L8:
 485              		.cfi_restore_state
 486              		.loc 1 98 1 view .LVU136
 487 00a4 38BD     		pop	{r3, r4, r5, pc}
 488              	.L17:
 489 00a6 00BF     		.align	2
 490              	.L16:
 491 00a8 00220140 		.word	1073816064
 492 00ac 00000000 		.word	adc_vsum
 493 00b0 00000000 		.word	adc_count
 494 00b4 00000000 		.word	adc_voltage
 495 00b8 00200140 		.word	1073815552
 496 00bc 00000000 		.word	adc_tsum
 497 00c0 00000000 		.word	adc_tcount
 498 00c4 00000000 		.word	adc_temperature
 499              		.cfi_endproc
 500              	.LFE126:
 502              		.global	adc_temperature
 503              		.section	.bss.adc_temperature,"aw",%nobits
 504              		.align	1
 507              	adc_temperature:
 508 0000 0000     		.space	2
 509              		.global	adc_voltage
 510              		.section	.bss.adc_voltage,"aw",%nobits
 511              		.align	1
 514              	adc_voltage:
 515 0000 0000     		.space	2
 516              		.global	adc_tsum
 517              		.section	.bss.adc_tsum,"aw",%nobits
 518              		.align	2
 521              	adc_tsum:
 522 0000 00000000 		.space	4
 523              		.global	adc_vsum
 524              		.section	.bss.adc_vsum,"aw",%nobits
 525              		.align	2
 528              	adc_vsum:
 529 0000 00000000 		.space	4
 530              		.global	adc_tcount
 531              		.section	.bss.adc_tcount,"aw",%nobits
 532              		.align	1
 535              	adc_tcount:
 536 0000 0000     		.space	2
 537              		.global	adc_count
 538              		.section	.bss.adc_count,"aw",%nobits
 539              		.align	1
 542              	adc_count:
 543 0000 0000     		.space	2
 544              		.text
 545              	.Letext0:
 546              		.file 2 "c:\\program files (x86)\\arm gnu toolchain arm-none-eabi\\12.2 mpacbti-rel1\\arm-none-eab
 547              		.file 3 "c:\\program files (x86)\\arm gnu toolchain arm-none-eabi\\12.2 mpacbti-rel1\\arm-none-eab
 548              		.file 4 "c:/project/stm32fx_iolib/stm32fxxx/stm32f4xx/stm32f4xx.h"
 549              		.file 5 "c:/project/stm32fx_iolib/stm32f4x_iolib/include/stm32f4xx_adc.h"
 550              		.file 6 "c:/project/stm32fx_iolib/stm32f4x_iolib/include/stm32f4xx_gpio.h"
 551              		.file 7 "source\\adc_dac\\../prototype.h"
 552              		.file 8 "c:/project/stm32fx_iolib/stm32f4x_iolib/include/stm32f4xx_rcc.h"
DEFINED SYMBOLS
                            *ABS*:00000000 adc.c
C:\Users\37593\AppData\Local\Temp\ccIcgOjK.s:21     .text.convert_voltage:00000000 $t
C:\Users\37593\AppData\Local\Temp\ccIcgOjK.s:27     .text.convert_voltage:00000000 convert_voltage
C:\Users\37593\AppData\Local\Temp\ccIcgOjK.s:55     .text.cal_temperature:00000000 $t
C:\Users\37593\AppData\Local\Temp\ccIcgOjK.s:61     .text.cal_temperature:00000000 cal_temperature
C:\Users\37593\AppData\Local\Temp\ccIcgOjK.s:127    .text.cal_temperature:00000048 $d
C:\Users\37593\AppData\Local\Temp\ccIcgOjK.s:139    .text.ADC_Config:00000000 $t
C:\Users\37593\AppData\Local\Temp\ccIcgOjK.s:145    .text.ADC_Config:00000000 ADC_Config
C:\Users\37593\AppData\Local\Temp\ccIcgOjK.s:294    .text.ADC_Config:000000c0 $d
C:\Users\37593\AppData\Local\Temp\ccIcgOjK.s:301    .text.adc_process:00000000 $t
C:\Users\37593\AppData\Local\Temp\ccIcgOjK.s:307    .text.adc_process:00000000 adc_process
C:\Users\37593\AppData\Local\Temp\ccIcgOjK.s:491    .text.adc_process:000000a8 $d
C:\Users\37593\AppData\Local\Temp\ccIcgOjK.s:528    .bss.adc_vsum:00000000 adc_vsum
C:\Users\37593\AppData\Local\Temp\ccIcgOjK.s:542    .bss.adc_count:00000000 adc_count
C:\Users\37593\AppData\Local\Temp\ccIcgOjK.s:514    .bss.adc_voltage:00000000 adc_voltage
C:\Users\37593\AppData\Local\Temp\ccIcgOjK.s:521    .bss.adc_tsum:00000000 adc_tsum
C:\Users\37593\AppData\Local\Temp\ccIcgOjK.s:535    .bss.adc_tcount:00000000 adc_tcount
C:\Users\37593\AppData\Local\Temp\ccIcgOjK.s:507    .bss.adc_temperature:00000000 adc_temperature
C:\Users\37593\AppData\Local\Temp\ccIcgOjK.s:504    .bss.adc_temperature:00000000 $d
C:\Users\37593\AppData\Local\Temp\ccIcgOjK.s:511    .bss.adc_voltage:00000000 $d
C:\Users\37593\AppData\Local\Temp\ccIcgOjK.s:518    .bss.adc_tsum:00000000 $d
C:\Users\37593\AppData\Local\Temp\ccIcgOjK.s:525    .bss.adc_vsum:00000000 $d
C:\Users\37593\AppData\Local\Temp\ccIcgOjK.s:532    .bss.adc_tcount:00000000 $d
C:\Users\37593\AppData\Local\Temp\ccIcgOjK.s:539    .bss.adc_count:00000000 $d

UNDEFINED SYMBOLS
__aeabi_f2d
__aeabi_dmul
__aeabi_dsub
__aeabi_ddiv
__aeabi_dadd
__aeabi_d2iz
RCC_AHB1PeriphClockCmd
GPIO_Init_Pin
RCC_APB2PeriphClockCmd
RCC_APB2PeriphResetCmd
ADC_CommonInit
ADC_Init
ADC_TempSensorVrefintCmd
ADC_Cmd
ADC_RegularChannelConfig
ADC_SoftwareStartConv
ADC_GetFlagStatus
ADC_GetConversionValue
Dac1_Set_Voltage
